{"version":3,"sources":["../../js/dismissable_toast_maker.js"],"names":["Object","defineProperty","exports","value","_iziToast","require","_iziToast2","_interopRequireDefault","obj","__esModule","default","makeInfoToast","settings","uuid","makeUUID","id","timeout","info","toast","document","getElementById","hide","replace","c","crypto","getRandomValues","Uint8Array","toString"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;;AAIA,IAAIC,YAAYC,QAAQ,UAAR,CAAhB;;AAEA,IAAIC,aAAaC,uBAAuBH,SAAvB,CAAjB;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,WAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;AACA,SAASG,aAAT,CAAuBC,QAAvB,EAAiC;AAC7B,QAAIC,OAAOC,UAAX;AACAF,aAASG,EAAT,GAAcF,IAAd;AACAD,aAASI,OAAT,GAAmB,KAAnB;AACAV,eAAWI,OAAX,CAAmBO,IAAnB,CAAwBL,QAAxB;;AAEA,WAAO,YAAY;AACf,YAAIM,QAAQC,SAASC,cAAT,CAAwBP,IAAxB,CAAZ;AACAP,mBAAWI,OAAX,CAAmBW,IAAnB,CAAwB,EAAxB,EAA4BH,KAA5B;AACH,KAHD;AAIH;;AAED,SAASJ,QAAT,GAAoB;AAChB;AACA,WAAO,CAAC,CAAC,GAAD,IAAQ,CAAC,GAAT,GAAe,CAAC,GAAhB,GAAsB,CAAC,GAAvB,GAA6B,CAAC,IAA/B,EAAqCQ,OAArC,CAA6C,QAA7C,EAAuD,UAAUC,CAAV,EAAa;AACvE,eAAO,CAACA,IAAIC,OAAOC,eAAP,CAAuB,IAAIC,UAAJ,CAAe,CAAf,CAAvB,EAA0C,CAA1C,IAA+C,MAAMH,IAAI,CAA9D,EAAiEI,QAAjE,CAA0E,EAA1E,CAAP;AACH,KAFM,CAAP;AAGH;;AAEDzB,QAAQQ,OAAR,GAAkBC,aAAlB;AACA","file":"dismissable_toast_maker.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _iziToast = require(\"iziToast\");\n\nvar _iziToast2 = _interopRequireDefault(_iziToast);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//Creates and shows an info iziToast, returning a function that dismisses it\nfunction makeInfoToast(settings) {\n    var uuid = makeUUID();\n    settings.id = uuid;\n    settings.timeout = false;\n    _iziToast2.default.info(settings);\n\n    return function () {\n        var toast = document.getElementById(uuid);\n        _iziToast2.default.hide({}, toast);\n    };\n}\n\nfunction makeUUID() {\n    // Random string with very little collision possibility\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, function (c) {\n        return (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n    });\n}\n\nexports.default = makeInfoToast;\n//# sourceMappingURL=dismissable_toast_maker.js.map"]}