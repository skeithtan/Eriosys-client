{"version":3,"sources":["../../../../../js/tabs/Reminders/tabs/sidebar_panes.js"],"names":["MemorandumsSidebarPane","props","state","memorandum","renewModalIsOpen","toggleRenewModal","bind","setState","linkages","refresh","MemorandumDetails","collegeInitiator","college_initiator","colleges","formatDate","date","format","viewMemorandum","shell","require","openExternal","memorandum_file","category","date_effective","date_expiration","MemorandumLinkages","body","rows","map","linkage","index","length"],"mappings":"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","file":"sidebar_panes.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport settings from \"../../../settings\";\nimport { Button, } from \"reactstrap\";\nimport {\n    Section,\n    SectionRow,\n    SectionRowContent,\n    SectionRowTitle,\n    SectionTable,\n    SectionTitle,\n} from \"../../../components/section\";\nimport { MemorandumFormModal } from \"../../Institutions/modals\";\n\nclass MemorandumsSidebarPane extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            memorandum : props.memorandum,\n            renewModalIsOpen : false,\n        };\n\n        this.toggleRenewModal = this.toggleRenewModal.bind(this);\n    }\n\n    toggleRenewModal() {\n        this.setState({\n            renewModalIsOpen : !this.state.renewModalIsOpen,\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            memorandum : props.memorandum,\n        });\n    }\n\n    render() {\n        const memorandum = this.state.memorandum;\n        return (\n            <div className=\"p-0 h-100 d-flex flex-column\">\n                <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0\">Memorandum</h5>\n                    </div>\n                </div>\n\n                <div className=\"page-body\">\n                    <MemorandumDetails memorandum={ memorandum }\n                                       toggleRenewModal={ this.toggleRenewModal }/>\n                    <MemorandumLinkages linkages={ memorandum.linkages }/>\n\n                    { memorandum !== null && <MemorandumFormModal edit\n                                                                  isOpen={ this.state.renewModalIsOpen }\n                                                                  memorandum={ memorandum }\n                                                                  toggle={ this.toggleRenewModal }\n                                                                  refresh={ this.props.refresh }/> }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        let collegeInitiator = \"None\";\n\n        if (memorandum.college_initiator !== null) {\n            collegeInitiator = settings.colleges[memorandum.college_initiator];\n        }\n\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const viewMemorandum = () => {\n            const shell = require(\"electron\").shell;\n            shell.openExternal(memorandum.memorandum_file);\n        };\n\n        return (\n            <Section>\n                <SectionTitle>Details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Memorandum Type</SectionRowTitle>\n                        <SectionRowContent>{ memorandum.category }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Date Effective</SectionRowTitle>\n                        <SectionRowContent>{ formatDate(memorandum.date_effective) }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Expiration Date</SectionRowTitle>\n                        <SectionRowContent>{ formatDate(memorandum.date_expiration) }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>College Initiator</SectionRowTitle>\n                        <SectionRowContent>{ collegeInitiator }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    className=\"mr-2\"\n                                    onClick={ viewMemorandum }>View</Button>\n\n                            <Button outline\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    onClick={ this.props.toggleRenewModal }>Renew</Button>\n                        </SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass MemorandumLinkages extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let body = (\n            <div className=\"p-4 pt-5 pb-5 bg-light text-center\">\n                <h5 className=\"text-secondary\">There are no linkages for this memorandum.</h5>\n            </div>\n        );\n\n\n        const rows = this.props.linkages.map((linkage, index) => {\n            return (\n                <SectionRow key={ index }>{ settings.linkages[linkage] }</SectionRow>\n            );\n        });\n\n        if (this.props.linkages.length > 0) {\n            body = (\n                <SectionTable>\n                    { rows }\n                </SectionTable>\n            );\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Linkages</SectionTitle>\n                { body }\n            </Section>\n        );\n    }\n}\n\nexport {\n    MemorandumsSidebarPane,\n};"]}