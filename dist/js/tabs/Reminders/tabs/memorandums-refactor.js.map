{"version":3,"sources":["../../../../../js/tabs/Reminders/tabs/memorandums-refactor.js"],"names":["fetchInstitutions","onResult","query","then","makeMemorandumInfo","memorandumType","institution","memorandum","name","id","category","memorandum_file","college_initiator","linkages","date_effective","date_expiration","makeMemorandumsFromInstitutions","institutions","memorandums","forEach","latest_mou","push","latest_moa","sort","a","b","diff","Memorandums","props","state","activeCategory","activeMemorandum","setState","result","setMemorandums","bind","setActiveCategory","setActiveMemorandum","refreshMemorandums","setSidebarContent","filteredMemorandums","MemorandumsHead","onCategoryChange","event","target","value","MemorandumsTable","emptyState","length","rows","map","index","isActive","onMemorandumRowClick","MemorandumRow","expirationToNow","fromNow","now","dateExpirationMoment","monthsBeforeExpiration","hasExpired","urgent","expirationClass","onClick","format"],"mappings":"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","file":"memorandums-refactor.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport moment from \"moment\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport { Table } from \"reactstrap\";\nimport {\n    Input,\n} from \"reactstrap\";\nimport { MemorandumsSidebarPane } from \"./sidebar_panes\";\n\nfunction fetchInstitutions(onResult) {\n    graphql.query(`\n    {\n        institutions {\n            id\n            name\n            latest_moa {\n                id\n                category\n                memorandum_file\n                college_initiator\n                linkages\n                date_effective\n                date_expiration\n            }\n            latest_mou {\n                id\n                category\n                memorandum_file\n                college_initiator\n                linkages\n                date_effective\n                date_expiration\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nfunction makeMemorandumInfo(memorandumType, institution, memorandum) {\n    return {\n        institution : {\n            name : institution.name,\n            id : institution.id,\n        },\n        memorandum : {\n            id : memorandum.id,\n            category : memorandumType,\n            memorandum_file : memorandum.memorandum_file,\n            college_initiator : memorandum.college_initiator,\n            linkages : memorandum.linkages,\n            date_effective : moment(memorandum.date_effective),\n            date_expiration : moment(memorandum.date_expiration),\n        },\n    };\n}\n\nfunction makeMemorandumsFromInstitutions(institutions) {\n    let memorandums = [];\n\n\n    institutions.forEach(institution => {\n        if (institution.latest_mou !== null && institution.latest_mou.date_expiration !== null) {\n            memorandums.push(makeMemorandumInfo(\"Understanding\", institution, institution.latest_mou));\n        }\n\n        if (institution.latest_moa !== null && institution.latest_moa.date_expiration !== null) {\n            memorandums.push(makeMemorandumInfo(\"Agreement\", institution, institution.latest_moa));\n        }\n    });\n\n    memorandums.sort((a, b) => {\n        return a.memorandum.date_expiration.diff(b.memorandum.date_expiration);\n    });\n\n    return memorandums;\n}\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeCategory : \"Agreement\",\n            institutions : null,\n            activeMemorandum : null,\n        };\n\n        fetchInstitutions(result => {\n            this.setState({\n                institutions : result.institutions,\n            });\n        });\n\n        this.setMemorandums = this.setMemorandums.bind(this);\n        this.setActiveCategory = this.setActiveCategory.bind(this);\n        this.setActiveMemorandum = this.setActiveMemorandum.bind(this);\n        this.refreshMemorandums = this.refreshMemorandums.bind(this);\n    }\n\n    setActiveCategory(category) {\n        this.setState({\n            activeCategory : category,\n            activeMemorandum : null,\n        });\n\n        this.props.setSidebarContent(null);\n    }\n\n    setMemorandums(category) {\n        let filteredMemorandums = [];\n\n        const institutions = this.state.institutions;\n\n        if (institutions !== null) {\n            const memorandums = makeMemorandumsFromInstitutions(institutions);\n\n            memorandums.forEach(memorandum => {\n                if (memorandum.memorandum.category === category) {\n                    filteredMemorandums.push(memorandum);\n                }\n            });\n        }\n\n        return filteredMemorandums;\n    }\n\n    setActiveMemorandum(memorandum) {\n        this.setState({\n            activeMemorandum : memorandum,\n        });\n\n        this.props.setSidebarContent(<MemorandumsSidebarPane memorandum={ memorandum.memorandum }\n                                                             refresh={ this.refreshMemorandums }/>);\n    }\n\n    refreshMemorandums() {\n        fetchInstitutions(result => {\n            this.setState({\n                institutions : result.institutions,\n            });\n        });\n\n        this.setMemorandums(this.state.activeCategory);\n    }\n\n    render() {\n        const memorandums = this.setMemorandums(this.state.activeCategory);\n\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <MemorandumsHead setMemorandums={ this.setMemorandums }\n                                 setActiveCategory={ this.setActiveCategory }/>\n                <MemorandumsTable activeCategory={ this.state.activeCategory }\n                                  memorandums={ memorandums }\n                                  activeMemorandum={ this.state.activeMemorandum }\n                                  setActiveMemorandum={ this.setActiveMemorandum }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumsHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onCategoryChange = this.onCategoryChange.bind(this);\n    }\n\n    onCategoryChange(event) {\n        this.props.setActiveCategory(event.target.value);\n        this.props.setMemorandums(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">\n                        Memorandum Reminders\n                    </h4>\n                </div>\n                <div className=\"page-head-actions\">\n                    <Input type=\"select\"\n                           className=\"btn-outline-success\"\n                           defaultValue=\"MOA\"\n                           onChange={ this.onCategoryChange }>\n                        <option value=\"Agreement\">Agreement</option>\n                        <option value=\"Understanding\">Understanding</option>\n                    </Input>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumsTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>There are no expiring Memorandums of { this.props.activeCategory }</h3>\n            </div>\n        );\n    }\n\n    render() {\n        const memorandums = this.props.memorandums;\n\n        if (memorandums === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (memorandums.length === 0) {\n            return this.emptyState();\n        }\n\n        const rows = memorandums.map((memorandum, index) => {\n            let isActive = false;\n\n            if (this.props.activeMemorandum !== null) {\n                isActive = this.props.activeMemorandum.memorandum.id === memorandum.memorandum.id;\n            }\n\n            const onMemorandumRowClick = () => this.props.setActiveMemorandum(memorandum);\n\n            return <MemorandumRow key={ index }\n                                  memorandum={ memorandum }\n                                  isActive={ isActive }\n                                  onClick={ onMemorandumRowClick }/>;\n        });\n\n        return (\n            <Table hover>\n                <thead>\n                <tr>\n                    <th>Institution Name</th>\n                    <th>Date Effective</th>\n                    <th>Date of Expiration</th>\n                </tr>\n                </thead>\n                <tbody>\n                { rows }\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        const expirationToNow = memorandum.memorandum.date_expiration.fromNow();\n\n        const now = moment();\n\n        const dateExpirationMoment = memorandum.memorandum.date_expiration;\n        const monthsBeforeExpiration = dateExpirationMoment.diff(now, \"months\");\n        const hasExpired = dateExpirationMoment.diff(now, \"days\") <= 0;\n\n        const urgent = monthsBeforeExpiration <= 6;\n\n        let expirationClass = \"\";\n        if (urgent && !this.props.isActive) {\n            expirationClass += \"table-danger\";\n        } else if (!urgent && !this.props.isActive) {\n            expirationClass += \"table-success\";\n        } else if (urgent && this.props.isActive) {\n            expirationClass += \"text-white bg-danger\";\n        } else {\n            expirationClass += \"text-white bg-success\";\n        }\n\n        return (\n            <tr className={ expirationClass }\n                onClick={ this.props.onClick }>\n                <td>{ memorandum.institution.name }</td>\n                <td>{ memorandum.memorandum.date_effective.format(\"LL\") }</td>\n                <td>{ hasExpired ? \"Expired\" : \"Expires\" } { expirationToNow }</td>\n            </tr>\n        );\n    }\n}\n\nexport default Memorandums;"]}