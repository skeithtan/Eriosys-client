{"version":3,"sources":["../../../../../js/tabs/Reminders/tabs/memorandums-refactor.js"],"names":["fetchInstitutionAgreements","onResult","query","then","fetchInstitutionUnderstandings","Memorandums","props","state","memorandums","activeMemorandum","setState","result","institutions","setMemorandums","bind","category","MemorandumsHead","onCategoryChange","event","target","value","MemorandumsBody","MemorandumRow"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAIA;;AAGA;;;;;;;;;;AAEA,SAASA,0BAAT,CAAoCC,QAApC,EAA8C;AAC1C,sBAAQC,KAAR,4NAYGC,IAZH,CAYQF,QAZR;AAaH;;AAED,SAASG,8BAAT,CAAwCH,QAAxC,EAAkD;AAC9C,sBAAQC,KAAR,4NAYGC,IAZH,CAYQF,QAZR;AAaH;;IAEKI,W;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,yBAAc,IADL;AAETC,8BAAmB;AAFV,SAAb;;AAKAT,mCAA2B,kBAAU;AACjC,kBAAKU,QAAL,CAAc;AACVF,6BAAcG,OAAOC;AADX,aAAd;AAGH,SAJD;;AAMA,cAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AAde;AAelB;;;;uCAEcC,Q,EAAU;AAAA;;AACrB,iBAAKL,QAAL,CAAc;AACVF,6BAAc,IADJ,CACU;AADV,aAAd;;AAIA,gBAAIO,aAAa,KAAjB,EAAwB;AACpBf,2CAA2B,kBAAU;AACjC,2BAAKU,QAAL,CAAc;AACVF,qCAAcG,OAAOC;AADX,qBAAd;AAGH,iBAJD;AAKH,aAND,MAQK;AACDR,+CAA+B,kBAAU;AACrC,2BAAKM,QAAL,CAAc;AACVF,qCAAcG,OAAOC;AADX,qBAAd;AAGH,iBAJD;AAKH;AACJ;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,0BAAf;AACI,8CAAC,eAAD,IAAiB,gBAAiB,KAAKC,cAAvC;AADJ,aADJ;AAMH;;;;;;IAGCG,e;;;AACF,6BAAYV,KAAZ,EAAmB;AAAA;;AAAA,uIACTA,KADS;;AAGf,eAAKW,gBAAL,GAAwB,OAAKA,gBAAL,CAAsBH,IAAtB,QAAxB;AAHe;AAIlB;;;;yCAEgBI,K,EAAO;AACpB,iBAAKZ,KAAL,CAAWO,cAAX,CAA0BK,MAAMC,MAAN,CAAaC,KAAvC;AACH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,gDAAf;AACI;AAAA;AAAA,sBAAK,WAAU,SAAf;AACI;AAAA;AAAA,0BAAI,WAAU,+DAAd;AAAA;AAAA;AADJ,iBADJ;AAMI;AAAA;AAAA,sBAAK,WAAU,mBAAf;AACI;AAAA;AAAA,0BAAO,MAAK,QAAZ;AACO,uCAAU,qBADjB;AAEO,0CAAa,KAFpB;AAGO,sCAAW,KAAKH,gBAHvB;AAII;AAAA;AAAA,8BAAQ,OAAM,KAAd;AAAA;AAAA,yBAJJ;AAKI;AAAA;AAAA,8BAAQ,OAAM,KAAd;AAAA;AAAA;AALJ;AADJ;AANJ,aADJ;AAkBH;;;;;;IAGCI,e;;;AACF,6BAAYf,KAAZ,EAAmB;AAAA;;AAAA,iIACTA,KADS;AAElB;;;;iCAEQ,CAER;;;;;;IAGCgB,a;;;AACF,2BAAYhB,KAAZ,EAAmB;AAAA;;AAAA,6HACTA,KADS;AAElB;;;;iCAEQ,CAER;;;;;;kBAGUD,W","file":"memorandums-refactor.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport moment from \"moment\";\nimport settings from \"../../../settings\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport {\n    SectionRow,\n    SectionRowContent,\n} from \"../../../components/section\";\nimport {\n    Input,\n} from \"reactstrap\";\nimport { MemorandumFormModal } from \"../../Institutions/modals\";\n\nfunction fetchInstitutionAgreements(onResult) {\n    graphql.query(`\n    {\n        institutions {\n            id\n            name\n            latest_moa {\n                id\n                date_effective\n                date_expiration\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchInstitutionUnderstandings(onResult) {\n    graphql.query(`\n    {\n        institutions {\n            id\n            name\n            latest_mou {\n                id\n                date_effective\n                date_expiration\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            memorandums : null,\n            activeMemorandum : null,\n        };\n\n        fetchInstitutionAgreements(result => {\n            this.setState({\n                memorandums : result.institutions,\n            });\n        });\n\n        this.setMemorandums = this.setMemorandums.bind(this);\n    }\n\n    setMemorandums(category) {\n        this.setState({\n            memorandums : null, // loading\n        });\n\n        if (category === \"MOA\") {\n            fetchInstitutionAgreements(result => {\n                this.setState({\n                    memorandums : result.institutions,\n                });\n            });\n        }\n\n        else {\n            fetchInstitutionUnderstandings(result => {\n                this.setState({\n                    memorandums : result.institutions,\n                });\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <MemorandumsHead setMemorandums={ this.setMemorandums }/>\n                { /* MemorandumsBody */ }\n            </div>\n        );\n    }\n}\n\nclass MemorandumsHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onCategoryChange = this.onCategoryChange.bind(this);\n    }\n\n    onCategoryChange(event) {\n        this.props.setMemorandums(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">\n                        Memorandum Reminders\n                    </h4>\n                </div>\n                <div className=\"page-head-actions\">\n                    <Input type=\"select\"\n                           className=\"btn-outline-success\"\n                           defaultValue=\"MOA\"\n                           onChange={ this.onCategoryChange }>\n                        <option value=\"MOA\">Agreement</option>\n                        <option value=\"MOU\">Understanding</option>\n                    </Input>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumsBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n    }\n}\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n    }\n}\n\nexport default Memorandums;"]}