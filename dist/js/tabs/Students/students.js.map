{"version":3,"sources":["../../../../js/tabs/Students/students.js"],"names":["fetchStudents","onResponse","query","Students","props","state","allStudents","activeStudent","addStudentIsShowing","setActiveStudent","bind","toggleAddStudent","refreshStudents","setState","response","data","students","student"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAKA,SAASA,aAAT,CAAuBC,UAAvB,EAAmC;AAC/B,2BAAQ;AACJC,qMADI;AAWJD,oBAAYA;AAXR,KAAR;AAaH;;IAEKE,Q;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,yBAAa,IADJ;AAETC,2BAAe,IAFN;AAGTC,iCAAqB;AAHZ,SAAb;;AAMA,cAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,OAAxB;AACA,cAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,OAAxB;AACA,cAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,OAAvB;AACA,cAAKE,eAAL;AAZe;AAalB;;;;0CAEiB;AAAA;;AACdZ,0BAAc,oBAAY;AACtB,uBAAKa,QAAL,CAAc;AACVP,iCAAaQ,SAASC,IAAT,CAAcC;AADjB,iBAAd;AAGH,aAJD;AAKH;;;2CAEkB;AACf,iBAAKH,QAAL,CAAc;AACVL,qCAAsB,CAAC,KAAKH,KAAL,CAAWG;AADxB,aAAd;AAGH;;;yCAEgBS,O,EAAS;AACtB,iBAAKJ,QAAL,CAAc;AACVN,+BAAeU;AADL,aAAd;AAGH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,2CAAf;AACI,wEAAa,UAAU,KAAKZ,KAAL,CAAWC,WAAlC;AACa,mCAAe,KAAKD,KAAL,CAAWE,aADvC;AAEa,sCAAkB,KAAKE,gBAFpC;AAGa,sCAAkB,KAAKE,gBAHpC,GADJ;AAKI,0EAAe,SAAS,KAAKN,KAAL,CAAWE,aAAnC,GALJ;AAMI,yEAAiB,QAAQ,KAAKF,KAAL,CAAWG,mBAApC;AACiB,4BAAQ,KAAKG,gBAD9B;AAEiB,6BAAS,KAAKC,eAF/B;AANJ,aADJ;AAYH;;;;;;kBAGUT,Q","file":"students.js","sourcesContent":["import React, {Component} from \"react\";\nimport graphql from \"../../graphql\";\nimport StudentList from \"./student_list\";\nimport StudentDetail from \"./student_detail\";\nimport {\n    AddStudentModal,\n} from \"./modals\";\n\n\nfunction fetchStudents(onResponse) {\n    graphql({\n        query: `\n        {\n            students {\n                idNumber\n                familyName\n                firstName\n                middleName\n            }\n        }\n        `,\n        onResponse: onResponse,\n    });\n}\n\nclass Students extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allStudents: null,\n            activeStudent: null,\n            addStudentIsShowing: false,\n        };\n\n        this.setActiveStudent = this.setActiveStudent.bind(this);\n        this.toggleAddStudent = this.toggleAddStudent.bind(this);\n        this.refreshStudents = this.refreshStudents.bind(this);\n        this.refreshStudents();\n    }\n\n    refreshStudents() {\n        fetchStudents(response => {\n            this.setState({\n                allStudents: response.data.students,\n            });\n        });\n    }\n\n    toggleAddStudent() {\n        this.setState({\n            addStudentIsShowing : !this.state.addStudentIsShowing,\n        });\n    }\n\n    setActiveStudent(student) {\n        this.setState({\n            activeStudent: student,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid d-flex flex-row p-0 h-100\">\n                <StudentList students={this.state.allStudents}\n                             activeStudent={this.state.activeStudent}\n                             setActiveStudent={this.setActiveStudent}\n                             toggleAddStudent={this.toggleAddStudent}/>\n                <StudentDetail student={this.state.activeStudent}/>\n                <AddStudentModal isOpen={this.state.addStudentIsShowing}\n                                 toggle={this.toggleAddStudent}\n                                 refresh={this.refreshStudents}/>\n            </div>\n        );\n    }\n}\n\nexport default Students;"]}