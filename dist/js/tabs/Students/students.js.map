{"version":3,"sources":["../../../../js/tabs/Students/students.js"],"names":["tabs","name","image","activeImage","makeStudentsQuery","category","query","Students","props","state","allStudents","activeStudent","addStudentIsShowing","activeTab","error","onAddStudent","bind","setActiveTab","fetchStudents","setActiveStudent","toggleAddStudent","onArchiveActiveStudent","tabName","setState","then","result","students","catch","tab","student","toString","addButtonIsShowing","refresh"],"mappings":"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","file":"students.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../graphql\";\nimport StudentList from \"./student_list\";\nimport StudentDetail from \"./student_detail\";\nimport { StudentFormModal, } from \"./modals\";\nimport ErrorState from \"../../components/error_state\";\n\n\nconst tabs = [\n    {\n        name : \"Inbound\",\n        image : \"./images/inboundgrey.png\",\n        activeImage : \"./images/inboundgreen.png\",\n    },\n    {\n        name : \"Outbound\",\n        image : \"./images/airplanegrey.png\",\n        activeImage : \"./images/airplanegreen.png\",\n    },\n];\n\n\nfunction makeStudentsQuery(category) {\n    return graphql.query(`\n    {\n        students(category:\"${category}\") {\n            id\n            id_number\n            family_name\n            first_name\n            middle_name\n        }\n    }\n    `);\n}\n\nclass Students extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allStudents : null,\n            activeStudent : null,\n            addStudentIsShowing : false,\n            activeTab : tabs[0],\n            error : null,\n        };\n\n        this.onAddStudent = this.onAddStudent.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.fetchStudents = this.fetchStudents.bind(this);\n        this.setActiveStudent = this.setActiveStudent.bind(this);\n        this.toggleAddStudent = this.toggleAddStudent.bind(this);\n        this.onArchiveActiveStudent = this.onArchiveActiveStudent.bind(this);\n\n        this.fetchStudents(this.state.activeTab.name);\n    }\n\n    fetchStudents(tabName) {\n        const category = tabName === \"Inbound\" ? \"IN\" : \"OUT\";\n\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        makeStudentsQuery(category)\n            .then(result => this.setState({\n                allStudents : result.students,\n            }))\n            .catch(error => this.setState({\n                error : error,\n            }));\n    }\n\n    setActiveTab(tab) {\n        this.setState({\n            activeTab : tab,\n            activeStudent : null, //Student is no longer in the same category\n            allStudents : null,\n        });\n\n        this.fetchStudents(tab.name);\n    }\n\n    onAddStudent(student) {\n        // Only set new student as active if user is currently looking at inbounds\n        // Only inbound because the only type of student you can add here is inbound\n        if (this.state.tab.name === \"Inbound\") {\n            this.setState({\n                activeStudent : student,\n            });\n        }\n    }\n\n    onArchiveActiveStudent() {\n        this.setState({\n            activeStudent : null,\n        });\n\n        // Refresh students\n        this.fetchStudents(this.state.activeTab.name);\n    }\n\n    toggleAddStudent() {\n        this.setState({\n            addStudentIsShowing : !this.state.addStudentIsShowing,\n        });\n    }\n\n    setActiveStudent(student) {\n        this.setState({\n            activeStudent : student,\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={() => this.fetchStudents(this.state.activeTab.name)}>\n                    {this.state.error.toString()}\n                </ErrorState>\n            );\n        }\n\n        const addButtonIsShowing = this.state.activeTab.name === \"Inbound\";\n        const refresh = () => this.fetchStudents(this.state.activeTab.name);\n\n        return (\n            <div className=\"container-fluid d-flex flex-row p-0 h-100\">\n                <StudentList students={this.state.allStudents}\n                             activeStudent={this.state.activeStudent}\n                             setActiveStudent={this.setActiveStudent}\n                             toggleAddStudent={this.toggleAddStudent}\n                             setActiveTab={this.setActiveTab}\n                             activeTab={this.state.activeTab}\n                             addButtonIsShowing={addButtonIsShowing}\n                             tabs={tabs}/>\n                <StudentDetail student={this.state.activeStudent}\n                               onArchiveActiveStudent={this.onArchiveActiveStudent}\n                               refreshStudents={refresh}/>\n                <StudentFormModal isOpen={this.state.addStudentIsShowing}\n                                  toggle={this.toggleAddStudent}\n                                  onAddStudent={this.onAddStudent}\n                                  refresh={refresh}/>\n            </div>\n        );\n    }\n}\n\nexport default Students;"]}