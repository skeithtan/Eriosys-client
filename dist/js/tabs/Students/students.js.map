{"version":3,"sources":["../../../../js/tabs/Students/students.js"],"names":["fetchStudents","onResponse","query","sortStudents","students","familyNames","forEach","firstLetter","student","familyName","undefined","push","letters","key","hasOwnProperty","sort","a","b","sorted","letter","Students","props","state","studentList","activeStudent","setState","response","data"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAGA,SAASA,aAAT,CAAuBC,UAAvB,EAAmC;AAC/B,2BAAQ;AACJC,uhBADI;AAuBJD,oBAAaA;AAvBT,KAAR;AAyBH;;AAED,SAASE,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,QAAIC,cAAc,EAAlB;AACAD,aAASE,OAAT,CAAiB,mBAAW;AACxB,YAAMC,cAAcC,QAAQC,UAAR,CAAmB,CAAnB,CAApB;AACA,YAAIJ,YAAYE,WAAZ,MAA6BG,SAAjC,EAA4C;AACxCL,wBAAYE,WAAZ,IAA2B,CAACC,OAAD,CAA3B;AACH,SAFD,MAEO;AACHH,wBAAYE,WAAZ,EAAyBI,IAAzB,CAA8BH,OAA9B;AACH;AACJ,KAPD;;AASA,QAAII,UAAU,EAAd;AACA,SAAK,IAAIC,GAAT,IAAgBR,WAAhB,EAA6B;AACzB,YAAIA,YAAYS,cAAZ,CAA2BD,GAA3B,CAAJ,EAAqC;AACjCD,oBAAQD,IAAR,CAAaE,GAAb;AACH;AACJ;;AAEDD,YAAQG,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnB;AACA,YAAID,IAAIC,CAAR,EAAW;AACP,mBAAO,CAAC,CAAR;AACH;AACD,YAAID,IAAIC,CAAR,EAAW;AACP,mBAAO,CAAP;AACH;AACD,eAAO,CAAP;AACH,KATD;;AAWA,QAAIC,SAAS,EAAb;;AAEAN,YAAQN,OAAR,CAAgB,kBAAU;AACtB,YAAMF,WAAWC,YAAYc,MAAZ,CAAjB;AACAD,eAAOP,IAAP,CAAY;AACRQ,oBAASA,MADD;AAERf,sBAAWA;AAFH,SAAZ;AAIH,KAND;;AAQA,WAAOc,MAAP;AACH;;IAEKE,Q;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,yBAAc,IADL;AAETC,2BAAgB;AAFP,SAAb;;AAKAxB,sBAAc,oBAAY;AACtB,kBAAKyB,QAAL,CAAc;AACVF,6BAAcG,SAASC;AADb,aAAd;AAGH,SAJD;AARe;AAalB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,2CAAf;AACI,wEAAa,UAAU,KAAKL,KAAL,CAAWC,WAAlC;AADJ,aADJ;AAKH;;;;;;kBAGUH,Q","file":"students.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../graphql\";\nimport StudentList from \"./student_list\";\n\n\nfunction fetchStudents(onResponse) {\n    graphql({\n        query : `\n        {\n            students {\n                kind\n                idNumber\n                college\n                familyName\n                firstName\n                middleName\n                nickname\n                nationality\n                homeAddress\n                phoneNumber\n                birthDate\n                sex\n                emergencyContactName\n                emergencyContactNumber\n                email\n                civilStatus\n            }\n        }\n        `,\n        onResponse : onResponse,\n    });\n}\n\nfunction sortStudents(students) {\n    let familyNames = {};\n    students.forEach(student => {\n        const firstLetter = student.familyName[0];\n        if (familyNames[firstLetter] === undefined) {\n            familyNames[firstLetter] = [student];\n        } else {\n            familyNames[firstLetter].push(student);\n        }\n    });\n\n    let letters = [];\n    for (let key in familyNames) {\n        if (familyNames.hasOwnProperty(key)) {\n            letters.push(key);\n        }\n    }\n\n    letters.sort((a, b) => {\n        //Alphabetically\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    });\n\n    let sorted = [];\n\n    letters.forEach(letter => {\n        const students = familyNames[letter];\n        sorted.push({\n            letter : letter,\n            students : students,\n        });\n    });\n\n    return sorted;\n}\n\nclass Students extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            studentList : null,\n            activeStudent : null,\n        };\n\n        fetchStudents(response => {\n            this.setState({\n                studentList : response.data,\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid d-flex flex-row p-0 h-100\">\n                <StudentList students={this.state.studentList}/>\n            </div>\n        );\n    }\n}\n\nexport default Students;"]}