{"version":3,"sources":["../../../../js/tabs/Students/students.js"],"names":["tabs","name","image","activeImage","fetchStudents","category","onResult","query","then","Students","props","state","allStudents","activeStudent","addStudentIsShowing","activeTab","onAddStudent","bind","setActiveTab","setActiveStudent","toggleAddStudent","refreshStudents","onArchiveActiveStudent","setState","result","students","tab","student","addButtonIsShowing"],"mappings":"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","file":"students.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../graphql\";\nimport StudentList from \"./student_list\";\nimport StudentDetail from \"./student_detail\";\nimport { StudentFormModal, } from \"./modals\";\n\n\nconst tabs = [\n    {\n        name : \"Inbound\",\n        image : \"./images/inboundgrey.png\",\n        activeImage : \"./images/inboundgreen.png\",\n    },\n    {\n        name : \"Outbound\",\n        image : \"./images/airplanegrey.png\",\n        activeImage : \"./images/airplanegreen.png\",\n    },\n];\n\n\nfunction fetchStudents(category, onResult) {\n    graphql.query(`\n    {\n        students(category:\"${category}\") {\n            id\n            id_number\n            family_name\n            first_name\n            middle_name\n        }\n    }\n    `).then(onResult);\n}\n\nclass Students extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allStudents : null,\n            activeStudent : null,\n            addStudentIsShowing : false,\n            activeTab : tabs[0],\n        };\n\n        this.onAddStudent = this.onAddStudent.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.setActiveStudent = this.setActiveStudent.bind(this);\n        this.toggleAddStudent = this.toggleAddStudent.bind(this);\n        this.refreshStudents = this.refreshStudents.bind(this);\n        this.onArchiveActiveStudent = this.onArchiveActiveStudent.bind(this);\n\n        const category = this.state.activeTab.name === \"Inbound\" ? \"IN\" : \"OUT\";\n\n        fetchStudents(category, result => {\n            this.setState({\n                allStudents : result.students,\n            });\n        });\n    }\n\n    setActiveTab(tab) {\n        this.setState({\n            activeTab : tab,\n            activeStudent : null, //Student is no longer in the same category\n        });\n\n        const category = tab.name === \"Inbound\" ? \"IN\" : \"OUT\";\n\n        fetchStudents(category, result => {\n            this.setState({\n                allStudents : result.students,\n            });\n        });\n    }\n\n    onAddStudent(student) {\n        // Only set new student as active if user is currently looking at inbounds\n        // Only inbound because the only type of student you can add here is inbound\n        if (this.state.tab.name === \"Inbound\") {\n            this.setState({\n                activeStudent : student,\n            });\n        }\n    }\n\n    refreshStudents() {\n        this.setActiveTab(this.state.activeTab);\n    }\n\n    onArchiveActiveStudent() {\n        this.setState({\n            activeStudent : null,\n        });\n\n        this.refreshStudents();\n    }\n\n    toggleAddStudent() {\n        this.setState({\n            addStudentIsShowing : !this.state.addStudentIsShowing,\n        });\n    }\n\n    setActiveStudent(student) {\n        this.setState({\n            activeStudent : student,\n        });\n    }\n\n    render() {\n        const addButtonIsShowing = this.state.activeTab.name === \"Inbound\";\n\n        return (\n            <div className=\"container-fluid d-flex flex-row p-0 h-100\">\n                <StudentList students={this.state.allStudents}\n                             activeStudent={this.state.activeStudent}\n                             setActiveStudent={this.setActiveStudent}\n                             toggleAddStudent={this.toggleAddStudent}\n                             setActiveTab={this.setActiveTab}\n                             activeTab={this.state.activeTab}\n                             addButtonIsShowing={addButtonIsShowing}\n                             tabs={tabs}/>\n                <StudentDetail student={this.state.activeStudent}\n                               onArchiveActiveStudent={this.onArchiveActiveStudent}\n                               refreshStudents={this.refreshStudents}/>\n                <StudentFormModal isOpen={this.state.addStudentIsShowing}\n                                  toggle={this.toggleAddStudent}\n                                  onAddStudent={this.onAddStudent}\n                                  refresh={this.refreshStudents}/>\n            </div>\n        );\n    }\n}\n\nexport default Students;"]}