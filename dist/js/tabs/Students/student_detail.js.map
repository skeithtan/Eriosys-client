{"version":3,"sources":["../../../../js/tabs/Students/student_detail.js"],"names":["fetchStudent","id","onResult","query","then","StudentDetail","props","state","student","studentID","onEditStudent","bind","setState","result","refreshStudents","nextProps","unselectedState","default"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AAGA;;AAKA;;;;AACA;;;;;;;;;;;;AAGA,SAASA,YAAT,CAAsBC,EAAtB,EAA0BC,QAA1B,EAAoC;AAChC,sBAAQC,KAAR,kCAEiBF,EAFjB,ikBA2BGG,IA3BH,CA2BQF,QA3BR;AA4BH;;IAEKG,a;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,qBAAU,IADD;AAETC,uBAAY;AAFH,SAAb;;AAKA,cAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AARe;AASlB;;;;wCAUe;AAAA;;AACZ,iBAAKC,QAAL,CAAc;AACVJ,yBAAU;AADA,aAAd;;AAIAR,yBAAa,KAAKO,KAAL,CAAWE,SAAxB,EAAmC,kBAAU;AACzC,oBAAMD,UAAUK,OAAOL,OAAvB;AACA,uBAAKI,QAAL,CAAc;AACVJ,6BAAUA;AADA,iBAAd;AAGA,uBAAKF,KAAL,CAAWQ,eAAX;AACH,aAND;AAOH;;;kDAEyBC,S,EAAW;AAAA;;AACjC,gBAAMP,UAAUO,UAAUP,OAA1B;;AAEA,gBAAIA,YAAY,IAAhB,EAAsB;AAClB,qBAAKI,QAAL,CAAc;AACVJ,6BAAU,IADA;AAEVC,+BAAY;AAFF,iBAAd;;AAKA;AACH;;AAED,iBAAKG,QAAL,CAAc;AACVH,2BAAYD,QAAQP,EADV;AAEVO,yBAAU;AAFA,aAAd;;AAKAR,yBAAaQ,QAAQP,EAArB,EAAyB,kBAAU;AAC/B,uBAAKW,QAAL,CAAc;AACVJ,6BAAUK,OAAOL;AADP,iBAAd;AAGH,aAJD;AAKH;;;iCAEQ;AACL,gBAAI,KAAKD,KAAL,CAAWE,SAAX,KAAyB,IAA7B,EAAmC;AAC/B,uBAAOJ,cAAcW,eAAd,EAAP;AACH;;AAED,gBAAI,KAAKT,KAAL,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC7B,uBAAO,sDAAP;AACH;;AAED,mBACI,uCAAK,IAAG,gBAAR;AACK,2BAAU,wCADf,GADJ;AAMH;;;0CA7DwB;AACrB,mBACI;AAAA;AAAA,kBAAK,WAAU,mBAAf;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,aADJ;AAKH;;;;;;QA2DgBS,O,GAAjBZ,a;QACAL,Y,GAAAA,Y","file":"student_detail.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n} from \"reactstrap\";\nimport {\n    ArchiveStudentModal,\n    StudentFormModal,\n\n} from \"./modals\";\nimport LoadingSpinner from \"../../components/loading\";\nimport graphql from \"../../graphql\";\n\n\nfunction fetchStudent(id, onResult) {\n    graphql.query(`\n    {\n        student(id:${id}) {\n            id\n            category\n            id_number\n            college\n            family_name\n            first_name\n            middle_name\n            nickname\n            nationality\n            home_address\n            phone_number\n            birth_date\n            sex\n            emergency_contact_name\n            emergency_contact_relationship\n            emergency_contact_number\n            email\n            civil_status\n            institution {\n                id\n                name\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nclass StudentDetail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            student : null,\n            studentID : null,\n        };\n\n        this.onEditStudent = this.onEditStudent.bind(this);\n    }\n\n    static unselectedState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>Select a student to see its details</h3>\n            </div>\n        );\n    }\n\n    onEditStudent() {\n        this.setState({\n            student : null,\n        });\n\n        fetchStudent(this.state.studentID, result => {\n            const student = result.student;\n            this.setState({\n                student : student,\n            });\n            this.props.refreshStudents();\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const student = nextProps.student;\n\n        if (student === null) {\n            this.setState({\n                student : null,\n                studentID : null,\n            });\n\n            return;\n        }\n\n        this.setState({\n            studentID : student.id,\n            student : null,\n        });\n\n        fetchStudent(student.id, result => {\n            this.setState({\n                student : result.student,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.studentID === null) {\n            return StudentDetail.unselectedState();\n        }\n\n        if (this.state.student === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div id=\"student-detail\"\n                 className=\"container-fluid d-flex flex-column p-0\">\n                \n            </div>\n        );\n    }\n}\n\nexport {\n    StudentDetail as default,\n    fetchStudent,\n};"]}