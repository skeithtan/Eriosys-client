{"version":3,"sources":["../../../../../js/tabs/Students/tabs/resident_address_history.js"],"names":["fetchHistory","id","onResult","query","then","ResidentAddressHistory","props","state","student","studentId","residenceList","activeResidenceId","setState","result","residencies","setActiveResidence","bind","residence","nextProps","HistoryHead","addResidenceIsShowing","toggleAddResidence","first_name","middle_name","family_name","id_number","HistoryBody","HistorySection","HistoryRow"],"mappings":"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","file":"resident_address_history.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../components/loading\";\n\nimport { Button, } from \"reactstrap\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowContent,\n    SectionRowTitle,\n} from \"../../../components/section\";\n\n// TODO: import modals for editing and adding\n// TODO: import sidebarpane for residency details\n\nfunction fetchHistory(id, onResult) {\n    graphql.query(`\n    {\n        student(id:${id}) {\n            id\n            id_number\n            first_name\n            middle_name\n            family_name\n            residencies {\n                student {\n                    id\n                    id_number\n                    first_name\n                    middle_name\n                    family_name\n                }\n                date_effective\n                contact_person_name\n                contact_person_number\n                address\n                residence\n            }\n        }\n\t}\n\t`).then(onResult);\n}\n\nclass ResidentAddressHistory extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            student : props.student,\n            studentId : props.student.id,\n            residenceList : null,\n            activeResidenceId : null,\n        };\n\n        fetchHistory(this.state.studentId, result => {\n            this.setState({\n                residenceList : result.residencies,\n            });\n        });\n\n        this.setActiveResidence = this.setActiveResidence.bind(this);\n    }\n\n    setActiveResidence(residence) {\n        // TODO: set sidebar content to null if residence is null\n\n        // TODO: set sidebar content with props\n\n        this.setState({\n            activeResidenceId : residence.id,\n        });\n    }\n\n    refreshResidences() {\n        fetchHistory(this.state.studentId, result => {\n            this.setState({\n                residenceList : result.residencies,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.studentId === nextProps.student.id) {\n            return;\n        }\n\n        // TODO: set sidebar content to null\n\n        this.setState({\n            studentId : nextProps.student.id,\n            student : nextProps.student,\n            residenceList : null,\n            activeResidenceId : null,\n        });\n\n        fetchHistory(this.state.studentId, result => {\n            this.setState({\n                residenceList : result.residencies,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.student === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <HistoryHead student={ this.state.student }/>\n\n            </div>\n        );\n    }\n}\n\nclass HistoryHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addResidenceIsShowing : false,\n        };\n\n        this.toggleAddResidence = this.toggleAddResidence.bind(this);\n    }\n\n    toggleAddResidence() {\n        this.setState({\n            addResidenceIsShowing : !this.state.addResidenceIsShowing,\n        });\n    }\n\n    render() {\n        const student = this.props.student;\n\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Resident Address History</h5>\n                    <h4 className=\"page-head-title mb-0\">{ student.first_name } { student.middle_name } { student.family_name }\n                        <small className=\"text-muted ml-2\">{ this.props.student.id_number }</small>\n                    </h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" onClick={ this.toggleAddResidence }>Add a\n                        Residence</Button>\n                </div>\n\n                { /* Residence Form Modal */ }\n            </div>\n        );\n    }\n}\n\nclass HistoryBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n    }\n}\n\nclass HistorySection extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n    }\n}\n\nclass HistoryRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n    }\n}\n\nexport default ResidentAddressHistory;"]}