{"version":3,"sources":["../../../../../js/tabs/Students/tabs/overview.js"],"names":["fetchStudent","id","onResult","query","then","StudentOverview","props","state","student","studentId","onEditStudent","bind","result","setState","nextProps","refreshStudents","console","log","onArchiveActiveStudent","OverviewHead","archiveStudentIsShowing","editStudentIsShowing","toggleEditStudent","toggleArchiveStudent","first_name","middle_name","family_name","id_number","onArchiveStudent","OverviewBody","StudentDetails","sex","civilStatus","civilStatuses","civil_status","birthDate","birth_date","format","nickname","length","sidebar","home_address","nationality","archived","toggleRestoreStudent","ContactDetails","phone_number","email","emergency_contact_name","emergency_contact_relationship","emergency_contact_number","UniversityDetails","college","colleges","type","category","institution","name","default"],"mappings":"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","file":"overview.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport graphql from \"../../../graphql\";\nimport { Button } from \"reactstrap\";\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowTitle,\n    SectionRowContent,\n} from \"../../../components/section\";\nimport {\n    ArchiveStudentModal,\n    StudentFormModal,\n\n} from \"../modals\";\nimport moment from \"moment\";\nimport settings from \"../../../settings\";\n\n\nfunction fetchStudent(id, onResult) {\n    graphql.query(`\n    {\n        student(id:${id}) {\n            id\n            category\n            id_number\n            college\n            family_name\n            first_name\n            middle_name\n            nickname\n            nationality\n            home_address\n            phone_number\n            birth_date\n            sex\n            emergency_contact_name\n            emergency_contact_relationship\n            emergency_contact_number\n            email\n            civil_status\n            institution {\n                name\n            }\n        }\n    }    \n    `).then(onResult);\n}\n\nclass StudentOverview extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            student : null,\n            studentId : props.student.id,\n        };\n\n        this.onEditStudent = this.onEditStudent.bind(this);\n\n        fetchStudent(props.student.id, result => {\n            const student = result.student;\n\n            this.setState({\n                student : student,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            studentId : nextProps.student.id,\n            student : null,\n        });\n\n        fetchStudent(nextProps.student.id, result => {\n            const student = result.student;\n            this.setState({\n                student : student,\n            });\n        });\n    }\n\n    onEditStudent() {\n        this.setState({\n            student : null,\n        });\n\n        fetchStudent(this.state.studentId, result => {\n            const student = result.student;\n            this.setState({\n                student : student,\n            });\n\n            this.props.refreshStudents();\n        });\n    }\n\n    render() {\n        if (this.state.student === null) {\n            return <LoadingSpinner/>;\n        }\n        console.log(this.props);\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <OverviewHead student={this.state.student}\n                              onArchiveStudent={this.props.onArchiveActiveStudent}\n                              onEditStudent={this.onEditStudent}/>\n                <OverviewBody student={this.state.student}/>\n            </div>\n        );\n    }\n}\n\nclass OverviewHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            archiveStudentIsShowing : false,\n            editStudentIsShowing : false,\n        };\n\n        this.toggleEditStudent = this.toggleEditStudent.bind(this);\n        this.toggleArchiveStudent = this.toggleArchiveStudent.bind(this);\n    }\n\n    toggleEditStudent() {\n        this.setState({\n            editStudentIsShowing : !this.state.editStudentIsShowing,\n        });\n    }\n\n    toggleArchiveStudent() {\n        this.setState({\n            archiveStudentIsShowing : !this.state.archiveStudentIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-center\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Overview</h5>\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">\n                        {this.props.student.first_name} {this.props.student.middle_name} {this.props.student.family_name}\n                        <small className=\"text-muted ml-2\">{this.props.student.id_number}</small>\n                    </h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline\n                            size=\"sm\"\n                            color=\"success\"\n                            className=\"mr-2\"\n                            onClick={this.toggleEditStudent}>\n                        Edit Student\n                    </Button>\n\n                    <Button outline\n                            size=\"sm\"\n                            color=\"warning\"\n                            onClick={this.toggleArchiveStudent}>Archive</Button>\n                </div>\n\n                <ArchiveStudentModal isOpen={this.state.archiveStudentIsShowing}\n                                     student={this.props.student}\n                                     toggle={this.toggleArchiveStudent}\n                                     refresh={this.props.onArchiveStudent}/>\n\n                <StudentFormModal edit\n                                  isOpen={this.state.editStudentIsShowing}\n                                  student={this.props.student}\n                                  refresh={this.props.onEditStudent}\n                                  toggle={this.toggleEditStudent}/>\n            </div>\n        );\n    }\n}\n\nclass OverviewBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <StudentDetails student={this.props.student}/>\n                <ContactDetails student={this.props.student}/>\n                <UniversityDetails student={this.props.student}/>\n            </div>\n        );\n    }\n}\n\nclass StudentDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const student = this.props.student;\n        const sex = student.sex === \"F\" ? \"Female\" : \"Male\";\n        const civilStatus = settings.civilStatuses[student.civil_status];\n        const birthDate = moment(student.birth_date).format(\"LL\");\n\n        return (\n            <Section>\n                <SectionTitle>Student Details</SectionTitle>\n                <SectionTable>\n\n                    {student.nickname.length > 0 && //Only show if student nickname exists\n                    <SectionRow>\n                        <SectionRowTitle>Nickname</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{student.nickname}</SectionRowContent>\n                    </SectionRow>\n                    }\n\n                    <SectionRow>\n                        <SectionRowTitle>Sex</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{sex}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Home Address</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{student.home_address}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Date of Birth</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{birthDate}</SectionRowContent>\n                    </SectionRow>\n\n                    {student.nationality.length > 0 &&\n                    <SectionRow>\n                        <SectionRowTitle>Nationality</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{student.nationality}</SectionRowContent>\n                    </SectionRow>\n                    }\n\n                    <SectionRow>\n                        <SectionRowTitle>Civil Status</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{civilStatus}</SectionRowContent>\n                    </SectionRow>\n\n                    {this.props.archived &&\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline\n                                    color=\"primary\"\n                                    size=\"sm\"\n                                    className=\"ml-auto\"\n                                    onClick={this.props.toggleRestoreStudent}>Restore</Button>\n                        </SectionRowContent>\n                    </SectionRow>\n                    }\n\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass ContactDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const student = this.props.student;\n\n        return (\n            <Section>\n                <SectionTitle>Contact Details</SectionTitle>\n                <SectionTable>\n\n                    <SectionRow>\n                        <SectionRowTitle>Phone Number</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{student.phone_number}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Email</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{student.email}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Emergency Contact</SectionRowTitle>\n                        <SectionRowContent\n                            large={!this.props.sidebar}>{`${student.emergency_contact_name} (${student.emergency_contact_relationship})`}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Emergency Contact Number</SectionRowTitle>\n                        <SectionRowContent\n                            large={!this.props.sidebar}>{student.emergency_contact_number}</SectionRowContent>\n                    </SectionRow>\n\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass UniversityDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const student = this.props.student;\n        const college = settings.colleges[student.college];\n        const type = student.category === \"OUT\" ? \"Outbound\" : \"Inbound\";\n\n        return (\n            <Section>\n                <SectionTitle>University Details</SectionTitle>\n                <SectionTable>\n\n                    <SectionRow>\n                        <SectionRowTitle>Student Type</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{type}</SectionRowContent>\n                    </SectionRow>\n\n                    {student.category === \"IN\" &&\n                    <SectionRow>\n                        <SectionRowTitle>Institution</SectionRowTitle>\n                        <SectionRowContent\n                            large={!this.props.sidebar}>{student.institution.name}</SectionRowContent>\n                    </SectionRow>\n                    }\n\n                    <SectionRow>\n                        <SectionRowTitle>College</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{college}</SectionRowContent>\n                    </SectionRow>\n\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nexport {\n    StudentOverview as default,\n    fetchStudent,\n    StudentDetails,\n    ContactDetails,\n    UniversityDetails,\n};"]}