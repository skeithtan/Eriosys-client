{"version":3,"sources":["../../../../js/tabs/Students/student_list.js"],"names":["StudentList","props","students","activeStudent","setActiveStudent","StudentListHead","StudentListTable","getStudentsByFamilyNameInitials","bind","familyNameInitials","map","student","familyName","filter","value","index","self","indexOf","sort","a","b","categorizedByInitial","forEach","push","initial","studentInitial","length","emptyState","sections","familyNameInitial","StudentSection","rows","idNumber","title","StudentRow","first","firstName","middle","middleName"],"mappings":"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","file":"student_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../loading\";\nimport {\n    Input,\n    Button,\n    ListGroup,\n    ListGroupItem,\n} from \"reactstrap\";\n\n\nclass StudentList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"sidebar h-100\" id=\"student-list\">\n                <StudentListHead/>\n                <StudentListTable students={this.props.students}\n                                  activeStudent={this.props.activeStudent}\n                                  setActiveStudent={this.props.setActiveStudent}/>\n            </div>\n        );\n    }\n}\n\nclass StudentListHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head\">\n                <div className=\"page-head-controls\">\n                    <div className=\"btn-group ml-auto\">\n                        <Button outline color=\"success\" size=\"sm\" className=\"active\">Active</Button>\n                        <Button outline color=\"success\" size=\"sm\" className=\"\">Historical</Button>\n                    </div>\n                    <Button outline color=\"success\" size=\"sm\" className=\"ml-4\">Add</Button>\n                </div>\n                <h4 className=\"page-head-title\">Students</h4>\n                <Input placeholder=\"Search\" className=\"search-input mt-2\"/>\n            </div>\n        );\n    }\n}\n\nclass StudentListTable extends Component {\n    constructor(props) {\n        super(props);\n        this.getStudentsByFamilyNameInitials = this.getStudentsByFamilyNameInitials.bind(this);\n    }\n\n    static emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h4>There's nothing here.</h4>\n                <p>When added, Students will show up here.</p>\n                <Button outline color=\"success\">Add a Student</Button>\n            </div>\n        );\n    }\n\n    getStudentsByFamilyNameInitials() {\n        //Get first letter\n        let familyNameInitials = this.props.students.map(student => student.familyName[0]);\n\n        //Get uniques only\n        familyNameInitials = familyNameInitials.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        });\n\n        // Sort alphabetically\n        familyNameInitials = familyNameInitials.sort((a, b) => {\n            if (a < b) {\n                return -1;\n            }\n            if (a > b) {\n                return 1;\n            }\n            return 0;\n        });\n\n        let categorizedByInitial = [];\n\n        // Categorize by family name initial\n        familyNameInitials.forEach(initial => {\n            let students = [];\n            categorizedByInitial.push({\n                initial : initial,\n                students : students,\n            });\n\n            this.props.students.forEach(student => {\n                const studentInitial = student.familyName[0];\n\n                if (studentInitial === initial) {\n                    students.push(student);\n                }\n            });\n\n        });\n\n        return categorizedByInitial;\n    }\n\n    render() {\n        if (this.props.students === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.students.length === 0) {\n            return StudentListTable.emptyState();\n        }\n\n        const familyNameInitials = this.getStudentsByFamilyNameInitials();\n\n        const sections = familyNameInitials.map((familyNameInitial, index) => {\n            return <StudentSection key={index}\n                                   title={familyNameInitial.initial}\n                                   students={familyNameInitial.students}/>;\n        });\n\n\n        return (\n            <div className=\"page-body\">\n                {sections}\n            </div>\n        );\n    }\n}\n\nclass StudentSection extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const rows = this.props.students.map(student => {\n            return <StudentRow key={student.idNumber} student={student}/>;\n        });\n\n        return (\n            <div className=\"section\">\n                <small className=\"section-title\">{this.props.title}</small>\n                <ListGroup>\n                    {rows}\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nclass StudentRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        // Hardcoded, I can fix this later.\n        const first = this.props.student.firstName;\n        const middle = this.props.student.middleName;\n        const familyName = this.props.student.familyName;\n        const idNumber = this.props.student.idNumber;\n        return (\n            <ListGroupItem>\n                <small className=\"d-block\">{idNumber}</small>\n                <b>{familyName}</b>, {first} {middle}\n            </ListGroupItem>\n        );\n    }\n}\n\nexport default StudentList;"]}