{"version":3,"sources":["../../../../js/tabs/Programs/year_list.js"],"names":["YearList","props","yearList","activeYear","setActiveYear","YearListHead","YearListTable","length","emptyState","rows","map","year","index","isActive","academic_year_start","yearStart","Number"],"mappings":";;;;;;;;AAAA;;;;AACA;;AAKA;;;;AACA;;;;;;;;;;IAGMA,Q;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mHACTA,KADS;AAElB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,eAAf,EAA+B,IAAG,WAAlC;AACI,8CAAC,YAAD,OADJ;AAEI,8CAAC,aAAD,IAAe,UAAU,KAAKA,KAAL,CAAWC,QAApC;AACe,gCAAY,KAAKD,KAAL,CAAWE,UADtC;AAEe,mCAAe,KAAKF,KAAL,CAAWG,aAFzC;AAFJ,aADJ;AAQH;;;;;;IAGCC,Y;;;AACF,0BAAYJ,KAAZ,EAAmB;AAAA;;AAAA,2HACTA,KADS;AAElB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,WAAf;AACI;AAAA;AAAA,sBAAK,WAAU,oBAAf;AACI;AAAA;AAAA,0BAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC,EAA0C,WAAU,SAApD;AAAA;AAAA;AADJ,iBADJ;AAII;AAAA;AAAA,sBAAI,WAAU,sBAAd;AAAA;AAAA;AAJJ,aADJ;AAQH;;;;;;IAGCK,a;;;AACF,2BAAYL,KAAZ,EAAmB;AAAA;;AAAA,6HACTA,KADS;AAElB;;AAED;;AAEA;;;;;qCACa;AACT,mBACI;AAAA;AAAA;AAAA;AAAA,aADJ;AAKH;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKA,KAAL,CAAWC,QAAX,KAAwB,IAA5B,EAAkC;AAC9B,uBAAO,sDAAP;AACH;;AAED,gBAAI,KAAKD,KAAL,CAAWC,QAAX,CAAoBK,MAApB,KAA+B,CAAnC,EAAsC;AAClC,uBAAO,KAAKC,UAAL,EAAP;AACH;;AAED,gBAAMC,OAAO,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAwB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClD,oBAAIC,WAAW,KAAf;;AAEA,oBAAI,OAAKZ,KAAL,CAAWE,UAAX,KAA0B,IAA9B,EAAoC;AAChCU,+BAAW,OAAKZ,KAAL,CAAWE,UAAX,KAA0BQ,KAAKG,mBAA1C;AACH;;AAED,oBAAMV,gBAAgB,SAAhBA,aAAgB;AAAA,2BAAM,OAAKH,KAAL,CAAWG,aAAX,CAAyBO,KAAKG,mBAA9B,CAAN;AAAA,iBAAtB;;AAEA,oBAAMC,YAAYC,OAAOL,KAAKG,mBAAZ,CAAlB;AACA,uBAAO;AAAA;AAAA,sBAAY,gBAAZ,EAAuB,KAAKF,KAA5B,EAAmC,SAASR,aAA5C,EAA2D,QAAQS,QAAnE;AACH;AAAA;AAAA;AAAoBE,iCAApB;AAAA;AAAkCA,oCAAY;AAA9C;AADG,iBAAP;AAGH,aAbY,CAAb;;AAeA,mBACI;AAAA;AAAA,kBAAK,WAAU,WAAf;AACI;AAAA;AAAA;AACKN;AADL;AADJ,aADJ;AAOH;;;;;;kBAGUT,Q","file":"year_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    SectionRow,\n    SectionRowContent,\n    SectionTable,\n} from \"../../components/section\";\nimport LoadingSpinner from \"../../components/loading\";\nimport { Button } from \"reactstrap\";\n\n\nclass YearList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"sidebar h-100\" id=\"term-list\">\n                <YearListHead/>\n                <YearListTable yearList={this.props.yearList}\n                               activeYear={this.props.activeYear}\n                               setActiveYear={this.props.setActiveYear}/>\n            </div>\n        );\n    }\n}\n\nclass YearListHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head\">\n                <div className=\"page-head-controls\">\n                    <Button outline color=\"success\" size=\"sm\" className=\"ml-auto\">Add</Button>\n                </div>\n                <h4 className=\"page-head-title mb-0\">Academic Years</h4>\n            </div>\n        );\n    }\n}\n\nclass YearListTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // TODO: Arrange years in ascending order\n\n    // IDK if this is right\n    emptyState() {\n        return (\n            <div>\n                This is empty\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.yearList === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.yearList.length === 0) {\n            return this.emptyState();\n        }\n\n        const rows = this.props.yearList.map((year, index) => {\n            let isActive = false;\n\n            if (this.props.activeYear !== null) {\n                isActive = this.props.activeYear === year.academic_year_start;\n            }\n\n            const setActiveYear = () => this.props.setActiveYear(year.academic_year_start);\n\n            const yearStart = Number(year.academic_year_start);\n            return <SectionRow selectable key={index} onClick={setActiveYear} active={isActive}>\n                <SectionRowContent>{yearStart} - {yearStart + 1}</SectionRowContent>\n            </SectionRow>;\n        });\n\n        return (\n            <div className=\"page-body\">\n                <SectionTable>\n                    {rows}\n                </SectionTable>\n            </div>\n        );\n    }\n}\n\nexport default YearList;"]}