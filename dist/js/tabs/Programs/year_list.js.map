{"version":3,"sources":["../../../../js/tabs/Programs/year_list.js"],"names":["YearList","props","getArrangedYears","bind","yearList","years","forEach","push","year","academic_year_start","filter","value","index","self","indexOf","sort","a","b","activeYear","setActiveYear","YearListHead","YearListTable","length","emptyState","rows","map","isActive","yearStart","Number"],"mappings":"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","file":"year_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    SectionRow,\n    SectionRowContent,\n    SectionTable,\n} from \"../../components/section\";\nimport LoadingSpinner from \"../../components/loading\";\nimport { Button } from \"reactstrap\";\n\n\nclass YearList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getArrangedYears = this.getArrangedYears.bind(this);\n    }\n\n    getArrangedYears() {\n        if (this.props.yearList === null) {\n            return [];\n        }\n\n        let years = [];\n\n        this.props.yearList.forEach(year => {\n            years.push(year.academic_year_start);\n        });\n\n        // Get uniques only\n        years = years.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        });\n\n        // Arrange in ascending order\n        years = years.sort(function (a, b) {\n            return a - b;\n        });\n\n        return years;\n    }\n\n    render() {\n        const years = this.getArrangedYears();\n\n        return (\n            <div className=\"sidebar h-100\" id=\"term-list\">\n                <YearListHead/>\n                <YearListTable yearList={ years }\n                               activeYear={ this.props.activeYear }\n                               setActiveYear={ this.props.setActiveYear }/>\n            </div>\n        );\n    }\n}\n\nclass YearListHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head\">\n                <div className=\"page-head-controls\">\n                    <Button outline color=\"success\" size=\"sm\" className=\"ml-auto\">Add</Button>\n                </div>\n                <h4 className=\"page-head-title mb-0\">Academic Years</h4>\n            </div>\n        );\n    }\n}\n\nclass YearListTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // TODO: Arrange years in ascending order\n\n    // IDK if this is right\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h4>There's nothing here.</h4>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.yearList === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.yearList.length === 0) {\n            return this.emptyState();\n        }\n\n        const rows = this.props.yearList.map((year, index) => {\n            let isActive = false;\n\n            if (this.props.activeYear !== null) {\n                isActive = this.props.activeYear === year;\n            }\n\n            const setActiveYear = () => this.props.setActiveYear(year);\n\n            const yearStart = Number(year);\n            return <SectionRow selectable key={ index } onClick={ setActiveYear } active={ isActive }>\n                <SectionRowContent>{ yearStart } - { yearStart + 1 }</SectionRowContent>\n            </SectionRow>;\n        });\n\n        return (\n            <div className=\"page-body\">\n                <SectionTable>\n                    { rows }\n                </SectionTable>\n            </div>\n        );\n    }\n}\n\nexport default YearList;"]}