{"version":3,"sources":["../../../../js/tabs/Programs/program_list.js"],"names":["ProgramList","props","activeYear","activeTerm","programList","activeProgram","setActiveProgram","ProgramListHead","year","term","ProgramListTable","getFilteredPrograms","bind","emptyState","institutions","forEach","push","program","memorandum","institution","name","filter","value","index","self","indexOf","sort","categorizedByInstitution","programs","programInstitution","length","institutionPrograms","sections","map","institutionProgram","ProgramSection","rows","title"],"mappings":"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","file":"program_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Input,\n} from \"reactstrap\";\nimport {\n    Section,\n    SectionRow,\n    SectionRowContent,\n    SectionTable,\n    SectionTitle,\n} from \"../../components/section\";\nimport LoadingSpinner from \"../../components/loading\";\n\nclass ProgramList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"h-100 d-flex flex-column\">\n                <ProgramListHead year={ this.props.activeYear }\n                                 term={ this.props.activeTerm }/>\n                <ProgramListTable programList={ this.props.programList }\n                                  activeProgram={ this.props.activeProgram }\n                                  setActiveProgram={ this.props.setActiveProgram }/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head d-flex flex-column align-items-center\">\n                <div className=\"d-flex flex-row w-100 mb-2 align-items-center\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0 text-secondary\">Programs</h5>\n                        <div className=\"d-flex flex-row\">\n                            <h4 className=\"page-head-title mb-0\">{ this.props.year } - { this.props.year + 1 }</h4>\n                            <h4 className=\"text-secondary ml-2\">Term { this.props.term }</h4>\n                        </div>\n                    </div>\n                </div>\n                <Input type=\"search\" placeholder=\"Search\" className=\"search-input\"/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getFilteredPrograms = this.getFilteredPrograms.bind(this);\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    getFilteredPrograms() {\n        if (this.props.programList === null) {\n            return [];\n        }\n\n        let institutions = [];\n\n        // Makes the list of Institution Names\n        this.props.programList.forEach(program => {\n            institutions.push(program.memorandum.institution.name);\n        });\n\n        // Get uniques only?\n        institutions = institutions.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        });\n\n        // Arrange alphabetically\n        institutions = institutions.sort();\n\n        let categorizedByInstitution = [];\n\n        institutions.forEach(institution => {\n            let programs = [];\n            categorizedByInstitution.push({\n                institution : institution,\n                programs : programs,\n            });\n\n            this.props.programList.forEach(program => {\n                const programInstitution = program.memorandum.institution.name;\n                if (programInstitution === institution) {\n                    programs.push(program);\n                }\n            });\n        });\n\n        return categorizedByInstitution;\n    }\n\n    emptyState() {\n        return (\n            <div>\n                This is empty\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.programList === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.programList.length === 0) {\n            return this.emptyState();\n        }\n\n        const institutionPrograms = this.getFilteredPrograms();\n\n        const sections = institutionPrograms.map((institutionProgram, index) => {\n            return <ProgramSection key={ index }\n                                   title={ institutionProgram.institution }\n                                   activeProgram={ this.props.activeProgram }\n                                   programs={ institutionProgram.programs }\n                                   setActiveProgram={ this.props.setActiveProgram }/>;\n        });\n\n        return (\n            <div className=\"page-body\">\n                { sections }\n            </div>\n        );\n    }\n}\n\nclass ProgramSection extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const rows = this.props.programs.map((program, index) => {\n            const setActiveProgram = () => this.props.setActiveProgram(program);\n            return (\n                <SectionRow key={ index } onClick={ setActiveProgram }>\n                    <SectionRowContent>{ program.name }</SectionRowContent>\n                </SectionRow>\n            );\n        });\n\n        return (\n            <Section>\n                <SectionTitle>{ this.props.title }</SectionTitle>\n                <SectionTable>\n                    { rows }\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nexport default ProgramList;"]}