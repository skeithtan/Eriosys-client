{"version":3,"sources":["../../../../js/tabs/Programs/program_list.js"],"names":["ProgramList","props","activeYear","activeTerm","setActiveTerm","programList","activeProgram","setActiveProgram","ProgramListHead","onTermChange","bind","event","target","value","year","ProgramListTable","getFilteredPrograms","emptyState","institutions","forEach","push","program","memorandum","institution","name","filter","index","self","indexOf","sort","categorizedByInstitution","programs","programInstitution","length","institutionPrograms","sections","map","institutionProgram","ProgramSection","rows","isActive","title"],"mappings":"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","file":"program_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Input,\n} from \"reactstrap\";\nimport {\n    Section,\n    SectionRow,\n    SectionRowContent,\n    SectionTable,\n    SectionTitle,\n} from \"../../components/section\";\nimport LoadingSpinner from \"../../components/loading\";\n\n\nclass ProgramList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"h-100 d-flex flex-column\">\n                <ProgramListHead year={this.props.activeYear}\n                                 activeTerm={this.props.activeTerm}\n                                 setActiveTerm={this.props.setActiveTerm}/>\n                <ProgramListTable programList={this.props.programList}\n                                  activeProgram={this.props.activeProgram}\n                                  setActiveProgram={this.props.setActiveProgram}/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListHead extends Component {\n    constructor(props) {\n        super(props);\n        this.onTermChange = this.onTermChange.bind(this);\n    }\n\n    onTermChange(event) {\n        this.props.setActiveTerm(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head d-flex flex-column align-items-center\">\n                <div className=\"page-head-controls mr-auto\">\n                    <Input type=\"select\" defaultValue={this.props.activeTerm}\n                           className=\"ml-auto btn-sm btn-outline-success\" id=\"term-select\" onChange={this.onTermChange}>\n                        <option value=\"1\">Term 1</option>\n                        <option value=\"2\">Term 2</option>\n                        <option value=\"3\">Term 3</option>\n                    </Input>\n                </div>\n                <div className=\"d-flex flex-row w-100 mb-2 align-items-center\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0 text-secondary\">Programs</h5>\n                        <div className=\"d-flex flex-row\">\n                            <h4 className=\"page-head-title mb-0\">\n                                {this.props.year} - {this.props.year + 1}\n                            </h4>\n                        </div>\n                    </div>\n                </div>\n                <Input type=\"search\" placeholder=\"Search\" className=\"search-input\"/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getFilteredPrograms = this.getFilteredPrograms.bind(this);\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    getFilteredPrograms() {\n        if (this.props.programList === null) {\n            return [];\n        }\n\n        let institutions = [];\n\n        // Makes the list of Institution Names\n        this.props.programList.forEach(program => {\n            institutions.push(program.memorandum.institution.name);\n        });\n\n        // Get uniques only?\n        institutions = institutions.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        });\n\n        // Arrange alphabetically\n        institutions = institutions.sort();\n\n        let categorizedByInstitution = [];\n\n        institutions.forEach(institution => {\n            let programs = [];\n            categorizedByInstitution.push({\n                institution : institution,\n                programs : programs,\n            });\n\n            this.props.programList.forEach(program => {\n                const programInstitution = program.memorandum.institution.name;\n                if (programInstitution === institution) {\n                    programs.push(program);\n                }\n            });\n        });\n\n        return categorizedByInstitution;\n    }\n\n    emptyState() {\n        return (\n            <div>\n                This is empty\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.programList === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.programList.length === 0) {\n            return this.emptyState();\n        }\n\n        const institutionPrograms = this.getFilteredPrograms();\n\n        const sections = institutionPrograms.map((institutionProgram, index) => {\n            return <ProgramSection key={index}\n                                   title={institutionProgram.institution}\n                                   activeProgram={this.props.activeProgram}\n                                   programs={institutionProgram.programs}\n                                   setActiveProgram={this.props.setActiveProgram}/>;\n        });\n\n        return (\n            <div className=\"page-body\">\n                {sections}\n            </div>\n        );\n    }\n}\n\nclass ProgramSection extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const rows = this.props.programs.map((program, index) => {\n            let isActive = false;\n\n            if (this.props.activeProgram !== null) {\n                isActive = this.props.activeProgram.name === program.name;\n            }\n\n            const setActiveProgram = () => this.props.setActiveProgram(program);\n\n            return (\n                <SectionRow selectable key={index} onClick={setActiveProgram} active={isActive}>\n                    <SectionRowContent>{program.name}</SectionRowContent>\n                </SectionRow>\n            );\n        });\n\n        return (\n            <Section>\n                <SectionTitle>{this.props.title}</SectionTitle>\n                <SectionTable>\n                    {rows}\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nexport default ProgramList;"]}