{"version":3,"sources":["../../../../js/tabs/Programs/programs.js"],"names":["fetchYears","onResult","query","then","fetchPrograms","year","term","fetchStudents","id","Programs","props","state","yearList","programList","studyFieldList","activeYear","activeTerm","activeProgram","activeStudyField","sidebarContent","refreshYears","bind","setActiveYear","setActiveTerm","refreshStudents","setActiveProgram","setSidebarContent","setState","result","academic_years","academic_year_start","programs","program","studyfield_set","sidebarClass"],"mappings":"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","file":"programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport YearList from \"./year_list\";\nimport ProgramList from \"./program_list\";\nimport StudentList from \"./student_list\";\nimport terms from \"./terms_list\";\nimport graphql from \"../../graphql\";\nimport { AcademicYearSidebarPane } from \"./sidebar_panes\";\n\n\nfunction fetchYears(onResult) {\n    graphql.query(`\n    {\n        academic_years {\n            academic_year_start\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchPrograms(year, term, onResult) {\n    graphql.query(`\n    {\n        programs(year:${year}, term:${term}) {\n            id\n            name\n            memorandum {\n                institution {\n                    name\n                }\n            }\n            terms {\n                number\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchStudents(id, onResult) {\n    graphql.query(`\n    {\n        program(id:${id}) {\n            id\n            studyfield_set {\n                id\n                name\n                studentprogram_set {\n                    study_field {\n                        name\n                    }\n                    student {\n                        id\n                        id_number\n                        first_name\n                        middle_name\n                        family_name\n                    }\n                }\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nclass Programs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            yearList : null,\n            programList : null,\n            studyFieldList : null,\n            activeYear : null,\n            activeTerm : 1,\n            activeProgram : null,\n            activeStudyField : null,\n            sidebarContent : null,\n        };\n\n        this.refreshYears = this.refreshYears.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.setActiveTerm = this.setActiveTerm.bind(this);\n        this.refreshStudents = this.refreshStudents.bind(this);\n        this.setActiveProgram = this.setActiveProgram.bind(this);\n        this.setSidebarContent = this.setSidebarContent.bind(this);\n        this.refreshYears();\n    }\n\n    setSidebarContent(sidebarContent) {\n        this.setState({\n            sidebarContent : sidebarContent,\n        });\n    }\n\n    refreshYears() {\n        fetchYears(result => {\n            this.setState({\n                yearList : result.academic_years,\n            });\n        });\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year.academic_year_start,\n            activeProgram : null,\n            studyFieldList : null,\n        });\n\n        fetchPrograms(year.academic_year_start, this.state.activeTerm, result => {\n            this.setState({\n                programList : result.programs,\n            });\n        });\n\n        this.setSidebarContent(<AcademicYearSidebarPane academicYear={year}/>);\n    }\n\n    setActiveTerm(term) {\n        this.setState({\n            activeTerm : term,\n            activeProgram : null,\n        });\n\n        fetchPrograms(this.state.activeYear, term, result => {\n            this.setState({\n                programList : result.programs,\n            });\n        });\n    }\n\n    setActiveProgram(program) {\n        this.setState({\n            activeProgram : program,\n            studyFieldList : null,\n        });\n\n        fetchStudents(program.id, result => {\n            this.setState({\n                studyFieldList : result.program.studyfield_set,\n            });\n        });\n    }\n\n    refreshStudents() {\n        fetchStudents(this.state.activeProgram.id, result => {\n            this.setState({\n                studyFieldList : result.program.studyfield_set,\n            });\n        });\n    }\n\n    render() {\n        let sidebarClass = \"sidebar-right \";\n        if (this.state.sidebarContent === null) {\n            sidebarClass += \"dismissed\";\n        }\n\n        return (\n            <div className=\"d-flex flex-row h-100\">\n                <div id=\"programs-page\"\n                     className=\"container-fluid d-flex flex-row p-0 h-100 page-body\">\n                    <YearList yearList={this.state.yearList}\n                              setActiveYear={this.setActiveYear}\n                              activeYear={this.state.activeYear}/>\n                    {this.state.activeYear !== null &&\n                    <ProgramList programList={this.state.programList}\n                                 activeYear={this.state.activeYear}\n                                 activeTerm={this.state.activeTerm}\n                                 activeProgram={this.state.activeProgram}\n                                 setActiveTerm={this.setActiveTerm}\n                                 setActiveProgram={this.setActiveProgram}/>\n                    }\n                    {this.state.activeProgram !== null &&\n                    <StudentList studyFieldList={this.state.studyFieldList}\n                                 activeProgram={this.state.activeProgram}\n                                 refreshStudents={this.refreshStudents}/>\n                    }\n\n                </div>\n                <div className={sidebarClass}>\n                    {this.state.sidebarContent}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Programs;"]}