{"version":3,"sources":["../../../../js/tabs/Programs/programs.js"],"names":["fetchYears","onResult","query","then","fetchPrograms","year","term","Programs","props","state","yearList","programList","activeYear","activeTerm","activeProgram","activeStudyField","refreshYears","bind","setActiveYear","setActiveTerm","setActiveProgram","setActiveStudyField","setState","result","academic_years","programs","program","console","log","studyField"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAGA,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,sBAAQC,KAAR,+FAMGC,IANH,CAMQF,QANR;AAOH;;AAED,SAASG,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCL,QAAnC,EAA6C;AACzC,sBAAQC,KAAR,qCAEoBG,IAFpB,eAEkCC,IAFlC,qOAcGH,IAdH,CAcQF,QAdR;AAeH;;AAED;;IAEMM,Q;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,sBAAW,IADF;AAETC,yBAAc,IAFL;AAGTC,wBAAa,IAHJ;AAITC,wBAAa,CAJJ;AAKTC,2BAAgB,IALP;AAMTC,8BAAmB;AANV,SAAb;;AASA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,cAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,OAArB;AACA,cAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,OAArB;AACA,cAAKG,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBH,IAAtB,OAAxB;AACA,cAAKI,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBJ,IAAzB,OAA3B;;AAEA,cAAKD,YAAL;AAlBe;AAmBlB;;;;uCAEc;AAAA;;AACXhB,uBAAW,kBAAU;AACjB,uBAAKsB,QAAL,CAAc;AACVZ,8BAAWa,OAAOC;AADR,iBAAd;AAGH,aAJD;AAKH;;;sCAEanB,I,EAAM;AAAA;;AAChB,iBAAKiB,QAAL,CAAc;AACVV,4BAAaP,IADH;AAEVS,+BAAgB;AAFN,aAAd;;AAKAV,0BAAcC,IAAd,EAAoB,KAAKI,KAAL,CAAWI,UAA/B,EAA2C,kBAAU;AACjD,uBAAKS,QAAL,CAAc;AACVX,iCAAcY,OAAOE;AADX,iBAAd;AAGH,aAJD;AAKH;;;sCAEanB,I,EAAM;AAAA;;AAChB,iBAAKgB,QAAL,CAAc;AACVT,4BAAaP,IADH;AAEVQ,+BAAgB;AAFN,aAAd;;AAKAV,0BAAc,KAAKK,KAAL,CAAWG,UAAzB,EAAqCN,IAArC,EAA2C,kBAAU;AACjD,uBAAKgB,QAAL,CAAc;AACVX,iCAAcY,OAAOE;AADX,iBAAd;AAGH,aAJD;AAKH;;;yCAEgBC,O,EAAS;AACtBC,oBAAQC,GAAR,CAAYF,OAAZ;AACA,iBAAKJ,QAAL,CAAc;AACVR,+BAAgBY;AADN,aAAd;AAGH;;;4CAEmBG,U,EAAY;AAC5B,iBAAKP,QAAL,CAAc;AACVP,kCAAmBc;AADT,aAAd;AAGH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,IAAG,eAAR,EAAwB,WAAU,qDAAlC;AACI,qEAAU,UAAU,KAAKpB,KAAL,CAAWC,QAA/B;AACU,mCAAe,KAAKQ,aAD9B;AAEU,gCAAY,KAAKT,KAAL,CAAWG,UAFjC,GADJ;AAIK,qBAAKH,KAAL,CAAWG,UAAX,KAA0B,IAA1B,IACD,wDAAa,aAAa,KAAKH,KAAL,CAAWE,WAArC;AACa,gCAAY,KAAKF,KAAL,CAAWG,UADpC;AAEa,gCAAY,KAAKH,KAAL,CAAWI,UAFpC;AAGa,mCAAe,KAAKJ,KAAL,CAAWK,aAHvC;AAIa,mCAAe,KAAKK,aAJjC;AAKa,sCAAkB,KAAKC,gBALpC,GALJ;AAYK,qBAAKX,KAAL,CAAWK,aAAX,KAA6B,IAA7B,IAAqC;AAZ1C,aADJ;AAgBH;;;;;;kBAGUP,Q","file":"programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport YearList from \"./year_list\";\nimport ProgramList from \"./program_list\";\nimport StudentList from \"./student_list\";\nimport terms from \"./terms_list\";\nimport graphql from \"../../graphql\";\n\n\nfunction fetchYears(onResult) {\n    graphql.query(`\n    {\n        academic_years {\n            academic_year_start\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchPrograms(year, term, onResult) {\n    graphql.query(`\n    {\n        programs(year:${year}, term:${term}) {\n            name\n            memorandum {\n                institution {\n                    name\n                }\n            }\n            terms {\n                number\n            }\n        }\n    }\n    `).then(onResult);\n}\n\n// TODO: Fetch students under a program and sort them by study field\n\nclass Programs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            yearList : null,\n            programList : null,\n            activeYear : null,\n            activeTerm : 1,\n            activeProgram : null,\n            activeStudyField : null,\n        };\n\n        this.refreshYears = this.refreshYears.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.setActiveTerm = this.setActiveTerm.bind(this);\n        this.setActiveProgram = this.setActiveProgram.bind(this);\n        this.setActiveStudyField = this.setActiveStudyField.bind(this);\n\n        this.refreshYears();\n    }\n\n    refreshYears() {\n        fetchYears(result => {\n            this.setState({\n                yearList : result.academic_years,\n            });\n        });\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year,\n            activeProgram : null,\n        });\n\n        fetchPrograms(year, this.state.activeTerm, result => {\n            this.setState({\n                programList : result.programs,\n            });\n        });\n    }\n\n    setActiveTerm(term) {\n        this.setState({\n            activeTerm : term,\n            activeProgram : null,\n        });\n\n        fetchPrograms(this.state.activeYear, term, result => {\n            this.setState({\n                programList : result.programs,\n            });\n        });\n    }\n\n    setActiveProgram(program) {\n        console.log(program);\n        this.setState({\n            activeProgram : program,\n        });\n    }\n\n    setActiveStudyField(studyField) {\n        this.setState({\n            activeStudyField : studyField,\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"programs-page\" className=\"container-fluid d-flex flex-row p-0 h-100 page-body\">\n                <YearList yearList={this.state.yearList}\n                          setActiveYear={this.setActiveYear}\n                          activeYear={this.state.activeYear}/>\n                {this.state.activeYear !== null &&\n                <ProgramList programList={this.state.programList}\n                             activeYear={this.state.activeYear}\n                             activeTerm={this.state.activeTerm}\n                             activeProgram={this.state.activeProgram}\n                             setActiveTerm={this.setActiveTerm}\n                             setActiveProgram={this.setActiveProgram}/>\n                }\n                {this.state.activeProgram !== null && <StudentList/>}\n            </div>\n        );\n    }\n}\n\nexport default Programs;"]}