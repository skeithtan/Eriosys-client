{"version":3,"sources":["../../../../js/tabs/Programs/programs.js"],"names":["fetchYears","onResult","query","then","fetchPrograms","year","term","fetchStudents","id","Programs","props","state","yearList","programList","studyFieldList","activeYear","activeTerm","activeProgram","activeStudyField","sidebarContent","refreshYears","bind","setActiveYear","setActiveTerm","programsList","studentList","refreshStudents","setActiveProgram","setSidebarContent","setState","result","academic_years","academic_year_start","programs","program","studyfield_set"],"mappings":"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","file":"programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport YearList from \"./year_list\";\nimport ProgramList from \"./program_list\";\nimport StudentList from \"./student_list\";\nimport terms from \"./terms_list\";\nimport graphql from \"../../graphql\";\nimport { AcademicYearSidebarPane } from \"./sidebar_panes\";\n\n\nfunction fetchYears(onResult) {\n    graphql.query(`\n    {\n        academic_years {\n            academic_year_start\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchPrograms(year, term, onResult) {\n    graphql.query(`\n    {\n        programs(year:${year}, term:${term}) {\n            id\n            name\n            memorandum {\n                institution {\n                    name\n                }\n            }\n            terms {\n                number\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchStudents(id, onResult) {\n    graphql.query(`\n    {\n        program(id:${id}) {\n            id\n            studyfield_set {\n                id\n                name\n                studentprogram_set {\n                    study_field {\n                        name\n                    }\n                    student {\n                        id\n                        id_number\n                        first_name\n                        middle_name\n                        family_name\n                    }\n                }\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nclass Programs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            yearList : null,\n            programList : null,\n            studyFieldList : null,\n            activeYear : null,\n            activeTerm : 1,\n            activeProgram : null,\n            activeStudyField : null,\n            sidebarContent : null,\n        };\n\n        this.refreshYears = this.refreshYears.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.setActiveTerm = this.setActiveTerm.bind(this);\n        this.programsList = this.programsList.bind(this);\n        this.studentList = this.studentList.bind(this);\n        this.refreshStudents = this.refreshStudents.bind(this);\n        this.setActiveProgram = this.setActiveProgram.bind(this);\n        this.setSidebarContent = this.setSidebarContent.bind(this);\n        this.refreshYears();\n    }\n\n    setSidebarContent(sidebarContent) {\n        this.setState({\n            sidebarContent : sidebarContent,\n        });\n    }\n\n    refreshYears() {\n        fetchYears(result => {\n            this.setState({\n                yearList : result.academic_years,\n            });\n        });\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year.academic_year_start,\n            activeProgram : null,\n            studyFieldList : null,\n        });\n\n        fetchPrograms(year.academic_year_start, this.state.activeTerm, result => {\n            this.setState({\n                programList : result.programs,\n            });\n        });\n\n        this.setSidebarContent(<AcademicYearSidebarPane academicYear={year}/>);\n    }\n\n    setActiveTerm(term) {\n        this.setState({\n            activeTerm : term,\n            activeProgram : null,\n        });\n\n        fetchPrograms(this.state.activeYear, term, result => {\n            this.setState({\n                programList : result.programs,\n            });\n        });\n    }\n\n    setActiveProgram(program) {\n        this.setState({\n            activeProgram : program,\n            studyFieldList : null,\n        });\n\n        fetchStudents(program.id, result => {\n            this.setState({\n                studyFieldList : result.program.studyfield_set,\n            });\n        });\n    }\n\n    refreshStudents() {\n        fetchStudents(this.state.activeProgram.id, result => {\n            this.setState({\n                studyFieldList : result.program.studyfield_set,\n            });\n        });\n    }\n\n    programsList() {\n        if (this.state.activeYear === null) {\n            return (\n                <div className=\"programs-page-pane\">\n                    <div className=\"loading-container\">\n                        <h4>Select an academic year to see its programs</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <ProgramList programList={this.state.programList}\n                         activeYear={this.state.activeYear}\n                         activeTerm={this.state.activeTerm}\n                         activeProgram={this.state.activeProgram}\n                         setActiveTerm={this.setActiveTerm}\n                         setActiveProgram={this.setActiveProgram}/>\n        );\n    }\n\n    studentList() {\n        if (this.state.activeProgram === null) {\n            return (\n                <div className=\"programs-page-pane\">\n                    <div className=\"loading-container\">\n                        <h4>Select a program to see its students</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <StudentList studyFieldList={this.state.studyFieldList}\n                         activeProgram={this.state.activeProgram}\n                         refreshStudents={this.refreshStudents}/>\n        );\n    }\n\n    render() {\n        return (\n\n            <div id=\"programs-page\"\n                 className=\"container-fluid d-flex flex-row p-0 h-100 page-body\">\n                <YearList yearList={this.state.yearList}\n                          setActiveYear={this.setActiveYear}\n                          activeYear={this.state.activeYear}/>\n\n                {this.programsList()}\n                {this.studentList()}\n\n                <div className=\"sidebar-right\">\n                    {this.state.sidebarContent}\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Programs;"]}