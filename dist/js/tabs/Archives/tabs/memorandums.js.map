{"version":3,"sources":["../../../../../js/tabs/Archives/tabs/memorandums.js"],"names":["fetchMemorandums","year","onResult","query","then","MemorandumArchives","props","state","activeYear","memorandums","setCurrentYear","bind","setState","result","MemorandumArchivesHead","onCurrentYearChange","event","target","value","years","currentYear","i","push","MemorandumArchivesTable","length","emptyState","rows","map","memorandum","index","MemorandumArchivesRow","memorandumType","category","dateEffective","date_effective","format","archiveDate","archived_at","institution","name","archiver"],"mappings":"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","file":"memorandums.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport moment from \"moment\";\nimport {\n    Input,\n    Table,\n} from \"reactstrap\";\nimport LoadingSpinner from \"../../../components/loading\";\n\n\nfunction fetchMemorandums(year, onResult) {\n    graphql.query(`\n    {\n        memorandums(archived:true, year_archived:${year}) {\n\t\tid\n\t\tcategory\n\t\tarchived_at\n\t\tarchiver\n\t\tdate_effective\n            institution {\n                name\n            }\n\t\t}\n\t}\n\t`).then(onResult);\n}\n\nclass MemorandumArchives extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeYear : moment().year(),\n            memorandums : null,\n        };\n\n        this.setCurrentYear = this.setCurrentYear.bind(this);\n\n        fetchMemorandums(this.state.activeYear, result => {\n            this.setState({\n                memorandums : result.memorandums,\n            });\n        });\n    }\n\n    setCurrentYear(year) {\n        this.setState({\n            activeYear : year,\n            memorandums : null, //Loading\n        });\n\n        fetchMemorandums(year, result => {\n            this.setState({\n                memorandums : result.memorandums,\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <MemorandumArchivesHead setCurrentYear={this.setCurrentYear}\n                                        activeYear={this.state.activeYear}/>\n                <MemorandumArchivesTable memorandums={this.state.memorandums}/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumArchivesHead extends Component {\n    constructor(props) {\n        super(props);\n        this.onCurrentYearChange = this.onCurrentYearChange.bind(this);\n    }\n\n    onCurrentYearChange(event) {\n        this.props.setCurrentYear(event.target.value);\n    }\n\n    render() {\n        const years = [];\n        const currentYear = moment().year();\n\n        //Create options for years 100 years from current year\n        for (let i = 0; i <= 100; i++) {\n            const year = currentYear - i;\n            years.push(<option value={year}\n                               key={i}>{year}</option>);\n        }\n\n\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">\n                        Memorandum Archives\n                    </h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <div className=\"d-flex flex-row align-items-center\">\n                        <b className=\"mr-3\">Year</b>\n                        <Input type=\"select\"\n                               className=\"btn-outline-success\"\n                               defaultValue={this.props.activeYear}\n                               onChange={this.onCurrentYearChange}>\n                            {years}\n                        </Input>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nclass MemorandumArchivesTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    static emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>There's nothing here</h3>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.memorandums === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.memorandums.length === 0) {\n            return MemorandumArchivesTable.emptyState();\n        }\n\n        const rows = this.props.memorandums.map((memorandum, index) => {\n            return <MemorandumArchivesRow memorandum={memorandum} key={index}/>;\n        });\n\n\n        return (\n            <Table striped>\n                <thead>\n                <tr>\n                    <th>Institution Name</th>\n                    <th>Memorandum Type</th>\n                    <th>Date Effective</th>\n                    <th>Archive Date</th>\n                    <th>Archived By</th>\n                </tr>\n                </thead>\n                <tbody>\n                {rows}\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nclass MemorandumArchivesRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandumType = this.props.memorandum.category === \"MOA\" ? \"Agreement\" : \"Understanding\";\n        const dateEffective = moment(this.props.memorandum.date_effective).format(\"LL\");\n        const archiveDate = moment(this.props.memorandum.archived_at).format(\"LLL\");\n\n        return (\n            <tr>\n                <td>{this.props.memorandum.institution.name}</td>\n                <td>{memorandumType}</td>\n                <td>{dateEffective}</td>\n                <td>{archiveDate}</td>\n                <td>{this.props.memorandum.archiver}</td>\n            </tr>\n        );\n    }\n}\n\nexport default MemorandumArchives;"]}