{"version":3,"sources":["../../../../../js/tabs/Archives/tabs/instititutions.js"],"names":["makeInstitutionsQuery","year","query","InstitutionArchives","props","state","activeYear","institutions","activeInstitutionId","error","performQuery","bind","setActiveYear","refreshInstitutions","setActiveInstitution","setState","then","result","catch","setSidebarContent","institution","id","toString","InstitutionArchivesTable","emptyState","length","rows","map","InstitutionArchivesRow","archiveDate","archived_at","format","className","isActive","onClick","name","country","archiver"],"mappings":"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","file":"instititutions.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport moment from \"moment\";\nimport ArchivesHead from \"../archive_head\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport { Table } from \"reactstrap\";\nimport { InstitutionSidebarPane } from \"./sidebar_panes\";\nimport ErrorState from \"../../../components/error_state\";\n\n\nfunction makeInstitutionsQuery(year) {\n    return graphql.query(`\n    {\n        institutions(archived: true, year_archived: ${year}) {\n            id\n            name\n            country\n            archived_at\n            archiver\n        }\n    }\n    `);\n}\n\nclass InstitutionArchives extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeYear : moment().year(),\n            institutions : null,\n            activeInstitutionId : null,\n            error : null,\n        };\n\n        this.performQuery = this.performQuery.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.refreshInstitutions = this.refreshInstitutions.bind(this);\n        this.setActiveInstitution = this.setActiveInstitution.bind(this);\n\n        this.performQuery(this.state.activeYear);\n    }\n\n    performQuery(year) {\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        makeInstitutionsQuery(year)\n            .then(result => {\n                this.setState({\n                    institutions : result.institutions,\n                });\n            })\n            .catch(error => {\n                this.props.setSidebarContent(null);\n                this.setState({\n                    error : error,\n                });\n            });\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year,\n            institutions : null,\n            activeInstitutionId : null,\n        });\n\n        this.props.setSidebarContent(null);\n        this.performQuery(year);\n    }\n\n    setActiveInstitution(institution) {\n        this.setState({\n            activeInstitutionId : institution.id,\n        });\n\n        this.props.setSidebarContent(<InstitutionSidebarPane institution={institution}\n                                                             onRestoreSuccess={this.refreshInstitutions}/>);\n    }\n\n    refreshInstitutions() {\n        this.setActiveYear(this.state.activeYear);\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={() => this.performQuery(this.state.activeYear)}>\n                    {this.state.error.toString()}\n                </ErrorState>\n            );\n        }\n\n\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <ArchivesHead setActiveYear={this.setActiveYear}\n                              activeYear={this.state.activeYear}>Institution Archives</ArchivesHead>\n                <InstitutionArchivesTable institutions={this.state.institutions}\n                                          activeYear={this.state.activeYear}\n                                          setSidebarContent={this.props.setSidebarContent}\n                                          activeInstitutionId={this.state.activeInstitutionId}\n                                          setActiveInstitution={this.setActiveInstitution}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionArchivesTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>There were no archived institutions in {this.props.activeYear}</h3>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.institutions === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.institutions.length === 0) {\n            return this.emptyState();\n        }\n\n        const rows = this.props.institutions.map(institution => {\n            return <InstitutionArchivesRow institution={institution}\n                                           key={institution.id}\n                                           isActive={this.props.activeInstitutionId === institution.id}\n                                           onClick={() => this.props.setActiveInstitution(institution)}/>;\n        });\n\n        return (\n            <Table striped\n                   hover>\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Country</th>\n                    <th>Archive Date</th>\n                    <th>Archived By</th>\n                </tr>\n                </thead>\n                <tbody>\n                {rows}\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nclass InstitutionArchivesRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n        const archiveDate = moment(institution.archived_at).format(\"LLL\");\n\n        const className = this.props.isActive ? \"bg-dlsu-lighter text-white\" : null;\n\n        return (\n            <tr className={className}\n                onClick={this.props.onClick}>\n                <td>{institution.name}</td>\n                <td>{institution.country}</td>\n                <td>{archiveDate}</td>\n                <td>{institution.archiver}</td>\n            </tr>\n        );\n    }\n}\n\nexport default InstitutionArchives;"]}