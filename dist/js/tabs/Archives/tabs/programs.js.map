{"version":3,"sources":["../../../../../js/tabs/Archives/tabs/programs.js"],"names":["fetchPrograms","year","onResult","query","then","ProgramArchives","props","state","activeYear","programs","activeProgramId","setActiveProgram","bind","setActiveYear","setState","result","program","id","setSidebarContent","refreshPrograms","ProgramArchivesTable","emptyState","length","rows","map","index","ProgramArchivesRow","archiveDate","archived_at","format","className","isActive","onClick","institution","name","linkage","archiver"],"mappings":"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","file":"programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport moment from \"moment\";\nimport {\n    Input,\n    Table,\n} from \"reactstrap\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport { ProgramSidebarPane } from \"../../Institutions/tabs/sidebar_panes\";\nimport ArchivesHead from \"../archive_head\";\n\nfunction fetchPrograms(year, onResult) {\n    graphql.query(`\n    {\n        programs(archived:true, year_archived:${year}) {\n            id\n            name\n            linkage {\n                name\n            }\n            studyfield_set {\n                name\n            }\n            institution {\n                name\n            }\n            archiver\n            archived_at\n        }\n\t}\n\t`).then(onResult);\n}\n\nclass ProgramArchives extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeYear : moment().year(),\n            programs : null,\n            activeProgramId : null,\n        };\n\n        this.setActiveProgram = this.setActiveProgram.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n\n        fetchPrograms(this.state.activeYear, result => {\n            this.setState({\n                programs : result.programs,\n            });\n        });\n    }\n\n    setActiveProgram(program) {\n        this.setState({\n            activeProgramId : program.id,\n        });\n\n        this.props.setSidebarContent(<ProgramSidebarPane archived\n                                                         onRestoreSuccess={ this.refreshPrograms }\n                                                         program={ program }/>);\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year,\n            activeProgramId : null,\n            programs : null,\n        });\n\n        this.props.setSidebarContent(null);\n\n        fetchPrograms(year, result => {\n            this.setState({\n                programs : result.programs,\n            });\n        });\n    }\n\n    refreshPrograms() {\n        this.setActiveYear(this.state.activeYear);\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <ArchivesHead setActiveYear={ this.setActiveYear } activeYear={ this.state.activeYear }>Program\n                    Archives</ArchivesHead>\n                <ProgramArchivesTable programs={ this.state.programs }\n                                      activeYear={ this.state.activeYear }\n                                      setSidebarContent={ this.props.setSidebarContent }\n                                      activeProgramId={ this.state.activeProgramId }\n                                      setActiveProgram={ this.setActiveProgram }/>\n            </div>\n        );\n    }\n}\n\nclass ProgramArchivesTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>There were no archived programs in { this.props.activeYear }.</h3>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.programs === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.programs.length === 0) {\n            return this.emptyState();\n        }\n\n        const rows = this.props.programs.map((program, index) => {\n            return <ProgramArchivesRow program={ program } key={ index }\n                                       isActive={ this.props.activeProgramId === program.id }\n                                       onClick={ () => this.props.setActiveProgram(program) }/>;\n        });\n\n        return (\n            <Table striped\n                   hover>\n                <thead>\n                <tr>\n                    <th>Institution Name</th>\n                    <th>Program Name</th>\n                    <th>Linkage</th>\n                    <th>Archive Date</th>\n                    <th>Archived By</th>\n                </tr>\n                </thead>\n                <tbody>\n                { rows }\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nclass ProgramArchivesRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const program = this.props.program;\n        const archiveDate = moment(program.archived_at).format(\"LLL\");\n        const className = this.props.isActive ? \"bg-dlsu-lighter text-white\" : \"table-light\";\n\n        return (\n            <tr className={ className }\n                onClick={ this.props.onClick }>\n                <td>{ program.institution.name }</td>\n                <td>{ program.name }</td>\n                <td>{ program.linkage.name }</td>\n                <td>{ archiveDate }</td>\n                <td>{ program.archiver }</td>\n            </tr>\n        );\n    }\n}\n\nexport default ProgramArchives;"]}