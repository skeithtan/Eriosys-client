{"version":3,"sources":["../../../../js/tabs/OutboundPrograms/outbound_programs.js"],"names":["fetchYears","onResult","query","then","fetchPrograms","year","term","fetchStudents","id","OutboundPrograms","props","state","yearList","programList","studentList","activeYear","activeTerm","activeProgram","activeStudyField","refreshYears","bind","setActiveYear","setActiveTerm","programsList","refreshStudents","setActiveProgram","setState","result","academic_years","academic_year_start","outbound_programs","program","outbound_program","outboundstudentprogram_set","default"],"mappings":"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","file":"outbound_programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport YearList from \"./year_list\";\nimport ProgramList from \"./outbound_program_list\";\nimport StudentList from \"./student_list\";\nimport graphql from \"../../graphql\";\n\nfunction fetchYears(onResult) {\n    graphql.query(`\n    {\n        academic_years {\n            academic_year_start\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchPrograms(year, term, onResult) {\n    graphql.query(`\n    {\n        outbound_programs(year:${year}, term:${term}) {\n            id\n            name\n            institution {\n               name\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchStudents(id, onResult) {\n    graphql.query(`\n    {\n        outbound_program(id:${id}) {\n            outboundstudentprogram_set {\n                student {\n                    id_number\n                    first_name\n                    middle_name\n                    family_name\n                }\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nclass OutboundPrograms extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            yearList : null,\n            programList : null,\n            studentList : null,\n            activeYear : null,\n            activeTerm : 1,\n            activeProgram : null,\n            activeStudyField : null,\n        };\n\n        this.refreshYears = this.refreshYears.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.setActiveTerm = this.setActiveTerm.bind(this);\n        this.programsList = this.programsList.bind(this);\n        this.studentList = this.studentList.bind(this);\n        this.refreshStudents = this.refreshStudents.bind(this);\n        this.setActiveProgram = this.setActiveProgram.bind(this);\n        this.refreshYears();\n    }\n\n    refreshYears() {\n        fetchYears(result => {\n            this.setState({\n                yearList : result.academic_years,\n            });\n        });\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year.academic_year_start,\n            activeProgram : null,\n            studentList : null,\n        });\n\n        fetchPrograms(year.academic_year_start, this.state.activeTerm, result => {\n            this.setState({\n                programList : result.outbound_programs,\n            });\n        });\n    }\n\n    setActiveTerm(term) {\n        this.setState({\n            activeTerm : term,\n            activeProgram : null,\n        });\n\n        fetchPrograms(this.state.activeYear, term, result => {\n            this.setState({\n                programList : result.outbound_programs,\n            });\n        });\n    }\n\n    setActiveProgram(program) {\n        this.setState({\n            activeProgram : program,\n            studentList : null,\n        });\n\n        fetchStudents(program.id, result => {\n            this.setState({\n                studentList : result.outbound_program.outboundstudentprogram_set,\n            });\n        });\n    }\n\n    refreshStudents() {\n        fetchStudents(this.state.activeProgram.id, result => {\n            this.setState({\n                studentList : result.outbound_program.outboundstudentprogram_set,\n            });\n        });\n    }\n\n    programsList() {\n        if (this.state.activeYear === null) {\n            return (\n                <div className=\"programs-page-pane\">\n                    <div className=\"loading-container\">\n                        <h4>Select an academic year to see its programs</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <ProgramList programList={ this.state.programList }\n                         activeYear={ this.state.activeYear }\n                         activeTerm={ this.state.activeTerm }\n                         activeProgram={ this.state.activeProgram }\n                         setActiveTerm={ this.setActiveTerm }\n                         setActiveProgram={ this.setActiveProgram }/>\n        );\n    }\n\n    studentList() {\n        if (this.state.activeProgram === null) {\n            return (\n                <div className=\"programs-page-pane\">\n                    <div className=\"loading-container\">\n                        <h4>Select a program to see its students</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <StudentList studentList={ this.state.studentList }\n                         activeProgram={ this.state.activeProgram }\n                         refreshStudents={ this.refreshStudents }/>\n        );\n    }\n\n    render() {\n        return (\n\n            <div id=\"programs-page\"\n                 className=\"d-flex flex-row p-0 h-100\">\n                <YearList yearList={ this.state.yearList }\n                          setActiveYear={ this.setActiveYear }\n                          activeYear={ this.state.activeYear }/>\n\n                { this.programsList() }\n                { this.studentList() }\n\n            </div>\n\n        );\n    }\n}\n\nexport {\n    OutboundPrograms as default,\n    fetchYears,\n};"]}