{"version":3,"sources":["../../../../js/tabs/InboundPrograms/inbound_program_list.js"],"names":["ProgramList","props","state","programFormModalIsShowing","toggleProgramFormModal","bind","setState","activeYear","activeTerm","setActiveTerm","programList","activeProgram","setActiveProgram","refreshPrograms","ProgramListHead","onTermChange","event","target","value","year","ProgramListTable","emptyState","programs","length","rows","map","program","index","isActive","id","name"],"mappings":"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","file":"inbound_program_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    ButtonGroup,\n    Form,\n    Input,\n} from \"reactstrap\";\nimport {\n    SectionRow,\n    SectionRowContent,\n} from \"../../components/section\";\nimport LoadingSpinner from \"../../components/loading\";\nimport {\n    ProgramFormModal,\n} from \"../Institutions/modals\";\n\n\nclass ProgramList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            programFormModalIsShowing : false,\n        };\n\n        this.toggleProgramFormModal = this.toggleProgramFormModal.bind(this);\n    }\n\n    toggleProgramFormModal() {\n        this.setState({\n            programFormModalIsShowing : !this.state.programFormModalIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"programs-page-pane d-flex flex-column\">\n                <ProgramListHead year={this.props.activeYear}\n                                 activeTerm={this.props.activeTerm}\n                                 setActiveTerm={this.props.setActiveTerm}\n                                 toggleProgramFormModal={this.toggleProgramFormModal}/>\n                <ProgramListTable programs={this.props.programList}\n                                  activeTerm={this.props.activeTerm}\n                                  activeProgram={this.props.activeProgram}\n                                  setActiveProgram={this.props.setActiveProgram}/>\n                <div className=\"tab-bar\">\n                    <div className=\"p-3 justify-content-center mb-0 d-flex flex-row\">\n                        <ButtonGroup>\n                            <Button outline\n                                    size=\"sm\"\n                                    color=\"success\"\n                                    active={this.props.activeTerm === 1}\n                                    onClick={() => this.props.setActiveTerm(1)}>Term 1</Button>\n                            <Button outline\n                                    size=\"sm\"\n                                    color=\"success\"\n                                    active={this.props.activeTerm === 2}\n                                    onClick={() => this.props.setActiveTerm(2)}>Term 2</Button>\n                            <Button outline\n                                    size=\"sm\"\n                                    color=\"success\"\n                                    active={this.props.activeTerm === 3}\n                                    onClick={() => this.props.setActiveTerm(3)}>Term 3</Button>\n                        </ButtonGroup>\n                    </div>\n                </div>\n\n                <ProgramFormModal toggle={this.toggleProgramFormModal}\n                                  refresh={this.props.refreshPrograms}\n                                  isOpen={this.state.programFormModalIsShowing}\n                                  institution={null}/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onTermChange = this.onTermChange.bind(this);\n    }\n\n    onTermChange(event) {\n        this.props.setActiveTerm(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head d-flex flex-column align-items-center\">\n                <div className=\"page-head-controls w-100\">\n                    <Button outline\n                            color=\"success\"\n                            size=\"sm\"\n                            className=\"ml-auto\"\n                            onClick={this.props.toggleProgramFormModal}>Add Inbound Program</Button>\n                </div>\n                <div className=\"d-flex flex-row w-100 mb-2 align-items-center\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0 text-secondary\">Programs</h5>\n                        <div className=\"d-flex flex-row\">\n                            <h4 className=\"page-head-title mb-0\">\n                                {this.props.year} - {this.props.year + 1}\n                            </h4>\n                        </div>\n                    </div>\n                </div>\n                <Input type=\"search\"\n                       placeholder=\"Search\"\n                       className=\"search-input\"/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h5>There are no programs for Term {this.props.activeTerm}</h5>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.programs === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.programs.length === 0) {\n            return this.emptyState();\n        }\n\n        const programs = this.props.programs;\n\n        const rows = programs.map((program, index) => {\n            let isActive = false;\n\n            if (this.props.activeProgram !== null) {\n                isActive = this.props.activeProgram.id === program.id;\n            }\n\n            const setActiveProgram = () => this.props.setActiveProgram(program);\n\n            return (\n                <SectionRow selectable\n                            key={index}\n                            onClick={setActiveProgram}\n                            active={isActive}>\n                    <SectionRowContent>{program.name}</SectionRowContent>\n                </SectionRow>\n            );\n        });\n\n        return (\n            <div className=\"page-body\">\n                {rows}\n            </div>\n        );\n    }\n}\n\nexport default ProgramList;"]}