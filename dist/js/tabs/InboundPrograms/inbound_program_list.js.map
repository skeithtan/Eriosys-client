{"version":3,"sources":["../../../../js/tabs/InboundPrograms/inbound_program_list.js"],"names":["ProgramList","props","activeYear","programList","activeProgram","setActiveProgram","ProgramListHead","year","ProgramListTable","emptyState","bind","programs","length","rows","map","program","index","isActive","id","name"],"mappings":";;;;;;;;AAAA;;;;AACA;;AAGA;;AAIA;;;;;;;;;;;;IAEMA,W;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,yHACTA,KADS;AAElB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,uCAAf;AACI,8CAAC,eAAD,IAAiB,MAAO,KAAKA,KAAL,CAAWC,UAAnC,GADJ;AAEI,8CAAC,gBAAD,IAAkB,UAAW,KAAKD,KAAL,CAAWE;AACpC;AADJ,sBAEkB,eAAgB,KAAKF,KAAL,CAAWG,aAF7C;AAGkB,sCAAmB,KAAKH,KAAL,CAAWI,gBAHhD;AAFJ,aADJ;AASH;;;;;;IAGCC,e;;;AACF,6BAAYL,KAAZ,EAAmB;AAAA;;AAAA,iIACTA,KADS;AAElB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,iDAAf;AACI;AAAA;AAAA,sBAAK,WAAU,+CAAf;AACI;AAAA;AAAA,0BAAK,WAAU,SAAf;AACI;AAAA;AAAA,8BAAI,WAAU,qBAAd;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA,8BAAK,WAAU,iBAAf;AACI;AAAA;AAAA,kCAAI,WAAU,sBAAd;AACM,qCAAKA,KAAL,CAAWM,IADjB;AAAA;AAC4B,qCAAKN,KAAL,CAAWM,IAAX,GAAkB;AAD9C;AADJ;AAFJ;AADJ,iBADJ;AAWI,mEAAO,MAAK,QAAZ,EAAqB,aAAY,QAAjC,EAA0C,WAAU,cAApD;AAXJ,aADJ;AAeH;;;;;;IAGCC,gB;;;AACF,8BAAYP,KAAZ,EAAmB;AAAA;;AAAA,yIACTA,KADS;;AAGf,eAAKQ,UAAL,GAAkB,OAAKA,UAAL,CAAgBC,IAAhB,QAAlB;AAHe;AAIlB;;;;qCAEY;AACT,mBACI;AAAA;AAAA,kBAAK,WAAU,mBAAf;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,aADJ;AAKH;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKT,KAAL,CAAWU,QAAX,KAAwB,IAA5B,EAAkC;AAC9B,uBAAO,sDAAP;AACH;;AAED,gBAAI,KAAKV,KAAL,CAAWU,QAAX,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AAClC,uBAAO,KAAKH,UAAL,EAAP;AACH;;AAED,gBAAME,WAAW,KAAKV,KAAL,CAAWU,QAA5B;;AAEA,gBAAME,OAAOF,SAASG,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC1C,oBAAIC,WAAW,KAAf;;AAEA,oBAAI,OAAKhB,KAAL,CAAWG,aAAX,KAA6B,IAAjC,EAAuC;AACnCa,+BAAW,OAAKhB,KAAL,CAAWG,aAAX,CAAyBc,EAAzB,KAAgCH,QAAQG,EAAnD;AACH;;AAED,oBAAMb,mBAAmB,SAAnBA,gBAAmB;AAAA,2BAAM,OAAKJ,KAAL,CAAWI,gBAAX,CAA4BU,OAA5B,CAAN;AAAA,iBAAzB;;AAEA,uBACI;AAAA;AAAA,sBAAY,gBAAZ,EAAuB,KAAMC,KAA7B,EAAqC,SAAUX,gBAA/C,EAAkE,QAASY,QAA3E;AACI;AAAA;AAAA;AAAqBF,gCAAQI;AAA7B;AADJ,iBADJ;AAKH,aAdY,CAAb;;AAgBA,mBACI;AAAA;AAAA,kBAAK,WAAU,WAAf;AACMN;AADN,aADJ;AAKH;;;;;;kBAGUb,W","file":"inbound_program_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Input,\n} from \"reactstrap\";\nimport {\n    SectionRow,\n    SectionRowContent,\n} from \"../../components/section\";\nimport LoadingSpinner from \"../../components/loading\";\n\nclass ProgramList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"programs-page-pane d-flex flex-column\">\n                <ProgramListHead year={ this.props.activeYear }/>\n                <ProgramListTable programs={ this.props.programList }\n                    // activeTerm={ this.props.activeTerm }\n                                  activeProgram={ this.props.activeProgram }\n                                  setActiveProgram={ this.props.setActiveProgram }/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head d-flex flex-column align-items-center\">\n                <div className=\"d-flex flex-row w-100 mb-2 align-items-center\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0 text-secondary\">Programs</h5>\n                        <div className=\"d-flex flex-row\">\n                            <h4 className=\"page-head-title mb-0\">\n                                { this.props.year } - { this.props.year + 1 }\n                            </h4>\n                        </div>\n                    </div>\n                </div>\n                <Input type=\"search\" placeholder=\"Search\" className=\"search-input\"/>\n            </div>\n        );\n    }\n}\n\nclass ProgramListTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h5>There are no programs for this academic year</h5>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.programs === null) {\n            return <LoadingSpinner/>;\n        }\n\n        if (this.props.programs.length === 0) {\n            return this.emptyState();\n        }\n\n        const programs = this.props.programs;\n\n        const rows = programs.map((program, index) => {\n            let isActive = false;\n\n            if (this.props.activeProgram !== null) {\n                isActive = this.props.activeProgram.id === program.id;\n            }\n\n            const setActiveProgram = () => this.props.setActiveProgram(program);\n\n            return (\n                <SectionRow selectable key={ index } onClick={ setActiveProgram } active={ isActive }>\n                    <SectionRowContent>{ program.name }</SectionRowContent>\n                </SectionRow>\n            );\n        });\n\n        return (\n            <div className=\"page-body\">\n                { rows }\n            </div>\n        );\n    }\n}\n\nexport default ProgramList;"]}