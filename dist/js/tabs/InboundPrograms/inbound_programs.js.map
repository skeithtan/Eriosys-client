{"version":3,"sources":["../../../../js/tabs/InboundPrograms/inbound_programs.js"],"names":["fetchYears","onResult","query","then","fetchPrograms","year","term","fetchStudents","id","InboundPrograms","props","state","yearList","programList","activeYear","activeTerm","activeProgram","studentList","refreshYears","bind","setActiveYear","setActiveTerm","setActiveProgram","refreshPrograms","setState","academic_year_start","result","inbound_programs","program","inbound_program","inboundstudentprogram_set","academic_years"],"mappings":"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","file":"inbound_programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../graphql\";\nimport YearList from \"../OutboundPrograms/year_list\";\nimport ProgramList from \"./inbound_program_list\";\nimport StudentList from \"./student_list\";\n\nfunction fetchYears(onResult) {\n    graphql.query(`\n    {\n        academic_years {\n            academic_year_start\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchPrograms(year, term, onResult) {\n    graphql.query(`\n    {\n        inbound_programs(year:${year}, term:${term}) {\n            id\n            name\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchStudents(id, onResult) {\n    graphql.query(`\n    {\n        inbound_program(id:${id}) {\n            id\n            inboundstudentprogram_set {\n                id\n                student {\n                    id\n                    id_number\n                    first_name\n                    middle_name\n                    family_name\n                }\n            }\n        }\n    }\n    `).then(onResult);\n}\n\nclass InboundPrograms extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            yearList : null,\n            programList : null,\n            activeYear : null,\n            activeTerm : 1,\n            activeProgram : null,\n            studentList : null,\n        };\n\n        this.refreshYears = this.refreshYears.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.setActiveTerm = this.setActiveTerm.bind(this);\n        this.programList = this.programList.bind(this);\n        this.setActiveProgram = this.setActiveProgram.bind(this);\n        this.studentList = this.studentList.bind(this);\n        this.refreshPrograms = this.refreshPrograms.bind(this);\n        this.refreshYears();\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year.academic_year_start,\n            activeProgram : null,\n            studentList : null,\n        });\n\n        fetchPrograms(year.academic_year_start, this.state.activeTerm, result => {\n            this.setState({\n                programList : result.inbound_programs,\n            });\n        });\n    }\n\n    setActiveTerm(term) {\n        this.setState({\n            activeTerm : term,\n            activeProgram : null,\n        });\n\n        fetchPrograms(this.state.activeYear, term, result => {\n            this.setState({\n                programList : result.inbound_programs,\n            });\n        });\n    }\n\n    setActiveProgram(program) {\n        this.setState({\n            activeProgram : program,\n        });\n\n        fetchStudents(program.id, result => {\n            this.setState({\n                studentList : result.inbound_program.inboundstudentprogram_set,\n            });\n        });\n    }\n\n    refreshYears() {\n        fetchYears(result => {\n            this.setState({\n                yearList : result.academic_years,\n            });\n        });\n    }\n\n    refreshPrograms() {\n        fetchPrograms(this.state.activeYear, this.state.activeTerm, result => {\n            this.setState({\n                activeProgram : null,\n                studentList : null,\n                programList : result.inbound_programs,\n            });\n        });\n    }\n\n    programList() {\n        if (this.state.activeYear === null) {\n            return (\n                <div className=\"programs-page-pane\">\n                    <div className=\"loading-container\">\n                        <h4>Select an academic year to see its programs</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <ProgramList programList={ this.state.programList }\n                         activeYear={ this.state.activeYear }\n                         activeTerm={ this.state.activeTerm }\n                         setActiveTerm={ this.setActiveTerm }\n                         activeProgram={ this.state.activeProgram }\n                         setActiveProgram={ this.setActiveProgram }\n                         refreshPrograms={ this.refreshPrograms }/>\n        );\n    }\n\n    studentList() {\n        if (this.state.activeProgram === null) {\n            return (\n                <div className=\"programs-page-pane\">\n                    <div className=\"loading-container\">\n                        <h4>Select a program to see its students</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <StudentList activeProgram={ this.state.activeProgram }\n                         students={ this.state.studentList }/>\n        );\n    }\n\n    render() {\n        return (\n            <div id=\"programs-page\"\n                 className=\"d-flex flex-row p-0 h-100\">\n                <YearList yearList={ this.state.yearList }\n                          setActiveYear={ this.setActiveYear }\n                          activeYear={ this.state.activeYear }/>\n\n                { this.programList() }\n                { this.studentList() }\n            </div>\n        );\n    }\n}\n\nexport default InboundPrograms;"]}