{"version":3,"sources":["../../../../js/tabs/Institutions/modals.js"],"names":["InstitutionFormModal","props","state","form","name","country","address","website","contact_person_email","contact_person_name","contact_person_number","agreement","getFormErrors","bind","getChangeHandler","submitAddInstitutionForm","submitEditInstitutionForm","edit","institution","contactPersonNumber","contactPersonEmail","contactPersonName","characterLimit","value","customValidators","isValid","test","fieldValue","errorMessage","fieldName","dismissToast","title","message","post","url","serverURL","data","beforeSend","success","refresh","error","console","log","response","toggle","ajax","method","id","event","target","setState","formErrors","formHasErrors","fieldErrors","countries","map","index","isOpen","addValidation","length","DeleteInstitutionModal","confirmDelete","progressBar","AddMemorandumModal","memorandumType","type","setMemorandumType"],"mappings":"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","file":"modals.js","sourcesContent":["import React, { Component } from \"react\";\nimport authorizeXHR from \"../../authorization\";\nimport makeInfoToast from \"../../dismissable_toast_maker\";\nimport validateForm from \"../../form_validator\";\nimport settings from \"../../settings\";\nimport iziToast from \"izitoast\";\nimport $ from \"jquery\";\n\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    InputGroup,\n    InputGroupAddon,\n    ButtonGroup,\n    FormFeedback,\n} from \"reactstrap\";\n\n\nclass InstitutionFormModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            form : {\n                name : \"\",\n                country : \"Afghanistan\",\n                address : \"\",\n                website : \"\",\n                contact_person_email : \"\",\n                contact_person_name : \"\",\n                contact_person_number : \"\",\n                agreement : \"B\",\n            },\n        };\n\n        this.getFormErrors = this.getFormErrors.bind(this);\n        this.getChangeHandler = this.getChangeHandler.bind(this);\n\n        this.submitAddInstitutionForm = this.submitAddInstitutionForm.bind(this);\n        this.submitEditInstitutionForm = this.submitEditInstitutionForm.bind(this);\n\n        if (this.props.edit) {\n            this.state.form = props.institution;\n            this.state.form.contact_person_number = props.institution.contactPersonNumber;\n            this.state.form.contact_person_email = props.institution.contactPersonEmail;\n            this.state.form.contact_person_name = props.institution.contactPersonName;\n        }\n    }\n\n    getFormErrors() {\n        return validateForm([\n            {\n                name : \"Name\",\n                characterLimit : 64,\n                value : this.state.form.name,\n            },\n            {\n                name : \"Address\",\n                characterLimit : 256,\n                value : this.state.form.address,\n            },\n            {\n                name : \"Website\",\n                characterLimit : 256,\n                value : this.state.form.website,\n            },\n            {\n                name : \"Contact person name\",\n                characterLimit : 256,\n                value : this.state.form.contact_person_name,\n            },\n            {\n                name : \"Contact person number\",\n                characterLimit : 64,\n                value : this.state.form.contact_person_number,\n            },\n            {\n                name : \"Contact person email\",\n                characterLimit : 256,\n                value : this.state.form.contact_person_email,\n                customValidators : [{\n                    // isValid checks if the form value is a valid email through this messy regex.\n                    isValid : fieldValue => /^([\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$/i.test(fieldValue),\n                    errorMessage : fieldName => `${fieldName} must be a valid email.`,\n                }],\n            },\n        ]);\n    }\n\n    submitAddInstitutionForm() {\n        const dismissToast = makeInfoToast({\n            title : \"Adding\",\n            message : \"Adding new institution...\",\n        });\n        $.post({\n            url : `${settings.serverURL}/institutions/`,\n            data : this.state.form,\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Successfully added institution\",\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to add institution\",\n                });\n            },\n        });\n\n        this.props.toggle();\n    }\n\n    submitEditInstitutionForm() {\n        const dismissToast = makeInfoToast({\n            title : \"Editing\",\n            message : \"Editing institution...\",\n        });\n\n        $.ajax({\n            method : \"PUT\",\n            url : `${settings.serverURL}/institutions/${this.state.form.id}/`,\n            data : this.state.form,\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Successfully modified institution\",\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to edit institution\",\n                });\n            },\n        });\n\n        this.props.toggle();\n    }\n\n    getChangeHandler(fieldName) {\n        const form = this.state.form;\n\n        return event => {\n            const value = event.target.value;\n\n            form[fieldName] = value;\n            this.setState({\n                form : form,\n            });\n        };\n    }\n\n    render() {\n        const formErrors = this.getFormErrors();\n        const formHasErrors = formErrors.formHasErrors;\n        const fieldErrors = formErrors.fieldErrors;\n\n        const countries = settings.countries.map((name, index) =>\n            <option key={index}>{name}</option>,\n        );\n\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} backdrop={true}\n                   onOpened={InstitutionFormModal.addValidation}>\n                <ModalHeader toggle={this.props.toggle}>\n                    {this.props.edit ? `Edit ${this.state.form.name}` : \"Add an Institution\"}\n                </ModalHeader>\n                <ModalBody className=\"form\">\n                    <Form>\n\n                        <h5 className=\"mb-3\">Institution Details</h5>\n                        <FormGroup>\n                            <Label>Name</Label>\n                            <Input placeholder=\"Institution Name\" className=\"text-input\"\n                                   onChange={this.getChangeHandler(\"name\")}\n                                   valid={fieldErrors[\"Name\"].length === 0}\n                                   defaultValue={this.state.form.name}/>\n                            <FormFeedback>{fieldErrors[\"Name\"][0]}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Country</Label>\n                            <Input type=\"select\" onChange={this.getChangeHandler(\"country\")}\n                                   defaultValue={this.state.form.country}>\n                                {countries}\n                            </Input>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Address</Label>\n                            <Input type=\"textarea\" placeholder=\"Address\"\n                                   className=\"text-input\" onChange={this.getChangeHandler(\"address\")}\n                                   valid={fieldErrors[\"Address\"].length === 0}\n                                   defaultValue={this.state.form.address}/>\n                            <FormFeedback>{fieldErrors[\"Address\"][0]}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Website</Label>\n                            <InputGroup>\n                                <InputGroupAddon>http://</InputGroupAddon>\n                                <Input placeholder=\"Website\" className=\"text-input\"\n                                       onChange={this.getChangeHandler(\"website\")}\n                                       valid={fieldErrors[\"Website\"].length === 0}\n                                       defaultValue={this.state.form.website}/>\n                            </InputGroup>\n                            <Input type=\"hidden\" value={this.state.form.website}\n                                   valid={fieldErrors[\"Website\"].length === 0}/>\n                            <FormFeedback><p>{fieldErrors[\"Website\"][0]}</p></FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Agreement Type</Label>\n                            <Input type=\"select\" onChange={this.getChangeHandler(\"agreement\")}\n                                   defaultValue={this.state.form.agreement}>\n                                <option value=\"B\">Bilateral</option>\n                                <option value=\"M\">Multilateral</option>\n                            </Input>\n                        </FormGroup>\n\n                        <br/>\n\n                        <h5 className=\"mb-3\">Contact</h5>\n\n                        <FormGroup>\n                            <Label>Contact Person</Label>\n                            <Input placeholder=\"Name\" className=\"text-input\"\n                                   onChange={this.getChangeHandler(\"contact_person_name\")}\n                                   valid={fieldErrors[\"Contact person name\"].length === 0}\n                                   defaultValue={this.state.form.contact_person_name}/>\n                            <FormFeedback>{fieldErrors[\"Contact person name\"][0]}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Contact Email</Label>\n                            <Input type=\"email\" placeholder=\"Email\" className=\"text-input\"\n                                   onChange={this.getChangeHandler(\"contact_person_email\")}\n                                   valid={fieldErrors[\"Contact person email\"].length === 0}\n                                   defaultValue={this.state.form.contact_person_email}/>\n                            <FormFeedback>{fieldErrors[\"Contact person email\"][0]}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Contact Number</Label>\n                            <Input placeholder=\"Number\" className=\"text-input\"\n                                   onChange={this.getChangeHandler(\"contact_person_number\")}\n                                   valid={fieldErrors[\"Contact person number\"].length === 0}\n                                   defaultValue={this.state.form.contact_person_number}/>\n                            <FormFeedback>{fieldErrors[\"Contact person number\"][0]}</FormFeedback>\n                        </FormGroup>\n\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button outline color=\"success\"\n                            onClick={this.props.edit ? this.submitEditInstitutionForm : this.submitAddInstitutionForm}\n                            disabled={formHasErrors}>\n                        {this.props.edit ? \"Edit\" : \"Add\"}\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nclass DeleteInstitutionModal extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmDelete = this.confirmDelete.bind(this);\n    }\n\n    confirmDelete() {\n        const dismissToast = makeInfoToast({\n            title : \"Deleting\",\n            message : \"Deleting institution...\",\n        });\n\n        $.ajax({\n            url : `${settings.serverURL}/institutions/${this.props.institution.id}/`,\n            method : \"DELETE\",\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Institution deleted\",\n                    progressBar : false,\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to delete institution\",\n                    progressBar : false,\n                });\n            },\n        });\n        this.props.toggle();\n    }\n\n    render() {\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} backdrop={true} id=\"delete-institution-modal\">\n                <ModalHeader className=\"text-danger\">Are you sure you want to\n                    delete {this.props.institution.name}?</ModalHeader>\n                <ModalBody>This cannot be undone.</ModalBody>\n                <ModalFooter>\n                    <Button color=\"danger\" onClick={this.confirmDelete}>Confirm Delete</Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nclass AddMemorandumModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            memorandumType : \"Agreement\",\n        };\n    }\n\n    static addValidation() {\n        //TODO\n    }\n\n    submitForm() {\n        //TODO\n    }\n\n    setMemorandumType(type) {\n        this.setState({\n            memorandumType : type,\n        });\n    }\n\n    render() {\n        return (\n            <Modal id=\"add-memorandum-modal\" isOpen={this.props.isOpen} toggle={this.props.toggle} backdrop={true}\n                   onOpened={AddMemorandumModal.addValidation}>\n                <ModalHeader toggle={this.props.toggle}>Add a Memorandum</ModalHeader>\n                <ModalBody className=\"form\">\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"add-institution-name\">Type of Memorandum</Label>\n                            <ButtonGroup>\n                                <Button outline\n                                        color=\"success\"\n                                        active={this.state.memorandumType === \"Agreement\"}\n                                        onClick={() => this.setMemorandumType(\"Agreement\")}>\n                                    Agreement\n                                </Button>\n\n                                <Button outline\n                                        color=\"success\"\n                                        active={this.state.memorandumType === \"Understanding\"}\n                                        onClick={() => this.setMemorandumType(\"Understanding\")}>\n                                    Understanding\n                                </Button>\n                            </ButtonGroup>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"add-institution-name\">Name</Label>\n                            <Input id=\"add-institution-name\" placeholder=\"Institution Name\" className=\"text-input\"/>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nexport {\n    InstitutionFormModal,\n    DeleteInstitutionModal,\n};"]}