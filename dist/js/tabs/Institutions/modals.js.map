{"version":3,"sources":["../../../../js/tabs/Institutions/modals.js"],"names":["InstitutionFormModal","props","state","form","name","country","address","website","contact_person_email","contact_person_name","contact_person_number","agreement","getFormErrors","bind","getChangeHandler","submitAddInstitutionForm","submitEditInstitutionForm","edit","Object","assign","institution","characterLimit","value","optional","customValidators","isValid","fieldValue","length","test","errorMessage","fieldName","dismissToast","title","message","post","url","serverURL","data","beforeSend","success","refresh","error","console","log","response","toggle","ajax","method","id","event","target","setState","formErrors","formHasErrors","fieldErrors","countries","map","index","fieldError","isOpen","DeleteInstitutionModal","confirmDelete","progressBar","MemorandumFormModal","category","memorandum_file","date_effective","date_expiration","college_initiator","setupUploadCare","submitAddMemorandumForm","submitEditMemorandumForm","memorandum","widget","uploadcare","SingleWidget","setMemorandumFile","link","onChange","file","done","info","cdnUrl","uploadcarePublicKey","DeleteMemorandumModal"],"mappings":"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","file":"modals.js","sourcesContent":["import React, { Component } from \"react\";\nimport authorizeXHR from \"../../authorization\";\nimport makeInfoToast from \"../../dismissable_toast_maker\";\nimport validateForm from \"../../form_validator\";\nimport settings from \"../../settings\";\nimport iziToast from \"izitoast\";\nimport moment from \"moment\";\nimport $ from \"jquery\";\n\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    InputGroup,\n    InputGroupAddon,\n    FormFeedback,\n} from \"reactstrap\";\n\n\nclass InstitutionFormModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            form : {\n                name : \"\",\n                country : \"Afghanistan\",\n                address : \"\",\n                website : \"\",\n                contact_person_email : \"\",\n                contact_person_name : \"\",\n                contact_person_number : \"\",\n                agreement : \"B\",\n            },\n        };\n\n        this.getFormErrors = this.getFormErrors.bind(this);\n        this.getChangeHandler = this.getChangeHandler.bind(this);\n\n        this.submitAddInstitutionForm = this.submitAddInstitutionForm.bind(this);\n        this.submitEditInstitutionForm = this.submitEditInstitutionForm.bind(this);\n\n        if (this.props.edit) {\n            // Copy the object, do not equate, otherwise the object changes along with the form.\n            Object.assign(this.state.form, props.institution);\n        }\n    }\n\n    getFormErrors() {\n        return validateForm([\n            {\n                name : \"Name\",\n                characterLimit : 64,\n                value : this.state.form.name,\n            },\n            {\n                name : \"Address\",\n                characterLimit : 256,\n                value : this.state.form.address,\n            },\n            {\n                name : \"Website\",\n                characterLimit : 256,\n                value : this.state.form.website,\n            },\n            {\n                name : \"Contact person name\",\n                characterLimit : 256,\n                value : this.state.form.contact_person_name,\n                optional : true,\n            },\n            {\n                name : \"Contact person number\",\n                characterLimit : 64,\n                value : this.state.form.contact_person_number,\n                optional : true,\n            },\n            {\n                name : \"Contact person email\",\n                characterLimit : 256,\n                value : this.state.form.contact_person_email,\n                optional : true,\n                customValidators : [{\n                    // isValid checks if the form value is a valid email through this messy regex.\n                    // It also lets blank values pass because it's an optional field\n                    isValid : fieldValue => fieldValue.length === 0 || /^([\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$/i.test(fieldValue),\n                    errorMessage : fieldName => `${fieldName} must be a valid email.`,\n                }],\n            },\n        ]);\n    }\n\n    submitAddInstitutionForm() {\n        const dismissToast = makeInfoToast({\n            title : \"Adding\",\n            message : \"Adding new institution...\",\n        });\n        $.post({\n            url : `${settings.serverURL}/institutions/`,\n            data : this.state.form,\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Successfully added institution\",\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to add institution\",\n                });\n            },\n        });\n\n        this.props.toggle();\n    }\n\n    submitEditInstitutionForm() {\n        const dismissToast = makeInfoToast({\n            title : \"Editing\",\n            message : \"Editing institution...\",\n        });\n\n        $.ajax({\n            method : \"PUT\",\n            url : `${settings.serverURL}/institutions/${this.state.form.id}/`,\n            data : this.state.form,\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Successfully modified institution\",\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to edit institution\",\n                });\n            },\n        });\n\n        this.props.toggle();\n    }\n\n    getChangeHandler(fieldName) {\n        const form = this.state.form;\n\n        return event => {\n            const value = event.target.value;\n\n            form[fieldName] = value;\n            this.setState({\n                form : form,\n            });\n        };\n    }\n\n    render() {\n        const formErrors = this.getFormErrors();\n        const formHasErrors = formErrors.formHasErrors;\n        const fieldErrors = formErrors.fieldErrors;\n\n        const countries = settings.countries.map((name, index) =>\n            <option key={index}>{name}</option>,\n        );\n\n        function isValid(fieldName) {\n            return fieldErrors[fieldName].length === 0;\n        }\n\n        function fieldError(fieldName) {\n            return fieldErrors[fieldName][0];\n        }\n\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} backdrop={true}>\n                <ModalHeader toggle={this.props.toggle}>\n                    {this.props.edit ? `Edit ${this.state.form.name}` : \"Add an Institution\"}\n                </ModalHeader>\n                <ModalBody className=\"form\">\n                    <Form>\n\n                        <h5 className=\"mb-3\">Institution Details</h5>\n                        <FormGroup>\n                            <Label>Name</Label>\n                            <Input placeholder=\"Institution Name\"\n                                   onChange={this.getChangeHandler(\"name\")}\n                                   valid={isValid(\"Name\")}\n                                   defaultValue={this.state.form.name}/>\n                            <FormFeedback>{fieldError(\"Name\")}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Country</Label>\n                            <Input type=\"select\"\n                                   onChange={this.getChangeHandler(\"country\")}\n                                   defaultValue={this.state.form.country}>\n                                {countries}\n                            </Input>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Address</Label>\n                            <Input type=\"textarea\" placeholder=\"Address\"\n                                   onChange={this.getChangeHandler(\"address\")}\n                                   valid={isValid(\"Address\")}\n                                   defaultValue={this.state.form.address}/>\n                            <FormFeedback>{fieldError(\"Address\")}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Website</Label>\n                            <InputGroup>\n                                <InputGroupAddon>http://</InputGroupAddon>\n                                <Input placeholder=\"Website\"\n                                       onChange={this.getChangeHandler(\"website\")}\n                                       valid={isValid(\"Website\")}\n                                       defaultValue={this.state.form.website}/>\n                            </InputGroup>\n                            <Input type=\"hidden\" value={this.state.form.website}\n                                   valid={isValid(\"Website\")}/>\n                            <FormFeedback><p>{fieldError(\"Website\")}</p></FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Agreement Type</Label>\n                            <Input type=\"select\" onChange={this.getChangeHandler(\"agreement\")}\n                                   defaultValue={this.state.form.agreement}>\n                                <option value=\"B\">Bilateral</option>\n                                <option value=\"M\">Multilateral</option>\n                            </Input>\n                        </FormGroup>\n\n                        <br/>\n\n                        <h5 className=\"mb-3\">Contact</h5>\n\n                        <FormGroup>\n                            <Label>Contact Person</Label>\n                            <Input placeholder=\"Name\"\n                                   onChange={this.getChangeHandler(\"contact_person_name\")}\n                                   valid={isValid(\"Contact person name\")}\n                                   defaultValue={this.state.form.contact_person_name}/>\n                            <FormFeedback>{fieldError(\"Contact person name\")}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Contact Email</Label>\n                            <Input type=\"email\" placeholder=\"Email\"\n                                   onChange={this.getChangeHandler(\"contact_person_email\")}\n                                   valid={isValid(\"Contact person email\")}\n                                   defaultValue={this.state.form.contact_person_email}/>\n                            <FormFeedback>{fieldError(\"Contact person email\")}</FormFeedback>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Contact Number</Label>\n                            <Input placeholder=\"Number\"\n                                   onChange={this.getChangeHandler(\"contact_person_number\")}\n                                   valid={isValid(\"Contact person number\")}\n                                   defaultValue={this.state.form.contact_person_number}/>\n                            <FormFeedback>{fieldError(\"Contact person number\")}</FormFeedback>\n                        </FormGroup>\n\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button outline color=\"success\"\n                            onClick={this.props.edit ? this.submitEditInstitutionForm : this.submitAddInstitutionForm}\n                            disabled={formHasErrors}>\n                        {this.props.edit ? \"Edit\" : \"Add\"}\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nclass DeleteInstitutionModal extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmDelete = this.confirmDelete.bind(this);\n    }\n\n    confirmDelete() {\n        const dismissToast = makeInfoToast({\n            title : \"Deleting\",\n            message : \"Deleting institution...\",\n        });\n\n        $.ajax({\n            url : `${settings.serverURL}/institutions/${this.props.institution.id}/`,\n            method : \"DELETE\",\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Institution deleted\",\n                    progressBar : false,\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to delete institution\",\n                    progressBar : false,\n                });\n            },\n        });\n        this.props.toggle();\n    }\n\n    render() {\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} backdrop={true} id=\"delete-institution-modal\">\n                <ModalHeader className=\"text-danger\">Are you sure you want to\n                    delete {this.props.institution.name}?</ModalHeader>\n                <ModalBody>This cannot be undone.</ModalBody>\n                <ModalFooter>\n                    <Button color=\"danger\" onClick={this.confirmDelete}>Confirm Delete</Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nclass MemorandumFormModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            form : {\n                category : \"MOA\",\n                memorandum_file : \"\",\n                date_effective : \"\",\n                date_expiration : \"\",\n                college_initiator : \"\",\n            },\n        };\n\n        this.getFormErrors = this.getFormErrors.bind(this);\n        this.setupUploadCare = this.setupUploadCare.bind(this);\n        this.getChangeHandler = this.getChangeHandler.bind(this);\n        this.submitAddMemorandumForm = this.submitAddMemorandumForm.bind(this);\n        this.submitEditMemorandumForm = this.submitEditMemorandumForm.bind(this);\n\n        if (this.props.edit) {\n            console.log(this.props.memorandum);\n            Object.assign(this.state.form, props.memorandum);\n        }\n    }\n\n    getFormErrors() {\n        return validateForm([\n            {\n                name : \"Date effective\",\n                characterLimit : null,\n                value : this.state.form.date_effective,\n            },\n            {\n                name : \"File\",\n                characterLimit : null,\n                value : this.state.form.memorandum_file,\n            },\n        ]);\n    }\n\n    getChangeHandler(fieldName) {\n        const form = this.state.form;\n\n        return event => {\n            const value = event.target.value;\n\n            form[fieldName] = value;\n            this.setState({\n                form : form,\n            });\n\n        };\n\n    }\n\n    setupUploadCare() {\n        const widget = uploadcare.SingleWidget(\"[role=uploadcare-uploader]\");\n        const form = this.state.form;\n        const setMemorandumFile = link => {\n            form.memorandum_file = link;\n            this.setState({\n                form : form,\n            });\n\n            console.log(this.state.form);\n        };\n\n        widget.onChange(file => {\n            if (file) {\n                file.done(info => {\n                    setMemorandumFile(info.cdnUrl);\n                });\n            }\n        });\n    }\n\n    submitAddMemorandumForm() {\n        const dismissToast = makeInfoToast({\n            title : \"Adding\",\n            message : \"Adding new memorandum...\",\n        });\n\n        $.post({\n            url : `${settings.serverURL}/institutions/${this.props.institution.id}/memorandums/`,\n            data : this.state.form,\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Successfully added memorandum\",\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to add memorandum\",\n                });\n            },\n        });\n\n        this.props.toggle();\n    }\n\n    submitEditMemorandumForm() {\n        const dismissToast = makeInfoToast({\n            title : \"Editing\",\n            message : \"Editing memorandum...\",\n        });\n\n        $.ajax({\n            method : \"PUT\",\n            url : `${settings.serverURL}/institutions/${this.props.institution.id}/memorandums/${this.state.memorandum.id}/`,\n            data : this.state.form,\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Successfully modified memorandum\",\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to edit memorandum\",\n                });\n            },\n        });\n\n        this.props.toggle();\n    }\n\n    render() {\n        const formErrors = this.getFormErrors();\n        const formHasErrors = formErrors.formHasErrors;\n        const fieldErrors = formErrors.fieldErrors;\n\n        function isValid(fieldName) {\n            return fieldErrors[fieldName].length === 0;\n        }\n\n        function fieldError(fieldName) {\n            return fieldErrors[fieldName][0];\n        }\n\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} backdrop={true}\n                   onOpened={this.setupUploadCare}>\n                <ModalHeader toggle={this.props.toggle}>\n                    {this.props.edit ? \"Edit memorandum\" : `Add a memorandum to ${this.props.institution.name}`}\n                </ModalHeader>\n                <ModalBody className=\"form\">\n                    <Form>\n                        <FormGroup>\n                            <Label>Category</Label>\n                            <Input type=\"select\" defaultValue={this.state.form.category}\n                                   onChange={this.getChangeHandler(\"category\")}>\n                                <option value=\"MOA\">Memorandum of Agreement</option>\n                                <option value=\"MOU\">Memorandum of Understanding</option>\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>File Link</Label>\n                            <Input type=\"hidden\" role=\"uploadcare-uploader\" name=\"content\"\n                                   data-public-key={settings.uploadcarePublicKey}\n                                   valid={isValid(\"File\")}/>\n                            <FormFeedback>{fieldError(\"File\")}</FormFeedback>\n                            {this.props.edit &&\n                            <small className=\"text-secondary\">To change memorandum file, upload a new file. Otherwise,\n                                leave this blank.</small>\n                            }\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Date Effective</Label>\n                            <Input type=\"date\" defaultValue={this.state.form.date_effective}\n                                   onChange={this.getChangeHandler(\"date_effective\")}\n                                   valid={isValid(\"Date effective\")}/>\n                            <FormFeedback>{fieldError(\"Date effective\")}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Expiration Date</Label>\n                            <Input type=\"date\" defaultValue={this.state.form.date_expiration}\n                                   onChange={this.getChangeHandler(\"date_expiration\")}/>\n                            <small className=\"text-secondary\">If the memorandum has no expiration date, leave this\n                                blank.\n                            </small>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>College Initiator</Label>\n                            <Input type=\"select\" defaultValue={this.state.form.college_initiator}\n                                   onChange={this.getChangeHandler(\"college_initiator\")}>\n                                <option value=\"CCS\">College of Computer Studies</option>\n                                <option value=\"RVRCOB\">Ramon V. del Rosario College of Business</option>\n                                <option value=\"CLA\">College of Liberal Arts</option>\n                                <option value=\"SOE\">School of Economics</option>\n                                <option value=\"GCOE\">Gokongwei College of Engineering</option>\n                                <option value=\"COL\">College of Law</option>\n                                <option value=\"BAGCED\">Brother Andrew Gonzales College of Education</option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button outline color=\"success\"\n                            disabled={formHasErrors}\n                            onClick={this.props.edit ? this.submitEditMemorandumForm : this.submitAddMemorandumForm}>\n                        {this.props.edit ? \"Edit\" : \"Add\"}\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n\n}\n\nclass DeleteMemorandumModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.confirmDelete = this.confirmDelete.bind(this);\n    }\n\n    confirmDelete() {\n        const dismissToast = makeInfoToast({\n            title : \"Deleting\",\n            message : \"Deleting memorandum...\",\n        });\n\n        $.ajax({\n            url : `${settings.serverURL}/institutions/${this.props.institution.id}/memorandums/${this.props.memorandum.id}`,\n            method : \"DELETE\",\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.refresh();\n                iziToast.success({\n                    title : \"Success\",\n                    message : \"Memorandum deleted\",\n                    progressBar : false,\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to delete memorandum\",\n                    progressBar : false,\n                });\n            },\n        });\n        this.props.toggle();\n    }\n\n    render() {\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} backdrop={true} id=\"delete-memorandum-modal\">\n                <ModalHeader toggle={this.props.toggle}>Delete Memorandum</ModalHeader>\n                <ModalBody>This cannot be undone.</ModalBody>\n                <ModalFooter>\n                    <Button color=\"danger\" id=\"delete-memorandum-modal-submit\"\n                            onClick={this.confirmDelete}>Delete</Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nexport {\n    InstitutionFormModal,\n    DeleteInstitutionModal,\n    MemorandumFormModal,\n    DeleteMemorandumModal,\n};"]}