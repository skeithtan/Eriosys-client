{"version":3,"sources":["../../../../js/tabs/Institutions/institution_detail.js"],"names":["fetchInstitution","id","onResponse","query","InstitutionDetail","props","state","institution","institutionID","deleteInstitutionIsShowing","editInstitutionIsShowing","toggleDeleteInstitution","bind","toggleEditInstitution","onEditInstitution","setState","response","data","refreshInstitutions","nextProps","unselectedState","onDeleteActiveInstitution","InstitutionDetailHead","name","country","InstitutionDetailBody"],"mappings":"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","file":"institution_detail.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport LoadingSpinner from \"../../loading\";\nimport {\n    InstitutionDetailOverview,\n    InstitutionContact,\n} from \"./institution_detail_overview\";\n\n\nimport {\n    DeleteInstitutionModal,\n    EditInstitutionModal,\n} from \"./modals\";\n\n\nimport Memorandums from \"./memorandums\";\nimport graphql from \"../../graphql\";\n\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query : `\n        {\n            institution(id:${id}) {\n                id\n                name\n                email\n                address\n                website\n                contactPersonName\n                contactPersonNumber\n                country {\n                    name\n                }\n                agreement\n            }\n        }\n       `,\n        onResponse : onResponse,\n    });\n}\n\nclass InstitutionDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            institution : null,\n            institutionID : null,\n            deleteInstitutionIsShowing : false,\n            editInstitutionIsShowing : false,\n        };\n\n        this.toggleDeleteInstitution = this.toggleDeleteInstitution.bind(this);\n        this.toggleEditInstitution = this.toggleEditInstitution.bind(this);\n        this.onEditInstitution = this.onEditInstitution.bind(this);\n    }\n\n    toggleDeleteInstitution() {\n        this.setState({\n            deleteInstitutionIsShowing : !this.state.deleteInstitutionIsShowing,\n        });\n    }\n\n    toggleEditInstitution() {\n        this.setState({\n            editInstitutionIsShowing : !this.state.editInstitutionIsShowing,\n        });\n    }\n\n    static unselectedState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>Select an institution to see its details</h3>\n            </div>\n        );\n    }\n\n    onEditInstitution() {\n        //Refresh and fetch new data from server\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.state.institutionID, response => {\n            const institution = response.data.institution;\n            this.setState({\n                institution : institution,\n            });\n\n            this.props.refreshInstitutions();\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const institution = nextProps.institution;\n\n        if (institution === null) {\n            this.setState({\n                institution : null,\n                institutionID : null,\n            });\n\n            return;\n        }\n\n        // Inform state about an active institution, but remove old institution\n        this.setState({\n            institutionID : institution.id,\n            institution : null,\n        });\n\n        //Fetch active institution details\n        fetchInstitution(institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n\n    render() {\n        //User has not selected yet, no activeInstitution ID\n        if (this.state.institutionID === null) {\n            return InstitutionDetail.unselectedState();\n        }\n\n        //User has already selected, but we haven't fetched it from the database yet\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div id=\"institution-detail\" className=\"container-fluid d-flex flex-column p-0\">\n                <InstitutionDetailHead institution={this.state.institution}\n                                       toggleDeleteInstitution={this.toggleDeleteInstitution}\n                                       toggleEditInstitution={this.toggleEditInstitution}/>\n                <InstitutionDetailBody institution={this.state.institution}/>\n\n                {this.state.institution !== null && //If activeInstitution is not null\n                <DeleteInstitutionModal isOpen={this.state.deleteInstitutionIsShowing}\n                                        institution={this.state.institution}\n                                        toggle={this.toggleDeleteInstitution}\n                                        refresh={this.props.onDeleteActiveInstitution}/>}\n\n                {this.state.institution !== null &&\n                <EditInstitutionModal isOpen={this.state.editInstitutionIsShowing}\n                                      institution={this.state.institution}\n                                      refresh={this.onEditInstitution}\n                                      toggle={this.toggleEditInstitution}/>}\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetailHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-center\">\n                <div className=\"mr-auto\">\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">{this.props.institution.name}</h4>\n                    <h4 className=\"text-muted d-inline-block font-weight-normal mb-0\">{this.props.institution.country.name}</h4>\n                </div>\n\n                <div id=\"institution-actions\">\n                    <Button outline size=\"sm\" color=\"success\" className=\"mr-2\"\n                            onClick={this.props.toggleEditInstitution}>Edit Institution</Button>\n                    <Button outline size=\"sm\" color=\"danger\"\n                            onClick={this.props.toggleDeleteInstitution}>Delete</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetailBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <InstitutionDetailOverview institution={this.props.institution}/>\n                <InstitutionContact institution={this.props.institution}/>\n                <Memorandums/>\n            </div>\n        );\n    }\n}\n\n\nexport default InstitutionDetail;"]}