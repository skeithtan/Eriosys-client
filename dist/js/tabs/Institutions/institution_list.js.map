{"version":3,"sources":["../../../../js/tabs/Institutions/institution_list.js"],"names":["InstitutionList","props","state","searchKeyword","collapsed","toggleCollapse","bind","setSearchKeyword","getFilteredInstitutions","searchString","setState","institutions","filtered","toLowerCase","forEach","country","institutionName","institution","name","includes","push","id","isSearching","className","toggleAddInstitution","activeInstitution","setActiveInstitution","InstitutionListHead","onSearchInputChange","event","searchInput","target","value","localStorage","userType","InstitutionListTable","emptyState","countries","length","noResultsState","sections","map","index","InstitutionSection","rows","isActive","activeInstitutionId","toString","title"],"mappings":"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","file":"institution_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../components/loading\";\n\nimport {\n    Input,\n    Button,\n} from \"reactstrap\";\n\nimport {\n    CollapseButton,\n    CollapseContent,\n    ExpandContent,\n} from \"../../components/collapse_content\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowContent,\n} from \"../../components/section\";\n\n\nclass InstitutionList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchKeyword : null,\n            collapsed : false,\n        };\n\n        this.toggleCollapse = this.toggleCollapse.bind(this);\n        this.setSearchKeyword = this.setSearchKeyword.bind(this);\n        this.getFilteredInstitutions = this.getFilteredInstitutions.bind(this);\n    }\n\n    setSearchKeyword(searchString) {\n        //If the string is empty, that means the user isn't searching at all\n        const searchKeyword = searchString === \"\" ? null : searchString;\n        this.setState({\n            searchKeyword : searchKeyword,\n        });\n    }\n\n    getFilteredInstitutions() {\n        if (this.props.institutions === null || this.state.searchKeyword === null) {\n            return null;\n        }\n\n        let filtered = [];\n        const searchKeyword = this.state.searchKeyword.toLowerCase();\n\n        this.props.institutions.forEach(country => {\n            // Array of institutions from this country that conforms to search\n            country.institutions.forEach(institution => {\n                const institutionName = institution.name.toLowerCase();\n                if (institutionName.includes(searchKeyword)) {\n                    filtered.push(institution.id);\n                }\n            });\n        });\n\n        return filtered;\n    }\n\n    toggleCollapse() {\n        this.setState({\n            collapsed : !this.state.collapsed,\n        });\n    };\n\n    render() {\n        const isSearching = this.state.searchKeyword !== null;\n        //Show all institutions or, if it has a filter, show the filtered?\n        // const showingInstitutions = isSearching ? this.getFilteredInstitutions() : this.props.institutions;\n\n        let className = \"sidebar h-100 collapsible \";\n        if (this.state.collapsed) {\n            className += \"collapsed\";\n        }\n\n        return (\n            <div className={ className }\n                 id=\"institution-list\">\n                <ExpandContent className=\"d-flex flex-column h-100\">\n                    <InstitutionListHead setSearchKeyword={ this.setSearchKeyword }\n                                         toggleAddInstitution={ this.props.toggleAddInstitution }\n                                         toggleCollapse={ this.toggleCollapse }/>\n                    <InstitutionListTable countries={ this.props.institutions }\n                                          filtered={ this.getFilteredInstitutions() }\n                                          isSearching={ isSearching }\n                                          toggleAddInstitution={ this.props.toggleAddInstitution }\n                                          activeInstitution={ this.props.activeInstitution }\n                                          setActiveInstitution={ this.props.setActiveInstitution }/>\n                </ExpandContent>\n\n                <CollapseContent title=\"Institutions\"\n                                 toggle={ this.toggleCollapse }/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionListHead extends Component {\n    constructor(props) {\n        super(props);\n        this.onSearchInputChange = this.onSearchInputChange.bind(this);\n    }\n\n    onSearchInputChange(event) {\n        const searchInput = event.target.value;\n        this.props.setSearchKeyword(searchInput);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head\">\n                <div className=\"page-head-controls\">\n                    <CollapseButton toggleCollapse={ this.props.toggleCollapse }/>\n\n                    { localStorage.userType !== \"program_assistant\" && <Button outline\n                                                                               color=\"success\"\n                                                                               size=\"sm\"\n                                                                               className=\"ml-auto\"\n                                                                               onClick={ this.props.toggleAddInstitution }>Add</Button> }\n                </div>\n                <h4 className=\"page-head-title\">Institutions</h4>\n                <Input type=\"search\"\n                       placeholder=\"Search\"\n                       className=\"search-input\"\n                       onChange={ this.onSearchInputChange }/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionListTable extends Component {\n    constructor(props) {\n        super(props);\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h4>There's nothing here.</h4>\n                <p>When added, Institutions will show up here.</p>\n                <Button outline\n                        color=\"success\"\n                        onClick={ this.props.toggleAddInstitution }>Add an Institution</Button>\n            </div>\n        );\n    }\n\n    static noResultsState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>No results found</h3>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.countries === null) {\n            return <LoadingSpinner/>;\n        }\n\n        const filtered = this.props.filtered;\n\n        if (this.props.isSearching && filtered.length === 0) {\n            return InstitutionListTable.noResultsState();\n        }\n\n        //If we're searching, that means there are simply no results if length == 0\n        //If we're not searching, we really just don't have any data\n        if (this.props.countries.length === 0) {\n            return this.emptyState();\n        }\n\n\n        const sections = this.props.countries.map((country, index) => {\n\n            let collapsed = false;\n\n            if (this.props.isSearching) {\n                collapsed = true;\n\n                country.institutions.forEach(institution => {\n                    if (filtered.includes(institution.id)) {\n                        collapsed = false;\n                    }\n                });\n            }\n\n            return <InstitutionSection title={ country.name }\n                                       institutions={ country.institutions }\n                                       key={ index }\n                                       collapsed={ collapsed }\n                                       filtered={ this.props.filtered }\n                                       activeInstitution={ this.props.activeInstitution }\n                                       setActiveInstitution={ this.props.setActiveInstitution }/>;\n        });\n\n        return (\n            <div className=\"page-body\">\n                { sections }\n            </div>\n        );\n    }\n}\n\nclass InstitutionSection extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const rows = this.props.institutions.map(institution => {\n            let isActive = false;\n\n            if (this.props.activeInstitution !== null) {\n                const activeInstitutionId = this.props.activeInstitution.id.toString();\n                isActive = activeInstitutionId === institution.id;\n            }\n\n            const setActiveInstitution = () => this.props.setActiveInstitution(institution);\n\n\n            let collapsed = false;\n            if (this.props.filtered !== null) {\n                collapsed = !this.props.filtered.includes(institution.id);\n            }\n\n            return (\n                <SectionRow selectable\n                            onClick={ setActiveInstitution }\n                            active={ isActive }\n                            collapsed={ collapsed }\n                            key={ institution.id }>\n                    <SectionRowContent>{ institution.name }</SectionRowContent>\n                </SectionRow>\n            );\n        });\n\n        return (\n            <Section collapsed={ this.props.collapsed }>\n                <SectionTitle>{ this.props.title }</SectionTitle>\n                <SectionTable>\n                    { rows }\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nexport default InstitutionList;"]}