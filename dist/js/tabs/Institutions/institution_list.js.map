{"version":3,"sources":["../../../../js/tabs/Institutions/institution_list.js"],"names":["InstitutionList","props","state","allInstitutions","institutions","searchKeyword","filteredInstitutions","setSearchKeyword","bind","getFilteredInstitutions","nextProps","setState","searchString","filtered","toLowerCase","forEach","countryFiltered","country","institutionSet","filter","institutionName","institution","name","includes","length","push","hasFilter","showingInstitutions","toggleAddInstitution","activeInstitution","setActiveInstitution","InstitutionListHead","onSearchInputChange","event","searchInput","target","value","InstitutionListTable","emptyState","countries","noResultsState","sections","map","index","InstitutionSection","rows","isActive","id","title","InstitutionRow"],"mappings":"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","file":"institution_list.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../loading\";\nimport {\n    Input,\n    Button,\n    ListGroup,\n    ListGroupItem,\n} from \"reactstrap\";\n\n\nclass InstitutionList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allInstitutions : props.institutions,\n            searchKeyword : null,\n            filteredInstitutions : null,\n        };\n\n        this.setSearchKeyword = this.setSearchKeyword.bind(this);\n        this.getFilteredInstitutions = this.getFilteredInstitutions.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            allInstitutions : nextProps.institutions,\n        });\n    }\n\n    setSearchKeyword(searchString) {\n        const searchKeyword = searchString === \"\" ? null : searchString;\n        this.setState({\n            searchKeyword : searchKeyword,\n        });\n    }\n\n    getFilteredInstitutions() {\n        if (this.state.allInstitutions === null || this.state.searchKeyword === null) {\n            return [];\n        }\n\n        let filtered = [];\n        const searchKeyword = this.state.searchKeyword.toLowerCase();\n\n        this.state.allInstitutions.forEach(country => {\n            // Array of institutions from this country that conforms to search\n            const countryFiltered = country.institutionSet.filter(institution => {\n                const institutionName = institution.name.toLowerCase();\n                return institutionName.includes(searchKeyword);\n            });\n\n            // If country has no matching institutions, don't include in search results\n            if (countryFiltered.length > 0) {\n\n                // Create new country object so as not to affect actual country object\n                filtered.push({\n                    name : country.name,\n                    institutionSet : countryFiltered,\n                });\n            }\n        });\n\n        return filtered;\n    }\n\n    render() {\n        const hasFilter = this.state.searchKeyword !== null;\n        const showingInstitutions = hasFilter ? this.getFilteredInstitutions() : this.state.allInstitutions;\n\n        return (\n            <div className=\"sidebar h-100\" id=\"institution-list\">\n                <InstitutionListHead setSearchKeyword={this.setSearchKeyword}\n                                     toggleAddInstitution={this.props.toggleAddInstitution}/>\n                <InstitutionListTable countries={showingInstitutions}\n                                      hasFilter={hasFilter}\n                                      toggleAddInstitution={this.props.toggleAddInstitution}\n                                      activeInstitution={this.props.activeInstitution}\n                                      setActiveInstitution={this.props.setActiveInstitution}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionListHead extends Component {\n    constructor(props) {\n        super(props);\n        this.onSearchInputChange = this.onSearchInputChange.bind(this);\n    }\n\n    onSearchInputChange(event) {\n        const searchInput = event.target.value;\n        this.props.setSearchKeyword(searchInput);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head\">\n                <div className=\"page-head-controls\">\n                    <Button outline color=\"success\" size=\"sm\" className=\"ml-auto\"\n                            onClick={this.props.toggleAddInstitution}>Add</Button>\n                </div>\n                <h4 className=\"page-head-title\">Institutions</h4>\n                <Input placeholder=\"Search\" className=\"search-input mt-2\" onChange={this.onSearchInputChange}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionListTable extends Component {\n    constructor(props) {\n        super(props);\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h4>There's nothing here.</h4>\n                <p>When added, Institutions will show up here.</p>\n                <Button outline color=\"success\" onClick={this.props.toggleAddInstitution}>Add an Institution</Button>\n            </div>\n        );\n    }\n\n\n    static noResultsState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>No results found</h3>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.countries === null) {\n            return <LoadingSpinner/>;\n        }\n\n        //If we have a filter, that means there are simply no results if length == 0\n        //If we don't have a filter we really just don't have any data\n        if (this.props.countries.length === 0) {\n            return this.props.hasFilter ? InstitutionListTable.noResultsState() : InstitutionListTable.emptyState();\n        }\n\n\n        const sections = this.props.countries.map((country, index) => {\n            return <InstitutionSection title={country.name} institutions={country.institutionSet} key={index}\n                                       activeInstitution={this.props.activeInstitution}\n                                       setActiveInstitution={this.props.setActiveInstitution}/>;\n        });\n\n        return (\n            <div className=\"page-body\">\n                {sections}\n            </div>\n        );\n    }\n}\n\nclass InstitutionSection extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const rows = this.props.institutions.map(institution => {\n            let isActive = false;\n\n            if (this.props.activeInstitution !== null) {\n                isActive = this.props.activeInstitution.id === institution.id;\n            }\n\n            return <InstitutionRow institution={institution}\n                                   setActiveInstitution={() => this.props.setActiveInstitution(institution)}\n                                   isActive={isActive}\n                                   key={institution.id}/>;\n        });\n\n        return (\n            <div className=\"section\">\n                <small className=\"section-title\">{this.props.title}</small>\n                <ListGroup>\n                    {rows}\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nclass InstitutionRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (this.props.isActive) {\n            return <ListGroupItem className=\"bg-dlsu text-white\">{this.props.institution.name}</ListGroupItem>;\n        } else {\n            return <ListGroupItem\n                onClick={this.props.setActiveInstitution}>{this.props.institution.name}</ListGroupItem>;\n        }\n    }\n}\n\nexport default InstitutionList;"]}