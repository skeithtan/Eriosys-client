{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/sidebar_panes.js"],"names":["MemorandumSidebarPane","props","state","deleteMemorandumIsShowing","editMemorandumIsShowing","memorandum","onEditMemorandum","bind","toggleDeleteMemorandum","toggleEditMemorandum","setState","linkages","activeMemorandum","removeActiveMemorandum","refreshMemorandums","MemorandumDetails","formatDate","date","format","dateEffective","date_effective","type","category","expiryDate","date_expiration","college","college_initiator","viewMemorandum","shell","require","openExternal","memorandum_file","MemorandumLinkages","body","rows","map","linkage","index","length","ProgramSidebarPane","deleteProgramIsShowing","editProgramIsShowing","program","toggleDeleteProgram","toggleEditProgram","onEditProgram","studyfield_set","ProgramDetails","name","ProgramStudyFields","studyFields","studyField"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;AAIA;;;;;;;;;;IAUMA,qB;;;AACF,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA,kJACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,uCAA4B,KADnB;AAETC,qCAA0B,KAFjB;AAGTC,wBAAaJ,MAAMI;AAHV,SAAb;;AAMA,cAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,OAAxB;AACA,cAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BD,IAA5B,OAA9B;AACA,cAAKE,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BF,IAA1B,OAA5B;AAXe;AAYlB;;;;iDAEwB;AACrB,iBAAKG,QAAL,CAAc;AACVP,2CAA4B,CAAC,KAAKD,KAAL,CAAWC;AAD9B,aAAd;AAGH;;;+CAEsB;AACnB,iBAAKO,QAAL,CAAc;AACVN,yCAA0B,CAAC,KAAKF,KAAL,CAAWE;AAD5B,aAAd;AAGH;;;kDAEyBH,K,EAAO;AAC7B,iBAAKS,QAAL,CAAc;AACVL,4BAAaJ,MAAMI;AADT,aAAd;AAGH;;;yCAEgBA,U,EAAY;AACzB,iBAAKK,QAAL,CAAc;AACVL,4BAAaA;AADH,aAAd;AAGH;;;iCAEQ;AACL,gBAAMA,aAAa,KAAKH,KAAL,CAAWG,UAA9B;AACA,mBACI;AAAA;AAAA,kBAAK,WAAU,8BAAf;AACI;AAAA;AAAA,sBAAK,WAAU,gDAAf;AACI;AAAA;AAAA,0BAAK,WAAU,SAAf;AACI;AAAA;AAAA,8BAAI,WAAU,MAAd;AAAA;AAAA;AADJ;AADJ,iBADJ;AAQI;AAAA;AAAA,sBAAK,WAAU,WAAf;AACI,kDAAC,iBAAD,IAAmB,YAAaA,UAAhC;AACmB,gDAAyB,KAAKG,sBADjD;AAEmB,8CAAuB,KAAKC,oBAF/C,GADJ;AAII,kDAAC,kBAAD,IAAoB,UAAWJ,WAAWM,QAA1C,GAJJ;AAMM,yBAAKT,KAAL,CAAWU,gBAAX,KAAgC,IAAhC,IACF,+DAAuB,QAAS,KAAKV,KAAL,CAAWC,yBAA3C;AACuB,oCAAaE,UADpC;AAEuB,gCAAS,KAAKG,sBAFrC;AAGuB,yCAAkB,KAAKP,KAAL,CAAWY,sBAHpD;AAIuB,iCAAU,KAAKZ,KAAL,CAAWa,kBAJ5C,GAPJ;AAaM,yBAAKZ,KAAL,CAAWU,gBAAX,KAAgC,IAAhC,IACF,6DAAqB,UAArB;AACqB,gCAAS,KAAKV,KAAL,CAAWE,uBADzC;AAEqB,oCAAaC,UAFlC;AAGqB,gCAAS,KAAKI,oBAHnC;AAIqB,uCAAgB,KAAKH,gBAJ1C;AAKqB,iCAAU,KAAKL,KAAL,CAAWa,kBAL1C;AAdJ;AARJ,aADJ;AAgCH;;;;;;IAGCC,iB;;;AACF,+BAAYd,KAAZ,EAAmB;AAAA;;AAAA,qIACTA,KADS;AAElB;;;;iCAEQ;AAAA;;AACL,qBAASe,UAAT,CAAoBC,IAApB,EAA0B;AACtB,uBAAO,sBAAOA,IAAP,EAAaC,MAAb,CAAoB,IAApB,CAAP;AACH;;AAED,gBAAMC,gBAAgBH,WAAW,KAAKf,KAAL,CAAWI,UAAX,CAAsBe,cAAjC,CAAtB;AACA,gBAAMC,OAAO,KAAKpB,KAAL,CAAWI,UAAX,CAAsBiB,QAAtB,KAAmC,KAAnC,GAA2C,WAA3C,GAAyD,eAAtE;AACA,gBAAMC,aAAa,KAAKtB,KAAL,CAAWI,UAAX,CAAsBmB,eAAtB,KAA0C,IAA1C,GAAiD,MAAjD,GAA0DR,WAAW,KAAKf,KAAL,CAAWI,UAAX,CAAsBmB,eAAjC,CAA7E;AACA,gBAAMC,UAAU,KAAKxB,KAAL,CAAWI,UAAX,CAAsBqB,iBAAtB,KAA4C,IAA5C,GAAmD,MAAnD,GAA4D,KAAKzB,KAAL,CAAWI,UAAX,CAAsBqB,iBAAlG;AACA,gBAAMC,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,oBAAMC,QAAQC,QAAQ,UAAR,EAAoBD,KAAlC;AACAA,sBAAME,YAAN,CAAmB,OAAK7B,KAAL,CAAWI,UAAX,CAAsB0B,eAAzC;AACH,aAHD;;AAKA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA;AAAqBV;AAArB;AAFJ,qBADJ;AAKI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA;AAAqBF;AAArB;AAFJ,qBALJ;AASI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA;AAAqBI;AAArB;AAFJ,qBATJ;AAaI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA;AAAqBE;AAArB;AAFJ,qBAbJ;AAiBI;AAAA;AAAA;AACI;AAAA;AAAA,8BAAmB,WAAU,QAA7B;AACI;AAAA;AAAA,kCAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC,EAA0C,WAAU,MAApD;AACQ,6CAAUE,cADlB;AAAA;AAAA,6BADJ;AAGI;AAAA;AAAA,kCAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC,EAA0C,WAAU,SAApD;AACQ,6CAAU,KAAK1B,KAAL,CAAWQ,oBAD7B;AAAA;AAAA,6BAHJ;AAKI;AAAA;AAAA,kCAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC;AACQ,6CAAU,KAAKR,KAAL,CAAWO,sBAD7B;AAAA;AAAA;AALJ;AADJ;AAjBJ;AAFJ,aADJ;AAiCH;;;;;;IAGCwB,kB;;;AACF,gCAAY/B,KAAZ,EAAmB;AAAA;;AAAA,uIACTA,KADS;AAElB;;;;iCAEQ;AACL,gBAAIgC,OACA;AAAA;AAAA,kBAAK,WAAU,oCAAf;AACI;AAAA;AAAA,sBAAI,WAAU,gBAAd;AAAA;AAAA;AADJ,aADJ;;AAOA,gBAAMC,OAAO,KAAKjC,KAAL,CAAWU,QAAX,CAAoBwB,GAApB,CAAwB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACrD,uBACI;AAAA;AAAA,sBAAY,KAAMA,KAAlB;AAA4B,uCAAS1B,QAAT,CAAkByB,OAAlB;AAA5B,iBADJ;AAGH,aAJY,CAAb;;AAMA,gBAAI,KAAKnC,KAAL,CAAWU,QAAX,CAAoB2B,MAApB,GAA6B,CAAjC,EAAoC;AAChCL,uBACI;AAAA;AAAA;AACMC;AADN,iBADJ;AAKH;;AAED,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEMD;AAFN,aADJ;AAMH;;;;;;IAGCM,kB;;;AACF,gCAAYtC,KAAZ,EAAmB;AAAA;;AAAA,6IACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACTsC,oCAAyB,KADhB;AAETC,kCAAuB,KAFd;AAGTC,qBAAUzC,MAAMyC;AAHP,SAAb;;AAMA,eAAKC,mBAAL,GAA2B,OAAKA,mBAAL,CAAyBpC,IAAzB,QAA3B;AACA,eAAKqC,iBAAL,GAAyB,OAAKA,iBAAL,CAAuBrC,IAAvB,QAAzB;AACA,eAAKsC,aAAL,GAAqB,OAAKA,aAAL,CAAmBtC,IAAnB,QAArB;AAXe;AAYlB;;;;8CAEqB;AAClB,iBAAKG,QAAL,CAAc;AACVP,2CAA4B,CAAC,KAAKD,KAAL,CAAWsC;AAD9B,aAAd;AAGH;;;4CAEmB;AAChB,iBAAK9B,QAAL,CAAc;AACV+B,sCAAuB,CAAC,KAAKvC,KAAL,CAAWuC;AADzB,aAAd;AAGH;;;kDAEyBxC,K,EAAO;AAC7B,iBAAKS,QAAL,CAAc;AACVgC,yBAAUzC,MAAMyC;AADN,aAAd;AAGH;;;sCAEaA,O,EAAS;AACnB,iBAAKhC,QAAL,CAAc;AACVgC,yBAAUA;AADA,aAAd;AAGH;;;iCAEQ;AACL,gBAAMA,UAAU,KAAKxC,KAAL,CAAWwC,OAA3B;AACA,mBACI;AAAA;AAAA,kBAAK,WAAU,8BAAf;AACI;AAAA;AAAA,sBAAK,WAAU,gDAAf;AACI;AAAA;AAAA,0BAAK,WAAU,SAAf;AACI;AAAA;AAAA,8BAAI,WAAU,MAAd;AAAA;AAAA;AADJ;AADJ,iBADJ;AAQI;AAAA;AAAA,sBAAK,WAAU,WAAf;AACI,kDAAC,cAAD,IAAgB,SAAUA,OAA1B;AACgB,6CAAsB,KAAKC,mBAD3C;AAEgB,2CAAoB,KAAKC,iBAFzC,GADJ;AAII,kDAAC,kBAAD,IAAoB,aAAcF,QAAQI,cAA1C;AAJJ;AARJ,aADJ;AAmBH;;;;;;IAGCC,c;;;AACF,4BAAY9C,KAAZ,EAAmB;AAAA;;AAAA,+HACTA,KADS;AAElB;;;;iCAEQ;AACL,gBAAMyC,UAAU,KAAKzC,KAAL,CAAWyC,OAA3B;AACA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA;AAAqBA,oCAAQM;AAA7B;AAFJ,qBADJ;AAKI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA;AAAqBN,oCAAQN,OAAR,CAAgBY;AAArC;AAFJ,qBALJ;AASI;AAAA;AAAA;AACI;AAAA;AAAA,8BAAmB,WAAU,QAA7B;AACI;AAAA;AAAA,kCAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC,EAA0C,WAAU,SAApD;AACQ,6CAAU,KAAK/C,KAAL,CAAWQ,oBAD7B;AAAA;AAAA,6BADJ;AAGI;AAAA;AAAA,kCAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC;AACQ,6CAAU,KAAKR,KAAL,CAAWO,sBAD7B;AAAA;AAAA;AAHJ;AADJ;AATJ;AAFJ,aADJ;AAuBH;;;;;;IAGCyC,kB;;;AACF,gCAAYhD,KAAZ,EAAmB;AAAA;;AAAA,uIACTA,KADS;AAElB;;;;iCAEQ;AACL,gBAAIgC,OACA;AAAA;AAAA,kBAAK,WAAU,oCAAf;AACI;AAAA;AAAA,sBAAI,WAAU,gBAAd;AAAA;AAAA;AADJ,aADJ;;AAMA,gBAAMC,OAAO,KAAKjC,KAAL,CAAWiD,WAAX,CAAuBf,GAAvB,CAA2B,UAACgB,UAAD,EAAad,KAAb,EAAuB;AAC3D,uBACI;AAAA;AAAA,sBAAY,KAAMA,KAAlB;AAA4Bc,+BAAWH;AAAvC,iBADJ;AAGH,aAJY,CAAb;;AAMA,gBAAI,KAAK/C,KAAL,CAAWiD,WAAX,CAAuBZ,MAAvB,GAAgC,CAApC,EAAuC;AACnCL,uBACI;AAAA;AAAA;AACMC;AADN,iBADJ;AAKH;;AAED,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEMD;AAFN,aADJ;AAMH;;;;;;QAKDjC,qB,GAAAA,qB;QACAuC,kB,GAAAA,kB","file":"sidebar_panes.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport settings from \"../../../settings\";\nimport { Button, } from \"reactstrap\";\n\nimport {\n    DeleteMemorandumModal,\n    MemorandumFormModal,\n} from \"../modals\";\nimport {\n    Section,\n    SectionRow,\n    SectionRowContent,\n    SectionRowTitle,\n    SectionTable,\n    SectionTitle,\n} from \"../../../components/section\";\n\n\nclass MemorandumSidebarPane extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n            memorandum : props.memorandum,\n        };\n\n        this.onEditMemorandum = this.onEditMemorandum.bind(this);\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            memorandum : props.memorandum,\n        });\n    }\n\n    onEditMemorandum(memorandum) {\n        this.setState({\n            memorandum : memorandum,\n        });\n    }\n\n    render() {\n        const memorandum = this.state.memorandum;\n        return (\n            <div className=\"p-0 h-100 d-flex flex-column\">\n                <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0\">Memorandum</h5>\n                    </div>\n                </div>\n\n\n                <div className=\"page-body\">\n                    <MemorandumDetails memorandum={ memorandum }\n                                       toggleDeleteMemorandum={ this.toggleDeleteMemorandum }\n                                       toggleEditMemorandum={ this.toggleEditMemorandum }/>\n                    <MemorandumLinkages linkages={ memorandum.linkages }/>\n\n                    { this.state.activeMemorandum !== null &&\n                    <DeleteMemorandumModal isOpen={ this.state.deleteMemorandumIsShowing }\n                                           memorandum={ memorandum }\n                                           toggle={ this.toggleDeleteMemorandum }\n                                           onDeleteSuccess={ this.props.removeActiveMemorandum }\n                                           refresh={ this.props.refreshMemorandums }/> }\n\n                    { this.state.activeMemorandum !== null &&\n                    <MemorandumFormModal edit\n                                         isOpen={ this.state.editMemorandumIsShowing }\n                                         memorandum={ memorandum }\n                                         toggle={ this.toggleEditMemorandum }\n                                         onEditSuccess={ this.onEditMemorandum }\n                                         refresh={ this.props.refreshMemorandums }/> }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(this.props.memorandum.date_effective);\n        const type = this.props.memorandum.category === \"MOA\" ? \"Agreement\" : \"Understanding\";\n        const expiryDate = this.props.memorandum.date_expiration === null ? \"None\" : formatDate(this.props.memorandum.date_expiration);\n        const college = this.props.memorandum.college_initiator === null ? \"None\" : this.props.memorandum.college_initiator;\n        const viewMemorandum = () => {\n            const shell = require(\"electron\").shell;\n            shell.openExternal(this.props.memorandum.memorandum_file);\n        };\n\n        return (\n            <Section>\n                <SectionTitle>Details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Memorandum Type</SectionRowTitle>\n                        <SectionRowContent>{ type }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Date Effective</SectionRowTitle>\n                        <SectionRowContent>{ dateEffective }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Expiration Date</SectionRowTitle>\n                        <SectionRowContent>{ expiryDate }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>College Initiator</SectionRowTitle>\n                        <SectionRowContent>{ college }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline color=\"success\" size=\"sm\" className=\"mr-2\"\n                                    onClick={ viewMemorandum }>View</Button>\n                            <Button outline color=\"success\" size=\"sm\" className=\"mr-auto\"\n                                    onClick={ this.props.toggleEditMemorandum }>Edit</Button>\n                            <Button outline color=\"warning\" size=\"sm\"\n                                    onClick={ this.props.toggleDeleteMemorandum }>Archive</Button>\n                        </SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass MemorandumLinkages extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let body = (\n            <div className=\"p-4 pt-5 pb-5 bg-light text-center\">\n                <h5 className=\"text-secondary\">There are no linkages for this memorandum.</h5>\n            </div>\n        );\n\n\n        const rows = this.props.linkages.map((linkage, index) => {\n            return (\n                <SectionRow key={ index }>{ settings.linkages[linkage] }</SectionRow>\n            );\n        });\n\n        if (this.props.linkages.length > 0) {\n            body = (\n                <SectionTable>\n                    { rows }\n                </SectionTable>\n            );\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Linkages</SectionTitle>\n                { body }\n            </Section>\n        );\n    }\n}\n\nclass ProgramSidebarPane extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteProgramIsShowing : false,\n            editProgramIsShowing : false,\n            program : props.program,\n        };\n\n        this.toggleDeleteProgram = this.toggleDeleteProgram.bind(this);\n        this.toggleEditProgram = this.toggleEditProgram.bind(this);\n        this.onEditProgram = this.onEditProgram.bind(this);\n    }\n\n    toggleDeleteProgram() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteProgramIsShowing,\n        });\n    }\n\n    toggleEditProgram() {\n        this.setState({\n            editProgramIsShowing : !this.state.editProgramIsShowing,\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            program : props.program,\n        });\n    }\n\n    onEditProgram(program) {\n        this.setState({\n            program : program,\n        });\n    }\n\n    render() {\n        const program = this.state.program;\n        return (\n            <div className=\"p-0 h-100 d-flex flex-column\">\n                <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0\">Program</h5>\n                    </div>\n                </div>\n\n\n                <div className=\"page-body\">\n                    <ProgramDetails program={ program }\n                                    toggleDeleteProgram={ this.toggleDeleteProgram }\n                                    toggleEditProgram={ this.toggleEditProgram }/>\n                    <ProgramStudyFields studyFields={ program.studyfield_set }/>\n\n                    { /* Delete and Edit Modals */ }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ProgramDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const program = this.props.program;\n        return (\n            <Section>\n                <SectionTitle>Details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Program Name</SectionRowTitle>\n                        <SectionRowContent>{ program.name }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Linkage</SectionRowTitle>\n                        <SectionRowContent>{ program.linkage.name }</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline color=\"success\" size=\"sm\" className=\"mr-auto\"\n                                    onClick={ this.props.toggleEditMemorandum }>Edit</Button>\n                            <Button outline color=\"warning\" size=\"sm\"\n                                    onClick={ this.props.toggleDeleteMemorandum }>Archive</Button>\n                        </SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass ProgramStudyFields extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let body = (\n            <div className=\"p-4 pt-5 pb-5 bg-light text-center\">\n                <h5 className=\"text-secondary\">There are no study fields for this program.</h5>\n            </div>\n        );\n\n        const rows = this.props.studyFields.map((studyField, index) => {\n            return (\n                <SectionRow key={ index }>{ studyField.name }</SectionRow>\n            );\n        });\n\n        if (this.props.studyFields.length > 0) {\n            body = (\n                <SectionTable>\n                    { rows }\n                </SectionTable>\n            );\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Study Fields</SectionTitle>\n                { body }\n            </Section>\n        );\n    }\n}\n\n\nexport {\n    MemorandumSidebarPane,\n    ProgramSidebarPane,\n};"]}