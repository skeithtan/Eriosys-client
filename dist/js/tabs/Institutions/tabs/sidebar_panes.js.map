{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/sidebar_panes.js"],"names":["MemorandumSidebarPane","props","state","deleteMemorandumIsShowing","editMemorandumIsShowing","restoreMemorandumIsShowing","memorandum","onEditMemorandum","bind","toggleEditMemorandum","toggleDeleteMemorandum","toggleRestoreMemorandum","setState","archived","linkages","activeMemorandum","removeActiveMemorandum","refreshMemorandums","onRestoreSuccess","MemorandumDetails","formatDate","date","format","dateEffective","date_effective","type","category","expiryDate","date_expiration","college","college_initiator","viewMemorandum","shell","require","openExternal","memorandum_file","MemorandumLinkages","body","rows","map","linkage","index","length","ProgramSidebarPane","deleteProgramIsShowing","editProgramIsShowing","program","toggleDeleteProgram","toggleEditProgram","onEditProgram","studyfield_set","ProgramDetails","name","ProgramStudyFields","studyFields","studyField"],"mappings":"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","file":"sidebar_panes.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport settings from \"../../../settings\";\nimport { Button, } from \"reactstrap\";\n\nimport {\n    ArchiveMemorandumModal,\n    MemorandumFormModal,\n} from \"../modals\";\nimport {\n    Section,\n    SectionRow,\n    SectionRowContent,\n    SectionRowTitle,\n    SectionTable,\n    SectionTitle,\n} from \"../../../components/section\";\nimport { RestoreMemorandumModal } from \"../../Archives/tabs/modals\";\n\n\nclass MemorandumSidebarPane extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n            restoreMemorandumIsShowing : false,\n            memorandum : props.memorandum,\n        };\n\n        this.onEditMemorandum = this.onEditMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleRestoreMemorandum = this.toggleRestoreMemorandum.bind(this);\n    }\n\n    toggleRestoreMemorandum() {\n        this.setState({\n            restoreMemorandumIsShowing : !this.state.restoreMemorandumIsShowing,\n        });\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            memorandum : props.memorandum,\n        });\n    }\n\n    onEditMemorandum(memorandum) {\n        this.setState({\n            memorandum : memorandum,\n        });\n    }\n\n    render() {\n        const memorandum = this.state.memorandum;\n        return (\n            <div className=\"p-0 h-100 d-flex flex-column\">\n                <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0\">Memorandum</h5>\n                    </div>\n                </div>\n\n                <div className=\"page-body\">\n                    <MemorandumDetails archived={this.props.archived}\n                                       memorandum={memorandum}\n                                       toggleRestoreMemorandum={this.toggleRestoreMemorandum}\n                                       toggleDeleteMemorandum={this.toggleDeleteMemorandum}\n                                       toggleEditMemorandum={this.toggleEditMemorandum}/>\n                    <MemorandumLinkages linkages={memorandum.linkages}/>\n\n                    {this.state.activeMemorandum !== null &&\n                    <ArchiveMemorandumModal isOpen={this.state.deleteMemorandumIsShowing}\n                                            memorandum={memorandum}\n                                            toggle={this.toggleDeleteMemorandum}\n                                            onDeleteSuccess={this.props.removeActiveMemorandum}\n                                            refresh={this.props.refreshMemorandums}/>}\n\n                    {this.state.activeMemorandum !== null &&\n                    <MemorandumFormModal edit\n                                         isOpen={this.state.editMemorandumIsShowing}\n                                         memorandum={memorandum}\n                                         toggle={this.toggleEditMemorandum}\n                                         onEditSuccess={this.onEditMemorandum}\n                                         refresh={this.props.refreshMemorandums}/>}\n\n                    {this.state.activeMemorandum !== null &&\n                    <RestoreMemorandumModal memorandum={memorandum}\n                                            onRestoreSuccess={this.props.onRestoreSuccess}\n                                            isOpen={this.state.restoreMemorandumIsShowing}\n                                            toggle={this.toggleRestoreMemorandum}/>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(this.props.memorandum.date_effective);\n        const type = this.props.memorandum.category === \"MOA\" ? \"Agreement\" : \"Understanding\";\n        const expiryDate = this.props.memorandum.date_expiration === null ? \"None\" : formatDate(this.props.memorandum.date_expiration);\n        const college = this.props.memorandum.college_initiator === null ? \"None\" : this.props.memorandum.college_initiator;\n        const viewMemorandum = () => {\n            const shell = require(\"electron\").shell;\n            shell.openExternal(this.props.memorandum.memorandum_file);\n        };\n\n        return (\n            <Section>\n                <SectionTitle>Details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Memorandum Type</SectionRowTitle>\n                        <SectionRowContent>{type}</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Date Effective</SectionRowTitle>\n                        <SectionRowContent>{dateEffective}</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Expiration Date</SectionRowTitle>\n                        <SectionRowContent>{expiryDate}</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>College Initiator</SectionRowTitle>\n                        <SectionRowContent>{college}</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    className=\"mr-2\"\n                                    onClick={viewMemorandum}>View</Button>\n\n                            {!this.props.archived &&\n                            <Button outline\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    className=\"mr-auto\"\n                                    onClick={this.props.toggleEditMemorandum}>Edit</Button>\n                            }\n                            {!this.props.archived &&\n                            < Button outline\n                                     color=\"warning\"\n                                     size=\"sm\"\n                                     onClick={this.props.toggleDeleteMemorandum}>Archive</Button>\n                            }\n\n                            {this.props.archived &&\n                            <Button outline\n                                    color=\"primary\"\n                                    size=\"sm\"\n                                    className=\"ml-auto\"\n                                    onClick={this.props.toggleRestoreMemorandum}>Restore</Button>\n                            }\n                        </SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass MemorandumLinkages extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let body = (\n            <div className=\"p-4 pt-5 pb-5 bg-light text-center\">\n                <h5 className=\"text-secondary\">There are no linkages for this memorandum.</h5>\n            </div>\n        );\n\n\n        const rows = this.props.linkages.map((linkage, index) => {\n            return (\n                <SectionRow key={index}>{settings.linkages[linkage]}</SectionRow>\n            );\n        });\n\n        if (this.props.linkages.length > 0) {\n            body = (\n                <SectionTable>\n                    {rows}\n                </SectionTable>\n            );\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Linkages</SectionTitle>\n                {body}\n            </Section>\n        );\n    }\n}\n\nclass ProgramSidebarPane extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteProgramIsShowing : false,\n            editProgramIsShowing : false,\n            program : props.program,\n        };\n\n        this.toggleDeleteProgram = this.toggleDeleteProgram.bind(this);\n        this.toggleEditProgram = this.toggleEditProgram.bind(this);\n        this.onEditProgram = this.onEditProgram.bind(this);\n    }\n\n    toggleDeleteProgram() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteProgramIsShowing,\n        });\n    }\n\n    toggleEditProgram() {\n        this.setState({\n            editProgramIsShowing : !this.state.editProgramIsShowing,\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            program : props.program,\n        });\n    }\n\n    onEditProgram(program) {\n        this.setState({\n            program : program,\n        });\n    }\n\n    render() {\n        const program = this.state.program;\n        return (\n            <div className=\"p-0 h-100 d-flex flex-column\">\n                <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                    <div className=\"mr-auto\">\n                        <h5 className=\"mb-0\">Program</h5>\n                    </div>\n                </div>\n\n\n                <div className=\"page-body\">\n                    <ProgramDetails program={program}\n                                    toggleDeleteProgram={this.toggleDeleteProgram}\n                                    toggleEditProgram={this.toggleEditProgram}/>\n                    <ProgramStudyFields studyFields={program.studyfield_set}/>\n\n                    {/* Delete and Edit Modals */}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ProgramDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const program = this.props.program;\n        return (\n            <Section>\n                <SectionTitle>Details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Program Name</SectionRowTitle>\n                        <SectionRowContent>{program.name}</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowTitle>Linkage</SectionRowTitle>\n                        <SectionRowContent>{program.linkage.name}</SectionRowContent>\n                    </SectionRow>\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    className=\"mr-auto\"\n                                    onClick={this.props.toggleEditMemorandum}>Edit</Button>\n                            <Button outline\n                                    color=\"warning\"\n                                    size=\"sm\"\n                                    onClick={this.props.toggleDeleteMemorandum}>Archive</Button>\n                        </SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass ProgramStudyFields extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let body = (\n            <div className=\"p-4 pt-5 pb-5 bg-light text-center\">\n                <h5 className=\"text-secondary\">There are no study fields for this program.</h5>\n            </div>\n        );\n\n        const rows = this.props.studyFields.map((studyField, index) => {\n            return (\n                <SectionRow key={index}>{studyField.name}</SectionRow>\n            );\n        });\n\n        if (this.props.studyFields.length > 0) {\n            body = (\n                <SectionTable>\n                    {rows}\n                </SectionTable>\n            );\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Study Fields</SectionTitle>\n                {body}\n            </Section>\n        );\n    }\n}\n\n\nexport {\n    MemorandumSidebarPane,\n    ProgramSidebarPane,\n};"]}