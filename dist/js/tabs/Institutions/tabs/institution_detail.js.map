{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/institution_detail.js"],"names":["fetchInstitution","id","onResponse","query","InstitutionOverview","props","state","institution","institutionID","deleteInstitutionIsShowing","editInstitutionIsShowing","toggleDeleteInstitution","bind","toggleEditInstitution","onEditInstitution","setState","response","data","refreshInstitutions","nextProps","InstitutionDetail","unselectedState","onDeleteActiveInstitution","InstitutionOverviewHead","name","country","InstitutionOverviewBody","InstitutionDetailOverview","agreementType","agreement","website","openWebsite","require","shell","openExternal","email","address","InstitutionContact","contactPersonName","contactPersonNumber","InstitutionDetailRow","onClick","fieldName","fieldValue"],"mappings":"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","file":"institution_detail.js","sourcesContent":["import React, { Component } from \"react\";\nimport {Button, ListGroup, ListGroupItem} from \"reactstrap\";\nimport LoadingSpinner from \"../../../loading\";\n\nimport {\n    DeleteInstitutionModal,\n    EditInstitutionModal,\n} from \"../modals\";\n\n\nimport Memorandums from \"./memorandums\";\nimport graphql from \"../../../graphql\";\n\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query : `\n        {\n            institution(id:${id}) {\n                id\n                name\n                email\n                address\n                website\n                contactPersonName\n                contactPersonNumber\n                country {\n                    name\n                }\n                agreement\n            }\n        }\n       `,\n        onResponse : onResponse,\n    });\n}\n\nclass InstitutionOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            institution : null,\n            institutionID : null,\n            deleteInstitutionIsShowing : false,\n            editInstitutionIsShowing : false,\n        };\n\n        this.toggleDeleteInstitution = this.toggleDeleteInstitution.bind(this);\n        this.toggleEditInstitution = this.toggleEditInstitution.bind(this);\n        this.onEditInstitution = this.onEditInstitution.bind(this);\n    }\n\n    toggleDeleteInstitution() {\n        this.setState({\n            deleteInstitutionIsShowing : !this.state.deleteInstitutionIsShowing,\n        });\n    }\n\n    toggleEditInstitution() {\n        this.setState({\n            editInstitutionIsShowing : !this.state.editInstitutionIsShowing,\n        });\n    }\n\n    onEditInstitution() {\n        //Refresh and fetch new data from server\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.state.institutionID, response => {\n            const institution = response.data.institution;\n            this.setState({\n                institution : institution,\n            });\n\n            this.props.refreshInstitutions();\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const institution = nextProps.institution;\n\n        if (institution === null) {\n            this.setState({\n                institution : null,\n                institutionID : null,\n            });\n\n            return;\n        }\n\n        // Inform state about an active institution, but remove old institution\n        this.setState({\n            institutionID : institution.id,\n            institution : null,\n        });\n\n        //Fetch active institution details\n        fetchInstitution(institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n\n    render() {\n        //User has not selected yet, no activeInstitution ID\n        if (this.state.institutionID === null) {\n            return InstitutionDetail.unselectedState();\n        }\n\n        //User has already selected, but we haven't fetched it from the database yet\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div id=\"institution-detail\" className=\"container-fluid d-flex flex-column p-0\">\n                <InstitutionOverviewHead institution={this.state.institution}\n                                         toggleDeleteInstitution={this.toggleDeleteInstitution}\n                                         toggleEditInstitution={this.toggleEditInstitution}/>\n                <InstitutionOverviewBody institution={this.state.institution}/>\n\n                {this.state.institution !== null && //If activeInstitution is not null\n                <DeleteInstitutionModal isOpen={this.state.deleteInstitutionIsShowing}\n                                        institution={this.state.institution}\n                                        toggle={this.toggleDeleteInstitution}\n                                        refresh={this.props.onDeleteActiveInstitution}/>}\n\n                {this.state.institution !== null &&\n                <EditInstitutionModal isOpen={this.state.editInstitutionIsShowing}\n                                      institution={this.state.institution}\n                                      refresh={this.onEditInstitution}\n                                      toggle={this.toggleEditInstitution}/>}\n            </div>\n        );\n    }\n}\n\nclass InstitutionOverviewHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-center\">\n                <div className=\"mr-auto\">\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">{this.props.institution.name}\n                        <small className=\"text-muted ml-2\">{this.props.institution.country.name}</small>\n                    </h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" className=\"mr-2\"\n                            onClick={this.props.toggleEditInstitution}>Edit Institution</Button>\n                    <Button outline size=\"sm\" color=\"danger\"\n                            onClick={this.props.toggleDeleteInstitution}>Delete</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass InstitutionOverviewBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <InstitutionDetailOverview institution={this.props.institution}/>\n                <InstitutionContact institution={this.props.institution}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetailOverview extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n        const agreementType = this.props.institution.agreement === \"B\" ? \"Bilateral\" : \"Multilateral\";\n        const website = `http://${institution.website}`;\n\n        function openWebsite() {\n            const { shell } = require(\"electron\");\n            shell.openExternal(website);\n        }\n\n        return (\n            <div>\n                <small className=\"section-title\">Institution details</small>\n                <ListGroup>\n                    <InstitutionDetailRow fieldName=\"Email\" fieldValue={institution.email}/>\n                    <InstitutionDetailRow fieldName=\"Address\" fieldValue={institution.address}/>\n\n                    <ListGroupItem>\n                        <small className=\"font-weight-bold\">Website</small>\n                        <p className=\"lead m-0 text-primary\" onClick={openWebsite}>{website}</p>\n                    </ListGroupItem>\n\n                    <InstitutionDetailRow fieldName=\"Agreement Type\" fieldValue={agreementType}/>\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nclass InstitutionContact extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n\n        return (\n            <div>\n                <small className=\"section-title\">Contact details</small>\n                <ListGroup>\n                    <InstitutionDetailRow fieldName=\"Contact Person\" fieldValue={institution.contactPersonName}/>\n                    <InstitutionDetailRow fieldName=\"Contact Phone Number\"\n                                          fieldValue={institution.contactPersonNumber}/>\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetailRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <ListGroupItem onClick={this.props.onClick}>\n                <small className=\"font-weight-bold\">{this.props.fieldName}</small>\n                <p className=\"lead m-0\">{this.props.fieldValue}</p>\n            </ListGroupItem>\n        );\n    }\n}\n\n\nexport default InstitutionDetail;"]}