{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/overview.js"],"names":["fetchInstitution","id","onResponse","query","InstitutionOverview","props","state","institution","institutionID","setSidebarContent","onEditInstitution","bind","response","data","country","name","setState","nextProps","refreshInstitutions","onDeleteActiveInstitution","OverviewHead","deleteInstitutionIsShowing","editInstitutionIsShowing","toggleEditInstitution","toggleDeleteInstitution","onDeleteInstitution","OverviewBody","InstitutionDetails","agreementType","agreement","website","openWebsite","require","shell","openExternal","address","ContactDetails","noContactDetails","contact_person_number","length","contact_person_name","contact_person_email"],"mappings":"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","file":"overview.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../../loading\";\nimport graphql from \"../../../graphql\";\nimport { Button } from \"reactstrap\";\n\nimport {\n    DeleteInstitutionModal,\n    InstitutionFormModal,\n} from \"../modals\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowTitle,\n    SectionRowContent,\n} from \"../../../components/section\";\n\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query : `\n        {\n            institution(id:${id}) {\n                id\n                name\n                address\n                website\n                contact_person_email\n                contact_person_name\n                contact_person_number\n                country {\n                    name\n                }\n                agreement\n            }\n        }\n       `,\n        onResponse : onResponse,\n    });\n}\n\nclass InstitutionOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            institution : null,\n            institutionID : props.institution.id,\n        };\n\n        this.props.setSidebarContent(null);\n\n        this.onEditInstitution = this.onEditInstitution.bind(this);\n\n        //Fetch active institution details\n        fetchInstitution(props.institution.id, response => {\n            const institution = response.data.institution;\n\n            //Make country = country.name for simplicity\n            institution.country = institution.country.name;\n\n            this.setState({\n                institution : institution,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            institutionID : nextProps.institution.id,\n            institution : null,\n        });\n\n        fetchInstitution(nextProps.institution.id, response => {\n            const institution = response.data.institution;\n\n            //Make country = country.name for simplicity\n            institution.country = institution.country.name;\n\n            this.setState({\n                institution : institution,\n            });\n        });\n    }\n\n    onEditInstitution() {\n        //Refresh and fetch new data from server\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.state.institutionID, response => {\n            const institution = response.data.institution;\n\n            //Make country = country.name for simplicity\n            institution.country = institution.country.name;\n\n            this.setState({\n                institution : institution,\n            });\n\n            this.props.refreshInstitutions();\n        });\n    }\n\n    render() {\n        //User has already selected, but we haven't fetched it from the database yet\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <OverviewHead institution={this.state.institution}\n                              onDeleteInstitution={this.props.onDeleteActiveInstitution}\n                              onEditInstitution={this.onEditInstitution}/>\n                <OverviewBody institution={this.state.institution}/>\n            </div>\n        );\n    }\n}\n\nclass OverviewHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteInstitutionIsShowing : false,\n            editInstitutionIsShowing : false,\n        };\n\n        this.toggleEditInstitution = this.toggleEditInstitution.bind(this);\n        this.toggleDeleteInstitution = this.toggleDeleteInstitution.bind(this);\n    }\n\n    toggleEditInstitution() {\n        this.setState({\n            editInstitutionIsShowing : !this.state.editInstitutionIsShowing,\n        });\n    }\n\n    toggleDeleteInstitution() {\n        this.setState({\n            deleteInstitutionIsShowing : !this.state.deleteInstitutionIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Overview</h5>\n                    <h4 className=\"page-head-title mb-0\">{this.props.institution.name}</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" className=\"mr-2\"\n                            onClick={this.toggleEditInstitution}>Edit Institution</Button>\n                    <Button outline size=\"sm\" color=\"danger\"\n                            onClick={this.toggleDeleteInstitution}>Delete</Button>\n                </div>\n\n                <DeleteInstitutionModal isOpen={this.state.deleteInstitutionIsShowing}\n                                        institution={this.props.institution}\n                                        toggle={this.toggleDeleteInstitution}\n                                        refresh={this.props.onDeleteInstitution}/>\n\n                <InstitutionFormModal edit\n                                      isOpen={this.state.editInstitutionIsShowing}\n                                      institution={this.props.institution}\n                                      refresh={this.props.onEditInstitution}\n                                      toggle={this.toggleEditInstitution}/>\n            </div>\n        );\n    }\n}\n\nclass OverviewBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <InstitutionDetails institution={this.props.institution}/>\n                <ContactDetails institution={this.props.institution}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n        const agreementType = this.props.institution.agreement === \"B\" ? \"Bilateral\" : \"Multilateral\";\n        const website = `http://${institution.website}`;\n\n        function openWebsite() {\n            const { shell } = require(\"electron\");\n            shell.openExternal(website);\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Institution details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Address</SectionRowTitle>\n                        <SectionRowContent large>{institution.address}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Country</SectionRowTitle>\n                        <SectionRowContent large>{institution.country}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Website</SectionRowTitle>\n                        <SectionRowContent large className=\"text-primary\"\n                                           onClick={openWebsite}>{website}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Agreement Type</SectionRowTitle>\n                        <SectionRowContent large>{agreementType}</SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass ContactDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n\n        const noContactDetails = institution.contact_person_number.length === 0\n            && institution.contact_person_name.length === 0\n            && institution.contact_person_email.length === 0;\n\n        if (noContactDetails) {\n            return null;\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Contact Details</SectionTitle>\n                <SectionTable>\n                    {institution.contact_person_name.length > 0 &&\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person</SectionRowTitle>\n                        <SectionRowContent large>{institution.contact_person_name}</SectionRowContent>\n                    </SectionRow>\n                    }\n\n                    {institution.contact_person_email.length > 0 &&\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person Email</SectionRowTitle>\n                        <SectionRowContent large>{institution.contact_person_email}</SectionRowContent>\n                    </SectionRow>\n                    }\n\n                    {institution.contact_person_number.length > 0 &&\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person Number</SectionRowTitle>\n                        <SectionRowContent large>{institution.contact_person_number}</SectionRowContent>\n                    </SectionRow>\n                    }\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\n\nexport default InstitutionOverview;"]}