{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/overview.js"],"names":["makeInstitutionQuery","id","query","institutionIsFetched","institution","website","undefined","InstitutionOverview","props","state","error","setSidebarContent","performQuery","bind","setState","then","result","Object","assign","catch","toString","onDeleteActiveInstitution","OverviewHead","deleteInstitutionIsShowing","editInstitutionIsShowing","toggleEditInstitution","toggleDeleteInstitution","name","onDeleteInstitution","onEditInstitution","OverviewBody","InstitutionDetails","agreementType","agreement","openWebsite","require","shell","openExternal","sidebar","address","country","archived","toggleRestoreInstitution","ContactDetails","contact_person_name","contact_person_email","contact_person_number","default"],"mappings":"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","file":"overview.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport graphql from \"../../../graphql\";\nimport { Button } from \"reactstrap\";\n\nimport {\n    ArchiveInstitutionModal,\n    InstitutionFormModal,\n} from \"../modals\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowTitle,\n    SectionRowContent,\n} from \"../../../components/section\";\nimport ErrorState from \"../../../components/error_state\";\n\n\nfunction makeInstitutionQuery(id) {\n    return graphql.query(`\n    {\n        institution(id:${id}) {\n            id\n            name\n            address\n            website\n            contact_person_email\n            contact_person_name\n            contact_person_number\n            country\n            agreement\n        }\n    }    \n    `);\n}\n\nfunction institutionIsFetched(institution) {\n    return institution.website !== undefined;\n}\n\nclass InstitutionOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            institution : props.institution,\n            error : null,\n        };\n\n        this.props.setSidebarContent(null);\n        this.performQuery = this.performQuery.bind(this);\n\n        this.performQuery();\n    }\n\n    performQuery(id) {\n        if (id === undefined) {\n            id = this.state.institution.id;\n        }\n\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        //Fetch active institution details\n        makeInstitutionQuery(id)\n            .then(result => {\n                const institution = result.institution;\n\n                // Carbon copy\n                Object.assign(this.state.institution, institution);\n\n                this.setState({\n                    institution : this.state.institution,\n                });\n            })\n            .catch(error => this.setState({\n                    error : error,\n                }),\n            );\n    }\n\n    componentWillReceiveProps(props) {\n        if (this.state.institution !== null &&\n            this.state.institution.id === props.institution.id) {\n            // Institution is already showing, why reload?\n            return;\n        }\n\n        this.setState({\n            institution : props.institution,\n        });\n\n        if (!institutionIsFetched(props.institution)) {\n            this.performQuery(props.institution.id);\n        }\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={() => this.performQuery(this.state.institution.id)}>\n                    {this.state.error.toString()}\n                </ErrorState>\n            );\n        }\n\n        //User has already selected, but we haven't fetched it from the database yet\n        if (!institutionIsFetched(this.state.institution)) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <OverviewHead institution={this.state.institution}\n                              onDeleteInstitution={this.props.onDeleteActiveInstitution}\n                              onEditInstitution={this.performQuery}/>\n                <OverviewBody institution={this.state.institution}/>\n            </div>\n        );\n    }\n}\n\nclass OverviewHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteInstitutionIsShowing : false,\n            editInstitutionIsShowing : false,\n        };\n\n        this.toggleEditInstitution = this.toggleEditInstitution.bind(this);\n        this.toggleDeleteInstitution = this.toggleDeleteInstitution.bind(this);\n    }\n\n    toggleEditInstitution() {\n        this.setState({\n            editInstitutionIsShowing : !this.state.editInstitutionIsShowing,\n        });\n    }\n\n    toggleDeleteInstitution() {\n        this.setState({\n            deleteInstitutionIsShowing : !this.state.deleteInstitutionIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Overview</h5>\n                    <h4 className=\"page-head-title mb-0\">{this.props.institution.name}</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline\n                            size=\"sm\"\n                            color=\"success\"\n                            className=\"mr-2\"\n                            onClick={this.toggleEditInstitution}>Edit Institution</Button>\n                    <Button outline\n                            size=\"sm\"\n                            color=\"warning\"\n                            onClick={this.toggleDeleteInstitution}>Archive</Button>\n                </div>\n\n                <ArchiveInstitutionModal isOpen={this.state.deleteInstitutionIsShowing}\n                                         institution={this.props.institution}\n                                         toggle={this.toggleDeleteInstitution}\n                                         refresh={this.props.onDeleteInstitution}/>\n\n                <InstitutionFormModal edit\n                                      isOpen={this.state.editInstitutionIsShowing}\n                                      institution={this.props.institution}\n                                      refresh={this.props.onEditInstitution}\n                                      toggle={this.toggleEditInstitution}/>\n            </div>\n        );\n    }\n}\n\nclass OverviewBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <InstitutionDetails institution={this.props.institution}/>\n                <ContactDetails institution={this.props.institution}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n        const agreementType = this.props.institution.agreement === \"B\" ? \"Bilateral\" : \"Multilateral\";\n        const website = `http://${institution.website}`;\n\n        function openWebsite() {\n            const { shell } = require(\"electron\");\n            shell.openExternal(website);\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Institution details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Address</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{institution.address}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Country</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{institution.country}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Website</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}\n                                           className=\"text-primary\"\n                                           onClick={openWebsite}>{website}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Agreement Type</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{agreementType}</SectionRowContent>\n                    </SectionRow>\n\n                    {this.props.archived &&\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline\n                                    color=\"primary\"\n                                    size=\"sm\"\n                                    className=\"ml-auto\"\n                                    onClick={this.props.toggleRestoreInstitution}>Restore</Button>\n                        </SectionRowContent>\n                    </SectionRow>\n                    }\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass ContactDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n\n        return (\n            <Section>\n                <SectionTitle>Contact Details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{institution.contact_person_name}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person Email</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{institution.contact_person_email}</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person Number</SectionRowTitle>\n                        <SectionRowContent large={!this.props.sidebar}>{institution.contact_person_number}</SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\n\nexport {\n    InstitutionOverview as default,\n    InstitutionDetails,\n    ContactDetails,\n};"]}