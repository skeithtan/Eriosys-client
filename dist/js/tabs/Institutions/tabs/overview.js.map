{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/overview.js"],"names":["makeInstitutionOverviewQuery","id","query","institutionIsFetched","institution","website","undefined","InstitutionOverview","props","state","error","setSidebarContent","fetchInstitution","bind","setState","then","result","Object","assign","catch","toString","onArchiveActiveInstitution","OverviewHead","editInstitutionIsShowing","confirmArchive","toggleEditInstitution","confirm","name","dismissToast","title","message","ajax","url","serverURL","method","beforeSend","success","onArchiveInstitution","icon","progressBar","console","log","response","localStorage","userType","onEditInstitution","OverviewBody","InstitutionDetails","agreementType","agreement","openWebsite","require","shell","openExternal","sidebar","address","country","archived","confirmRestore","ContactDetails","contact_person_name","contact_person_email","contact_person_number","default"],"mappings":"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","file":"overview.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport graphql from \"../../../graphql\";\nimport { Button } from \"reactstrap\";\nimport $ from \"jquery\";\nimport { InstitutionFormModal, } from \"../modals\";\nimport iziToast from \"izitoast\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowTitle,\n    SectionRowContent,\n} from \"../../../components/section\";\nimport ErrorState from \"../../../components/error_state\";\nimport { makeInfoToast } from \"../../../dismissable_toast_maker\";\nimport authorizeXHR from \"../../../authorization\";\nimport settings from \"../../../settings\";\n\n\nfunction makeInstitutionOverviewQuery(id) {\n    return graphql.query(`\n    {\n        institution(id:${id}) {\n            address\n            website\n            contact_person_email\n            contact_person_name\n            contact_person_number\n            country\n            agreement\n        }\n    }    \n    `);\n}\n\nfunction institutionIsFetched(institution) {\n    return institution.website !== undefined;\n}\n\nclass InstitutionOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            institution : props.institution,\n            error : null,\n        };\n\n        this.props.setSidebarContent(null);\n        this.fetchInstitution = this.fetchInstitution.bind(this);\n\n        this.fetchInstitution();\n    }\n\n    fetchInstitution(id) {\n        if (id === undefined) {\n            id = this.state.institution.id;\n        }\n\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        //Fetch active institution details\n        makeInstitutionOverviewQuery(id)\n            .then(result => {\n                //ID from when query was made must be the same ID now\n                if (id !== this.state.institution.id) {\n                    return;\n                }\n\n                const institution = result.institution;\n\n                // Carbon copy\n                Object.assign(this.state.institution, institution);\n\n                this.setState({\n                    institution : this.state.institution,\n                });\n            })\n            .catch(error => this.setState({\n                    error : error,\n                }),\n            );\n    }\n\n    componentWillReceiveProps(props) {\n        if (this.state.institution !== null &&\n            this.state.institution.id === props.institution.id) {\n            // Institution is already showing, why reload?\n            return;\n        }\n\n        this.setState({\n            institution : props.institution,\n        });\n\n        if (!institutionIsFetched(props.institution)) {\n            this.fetchInstitution(props.institution.id);\n        }\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={ () => this.fetchInstitution(this.state.institution.id) }>\n                    { this.state.error.toString() }\n                </ErrorState>\n            );\n        }\n\n        //User has already selected, but we haven't fetched it from the database yet\n        if (!institutionIsFetched(this.state.institution)) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <OverviewHead institution={ this.state.institution }\n                              onArchiveInstitution={ this.props.onArchiveActiveInstitution }\n                              onEditInstitution={ this.fetchInstitution }/>\n                <OverviewBody institution={ this.state.institution }/>\n            </div>\n        );\n    }\n}\n\nclass OverviewHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editInstitutionIsShowing : false,\n        };\n\n        this.confirmArchive = this.confirmArchive.bind(this);\n        this.toggleEditInstitution = this.toggleEditInstitution.bind(this);\n    }\n\n    toggleEditInstitution() {\n        this.setState({\n            editInstitutionIsShowing : !this.state.editInstitutionIsShowing,\n        });\n    }\n\n    confirmArchive() {\n        if (!confirm(`Are you sure you want to archive ${this.props.institution.name}?`)) {\n            return;\n        }\n\n        const dismissToast = makeInfoToast({\n            title : \"Archiving\",\n            message : \"Archiving institution...\",\n        });\n\n        $.ajax({\n            url : `${settings.serverURL}/institutions/${this.props.institution.id}/`,\n            method : \"DELETE\",\n            beforeSend : authorizeXHR,\n            success : () => {\n                dismissToast();\n                this.props.onArchiveInstitution();\n                iziToast.success({\n                    icon : \"\",\n                    title : \"Success\",\n                    message : \"Institution archived\",\n                    progressBar : false,\n                });\n            },\n            error : response => {\n                dismissToast();\n                console.log(response);\n                iziToast.error({\n                    title : \"Error\",\n                    message : \"Unable to archive institution\",\n                    progressBar : false,\n                });\n            },\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Overview</h5>\n                    <h4 className=\"page-head-title mb-0\">{ this.props.institution.name }</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    { localStorage.userType !== \"program_assistant\" && <Button outline\n                                                                               size=\"sm\"\n                                                                               color=\"success\"\n                                                                               className=\"mr-2\"\n                                                                               onClick={ this.toggleEditInstitution }>Edit\n                        Institution</Button> }\n                    { localStorage.userType === \"VP\" && <Button outline\n                                                                size=\"sm\"\n                                                                color=\"warning\"\n                                                                onClick={ this.confirmArchive }>Archive</Button> }\n                </div>\n\n                <InstitutionFormModal edit\n                                      isOpen={ this.state.editInstitutionIsShowing }\n                                      institution={ this.props.institution }\n                                      refresh={ this.props.onEditInstitution }\n                                      toggle={ this.toggleEditInstitution }/>\n            </div>\n        );\n    }\n}\n\nclass OverviewBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <InstitutionDetails institution={ this.props.institution }/>\n                <ContactDetails institution={ this.props.institution }/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n        const agreementType = this.props.institution.agreement === \"B\" ? \"Bilateral\" : \"Multilateral\";\n        const website = `http://${institution.website}`;\n\n        function openWebsite() {\n            const {shell} = require(\"electron\");\n            shell.openExternal(website);\n        }\n\n        return (\n            <Section>\n                <SectionTitle>Institution details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Address</SectionRowTitle>\n                        <SectionRowContent large={ !this.props.sidebar }>{ institution.address }</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Country</SectionRowTitle>\n                        <SectionRowContent large={ !this.props.sidebar }>{ institution.country }</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Website</SectionRowTitle>\n                        <SectionRowContent large={ !this.props.sidebar }\n                                           className=\"text-primary\"\n                                           onClick={ openWebsite }>{ website }</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Agreement Type</SectionRowTitle>\n                        <SectionRowContent large={ !this.props.sidebar }>{ agreementType }</SectionRowContent>\n                    </SectionRow>\n\n                    { this.props.archived && localStorage.userType === \"VP\" &&\n                    <SectionRow>\n                        <SectionRowContent className=\"d-flex\">\n                            <Button outline\n                                    color=\"primary\"\n                                    size=\"sm\"\n                                    className=\"ml-auto\"\n                                    onClick={ this.props.confirmRestore }>Restore</Button>\n                        </SectionRowContent>\n                    </SectionRow>\n                    }\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\nclass ContactDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n\n        return (\n            <Section>\n                <SectionTitle>Contact Details</SectionTitle>\n                <SectionTable>\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person</SectionRowTitle>\n                        <SectionRowContent\n                            large={ !this.props.sidebar }>{ institution.contact_person_name }</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person Email</SectionRowTitle>\n                        <SectionRowContent\n                            large={ !this.props.sidebar }>{ institution.contact_person_email }</SectionRowContent>\n                    </SectionRow>\n\n                    <SectionRow>\n                        <SectionRowTitle>Contact Person Number</SectionRowTitle>\n                        <SectionRowContent\n                            large={ !this.props.sidebar }>{ institution.contact_person_number }</SectionRowContent>\n                    </SectionRow>\n                </SectionTable>\n            </Section>\n        );\n    }\n}\n\n\nexport {\n    InstitutionOverview as default,\n    InstitutionDetails,\n    ContactDetails,\n    makeInstitutionOverviewQuery,\n};"]}