{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/overview.js"],"names":["fetchInstitution","id","onResponse","query","InstitutionOverview","props","state","institution","institutionID","onEditInstitution","bind","setState","response","data","nextProps","refreshInstitutions","onDeleteActiveInstitution","InstitutionOverviewHead","deleteInstitutionIsShowing","editInstitutionIsShowing","toggleEditInstitution","toggleDeleteInstitution","name","onDeleteInstitution","InstitutionOverviewBody","InstitutionDetailOverview","agreementType","agreement","website","openWebsite","require","shell","openExternal","address","country","InstitutionContact","contactPersonName","contactPersonEmail","contactPersonNumber","InstitutionDetailRow","onClick","fieldName","fieldValue"],"mappings":"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","file":"overview.js","sourcesContent":["import React, { Component } from \"react\";\nimport LoadingSpinner from \"../../../loading\";\nimport graphql from \"../../../graphql\";\n\nimport {\n    Button,\n    ListGroup,\n    ListGroupItem,\n} from \"reactstrap\";\n\nimport {\n    DeleteInstitutionModal,\n    EditInstitutionModal,\n} from \"../modals\";\n\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query : `\n        {\n            institution(id:${id}) {\n                id\n                name\n                address\n                website\n                contactPersonEmail\n                contactPersonName\n                contactPersonNumber\n                country {\n                    name\n                }\n                agreement\n            }\n        }\n       `,\n        onResponse : onResponse,\n    });\n}\n\nclass InstitutionOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            institution : null,\n            institutionID : props.institution.id,\n        };\n\n        this.onEditInstitution = this.onEditInstitution.bind(this);\n\n        //Fetch active institution details\n        fetchInstitution(props.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            institutionID : nextProps.institution.id,\n            institution : null,\n        });\n\n        fetchInstitution(nextProps.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    onEditInstitution() {\n        //Refresh and fetch new data from server\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.state.institutionID, response => {\n            const institution = response.data.institution;\n            this.setState({\n                institution : institution,\n            });\n\n            this.props.refreshInstitutions();\n        });\n    }\n\n    render() {\n        //User has already selected, but we haven't fetched it from the database yet\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <InstitutionOverviewHead institution={this.state.institution}\n                                         onDeleteInstitution={this.props.onDeleteActiveInstitution}\n                                         onEditInstitution={this.onEditInstitution}/>\n                <InstitutionOverviewBody institution={this.state.institution}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionOverviewHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteInstitutionIsShowing : false,\n            editInstitutionIsShowing : false,\n        };\n\n        this.toggleEditInstitution = this.toggleEditInstitution.bind(this);\n        this.toggleDeleteInstitution = this.toggleDeleteInstitution.bind(this);\n    }\n\n    toggleEditInstitution() {\n        this.setState({\n            editInstitutionIsShowing : !this.state.editInstitutionIsShowing,\n        });\n    }\n\n    toggleDeleteInstitution() {\n        this.setState({\n            deleteInstitutionIsShowing : !this.state.deleteInstitutionIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-center\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Overview</h5>\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mr-2\">\n                        {this.props.institution.name}\n                    </h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" className=\"mr-2\"\n                            onClick={this.toggleEditInstitution}>Edit Institution</Button>\n                    <Button outline size=\"sm\" color=\"danger\"\n                            onClick={this.toggleDeleteInstitution}>Delete</Button>\n                </div>\n\n                <DeleteInstitutionModal isOpen={this.state.deleteInstitutionIsShowing}\n                                        institution={this.props.institution}\n                                        toggle={this.toggleDeleteInstitution}\n                                        refresh={this.props.onDeleteInstitution}/>\n\n                <EditInstitutionModal isOpen={this.state.editInstitutionIsShowing}\n                                      institution={this.props.institution}\n                                      refresh={this.props.onEditInstitution}\n                                      toggle={this.toggleEditInstitution}/>\n\n            </div>\n        );\n    }\n}\n\nclass InstitutionOverviewBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <InstitutionDetailOverview institution={this.props.institution}/>\n                <InstitutionContact institution={this.props.institution}/>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetailOverview extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n        const agreementType = this.props.institution.agreement === \"B\" ? \"Bilateral\" : \"Multilateral\";\n        const website = `http://${institution.website}`;\n\n        function openWebsite() {\n            const { shell } = require(\"electron\");\n            shell.openExternal(website);\n        }\n\n        return (\n            <div className=\"section\">\n                <small className=\"section-title\">Institution details</small>\n                <ListGroup>\n                    <InstitutionDetailRow fieldName=\"Address\" fieldValue={institution.address}/>\n                    <InstitutionDetailRow fieldName=\"Country\" fieldValue={institution.country.name}/>\n\n                    <ListGroupItem>\n                        <small className=\"font-weight-bold\">Website</small>\n                        <p className=\"lead m-0 text-primary\" onClick={openWebsite}>{website}</p>\n                    </ListGroupItem>\n\n                    <InstitutionDetailRow fieldName=\"Agreement Type\" fieldValue={agreementType}/>\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nclass InstitutionContact extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const institution = this.props.institution;\n\n        return (\n            <div className=\"section\">\n                <small className=\"section-title\">Contact details</small>\n                <ListGroup>\n                    <InstitutionDetailRow fieldName=\"Contact Person\" fieldValue={institution.contactPersonName}/>\n                    <InstitutionDetailRow fieldName=\"Contact Person Email\" fieldValue={institution.contactPersonEmail}/>\n                    <InstitutionDetailRow fieldName=\"Contact Phone Number\"\n                                          fieldValue={institution.contactPersonNumber}/>\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nclass InstitutionDetailRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <ListGroupItem onClick={this.props.onClick}>\n                <small className=\"font-weight-bold\">{this.props.fieldName}</small>\n                <p className=\"lead m-0\">{this.props.fieldValue}</p>\n            </ListGroupItem>\n        );\n    }\n}\n\n\nexport default InstitutionOverview;"]}