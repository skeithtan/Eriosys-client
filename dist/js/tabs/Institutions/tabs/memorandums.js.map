{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/memorandums.js"],"names":["fetchInstitution","id","onResponse","query","Memorandums","props","state","institution","institutionID","refreshMemorandums","bind","setState","response","data","nextProps","memorandum_set","MemorandumHead","addMemorandumIsShowing","toggleAddMemorandum","name","MemorandumBody","memorandums","sort","a","b","aTime","date_effective","bTime","isBefore","isAfter","agreements","understandings","forEach","memorandum","category","push","showing","MemorandumListSection","activeMemorandum","deleteMemorandumIsShowing","editMemorandumIsShowing","emptyState","setActiveMemorandum","toggleDeleteMemorandum","toggleEditMemorandum","children","length","rows","map","index","isShowing","onMemorandumRowClick","MemorandumRow","formatDate","date","format","dateEffective","dateExpiration","date_expiration","collegeInitiator","college_initiator","linkages","viewMemorandum","require","shell","openExternal","memorandum_file","linkagesText","linkage","code","onClick","latest","MemorandumDetailPane","MemorandumDetails","MemorandumLinkages"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AASA;;AAUA;;;;;;;;;;AAMA,SAASA,gBAAT,CAA0BC,EAA1B,EAA8BC,UAA9B,EAA0C;AACtC,2BAAQ;AACJC,6DAEsBF,EAFtB,0aADI;AAoBJC,oBAAaA;AApBT,KAAR;AAsBH;;IAGKE,W;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,yBAAc,IADL;AAETC,2BAAgBH,MAAME,WAAN,CAAkBN;AAFzB,SAAb;;AAKA,cAAKQ,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,OAA1B;;AAEA;AACAV,yBAAiBK,MAAME,WAAN,CAAkBN,EAAnC,EAAuC,oBAAY;AAC/C,kBAAKU,QAAL,CAAc;AACVJ,6BAAcK,SAASC,IAAT,CAAcN;AADlB,aAAd;AAGH,SAJD;AAXe;AAgBlB;;;;6CAEoB;AAAA;;AACjB,iBAAKI,QAAL,CAAc;AACVJ,6BAAc;AADJ,aAAd;;AAIAP,6BAAiB,KAAKK,KAAL,CAAWE,WAAX,CAAuBN,EAAxC,EAA4C,oBAAY;AACpD,uBAAKU,QAAL,CAAc;AACVJ,iCAAcK,SAASC,IAAT,CAAcN;AADlB,iBAAd;AAGH,aAJD;AAKH;;;kDAEyBO,S,EAAW;AAAA;;AACjC,iBAAKH,QAAL,CAAc;AACVH,+BAAgBM,UAAUP,WAAV,CAAsBN,EAD5B;AAEVM,6BAAc;AAFJ,aAAd;;AAKAP,6BAAiBc,UAAUP,WAAV,CAAsBN,EAAvC,EAA2C,oBAAY;AACnD,uBAAKU,QAAL,CAAc;AACVJ,iCAAcK,SAASC,IAAT,CAAcN;AADlB,iBAAd;AAGH,aAJD;AAKH;;;iCAEQ;AACL,gBAAI,KAAKD,KAAL,CAAWC,WAAX,KAA2B,IAA/B,EAAqC;AACjC,uBAAO,sDAAP;AACH;;AAED,mBACI;AAAA;AAAA,kBAAK,IAAG,yBAAR,EAAkC,WAAU,8BAA5C;AACI,8CAAC,cAAD,IAAgB,aAAc,KAAKD,KAAL,CAAWC,WAAzC,EAAuD,oBAAqB,KAAKE,kBAAjF,GADJ;AAEI;AAAA;AAAA,sBAAK,WAAU,2BAAf;AACI,kDAAC,cAAD,IAAgB,aAAc,KAAKH,KAAL,CAAWC,WAAzC;AACgB,qCAAc,KAAKD,KAAL,CAAWC,WAAX,CAAuBQ,cADrD;AAEgB,4CAAqB,KAAKN,kBAF1C,GADJ;AAII,kDAAC,oBAAD;AAJJ;AAFJ,aADJ;AAWH;;;;;;IAGCO,c;;;AACF,4BAAYX,KAAZ,EAAmB;AAAA;;AAAA,qIACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACTW,oCAAyB;AADhB,SAAb;;AAIA,eAAKC,mBAAL,GAA2B,OAAKA,mBAAL,CAAyBR,IAAzB,QAA3B;AAPe;AAQlB;;;;8CAEqB;AAClB,iBAAKC,QAAL,CAAc;AACVM,wCAAyB,CAAC,KAAKX,KAAL,CAAWW;AAD3B,aAAd;AAGH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,gDAAf;AACI;AAAA;AAAA,sBAAK,WAAU,SAAf;AACI;AAAA;AAAA,0BAAI,WAAU,qBAAd;AAAA;AAAA,qBADJ;AAEI;AAAA;AAAA,0BAAI,WAAU,sBAAd;AAAuC,6BAAKZ,KAAL,CAAWE,WAAX,CAAuBY;AAA9D;AAFJ,iBADJ;AAMI;AAAA;AAAA,sBAAK,WAAU,mBAAf;AACI;AAAA;AAAA,0BAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,OAAM,SAAhC,EAA0C,SAAU,KAAKD,mBAAzD;AAAA;AAAA;AADJ,iBANJ;AAWI,6EAAqB,QAAS,KAAKZ,KAAL,CAAWW,sBAAzC;AACqB,iCAAc,KAAKZ,KAAL,CAAWE,WAD9C;AAEqB,4BAAS,KAAKW,mBAFnC;AAGqB,6BAAU,KAAKb,KAAL,CAAWI,kBAH1C;AAXJ,aADJ;AAkBH;;;;;;IAGCW,c;;;AACF,4BAAYf,KAAZ,EAAmB;AAAA;;AAGf;AAHe,qIACTA,KADS;;AAIfA,cAAMgB,WAAN,CAAkBC,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7B,gBAAMC,QAAQ,sBAAOF,EAAEG,cAAT,CAAd;AACA,gBAAMC,QAAQ,sBAAOH,EAAEE,cAAT,CAAd;;AAEA,gBAAID,MAAMG,QAAN,CAAeD,KAAf,CAAJ,EAA2B;AACvB,uBAAO,CAAP;AACH;;AAED,gBAAIF,MAAMI,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACtB,uBAAO,CAAC,CAAR;AACH;;AAED,mBAAO,CAAP;AACH,SAbD;;AAeA,YAAIG,aAAa,EAAjB;AACA,YAAIC,iBAAiB,EAArB;;AAEA;AACA1B,cAAMgB,WAAN,CAAkBW,OAAlB,CAA0B,sBAAc;AACpC,oBAAQC,WAAWC,QAAnB;AACI,qBAAK,KAAL;AACIJ,+BAAWK,IAAX,CAAgBF,UAAhB;AACA;AACJ,qBAAK,KAAL;AACIF,mCAAeI,IAAf,CAAoBF,UAApB;AACA;AACJ;AACI;AARR;AAUH,SAXD;;AAaA,eAAK3B,KAAL,GAAa;AACT8B,qBAAU,IADD;AAETN,wBAAaA,UAFJ;AAGTC,4BAAiBA;AAHR,SAAb;;AApCe;AA0ClB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,iBAAf;AACI;AAAC,yCAAD;AAAA,sBAAuB,aAAc,KAAK1B,KAAL,CAAWE,WAAhD;AACuB,qCAAc,KAAKD,KAAL,CAAWwB,UADhD;AAEuB,4CAAqB,KAAKzB,KAAL,CAAWI,kBAFvD;AAAA;AAAA,iBADJ;AAOI;AAAC,yCAAD;AAAA,sBAAuB,aAAc,KAAKJ,KAAL,CAAWE,WAAhD;AACuB,qCAAc,KAAKD,KAAL,CAAWyB,cADhD;AAEuB,4CAAqB,KAAK1B,KAAL,CAAWI,kBAFvD;AAAA;AAAA;AAPJ,aADJ;AAeH;;;;;;IAGC4B,qB;;;AACF,mCAAYhC,KAAZ,EAAmB;AAAA;;AAAA,mJACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACTgC,8BAAmB,IADV;AAETC,uCAA4B,KAFnB;AAGTC,qCAA0B;AAHjB,SAAb;;AAMA,eAAKC,UAAL,GAAkB,OAAKA,UAAL,CAAgB/B,IAAhB,QAAlB;AACA,eAAKgC,mBAAL,GAA2B,OAAKA,mBAAL,CAAyBhC,IAAzB,QAA3B;AACA,eAAKiC,sBAAL,GAA8B,OAAKA,sBAAL,CAA4BjC,IAA5B,QAA9B;AACA,eAAKkC,oBAAL,GAA4B,OAAKA,oBAAL,CAA0BlC,IAA1B,QAA5B;AAZe;AAalB;;;;4CAEmBuB,U,EAAY;AAC5B,gBAAI,KAAK3B,KAAL,CAAWgC,gBAAX,KAAgC,IAApC,EAA0C;AACtC,qBAAK3B,QAAL,CAAc;AACV2B,sCAAmBL;AADT,iBAAd;;AAIA;AACH;;AAED,iBAAKtB,QAAL,CAAc;AACV;AACA2B,kCAAmB,KAAKhC,KAAL,CAAWgC,gBAAX,CAA4BrC,EAA5B,KAAmCgC,WAAWhC,EAA9C,GAAmD,IAAnD,GAA0DgC;AAFnE,aAAd;AAIH;;;iDAEwB;AACrB,iBAAKtB,QAAL,CAAc;AACV4B,2CAA4B,CAAC,KAAKjC,KAAL,CAAWiC;AAD9B,aAAd;AAGH;;;+CAEsB;AACnB,iBAAK5B,QAAL,CAAc;AACV6B,yCAA0B,CAAC,KAAKlC,KAAL,CAAWkC;AAD5B,aAAd;AAGH;;;qCAEY;AACT,mBACI;AAAA;AAAA,kBAAK,WAAU,0BAAf;AACI;AAAA;AAAA,sBAAI,WAAU,gBAAd;AAAA;AAA8C,yBAAKnC,KAAL,CAAWwC,QAAzD;AAAA;AAAA;AADJ,aADJ;AAKH;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKxC,KAAL,CAAWgB,WAAX,CAAuByB,MAAvB,KAAkC,CAAtC,EAAyC;AACrC,uBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAgB,6BAAKzC,KAAL,CAAWwC;AAA3B,qBADJ;AAEM,yBAAKJ,UAAL;AAFN,iBADJ;AAMH;;AAED,gBAAMM,OAAO,KAAK1C,KAAL,CAAWgB,WAAX,CAAuB2B,GAAvB,CAA2B,UAACf,UAAD,EAAagB,KAAb,EAAuB;AAC3D,oBAAIC,YAAY,KAAhB;;AAEA,oBAAI,OAAK5C,KAAL,CAAWgC,gBAAX,KAAgC,IAApC,EAA0C;AACtCY,gCAAY,OAAK5C,KAAL,CAAWgC,gBAAX,CAA4BrC,EAA5B,KAAmCgC,WAAWhC,EAA1D;AACH;;AAED,oBAAMkD,uBAAuB,SAAvBA,oBAAuB;AAAA,2BAAM,OAAKT,mBAAL,CAAyBT,UAAzB,CAAN;AAAA,iBAA7B;AACA,uBAAO,8BAAC,aAAD,IAAe,WAAYiB,SAA3B;AACe,gCAAajB,UAD5B;AAEe,6BAAUkB,oBAFzB;AAGe,4CAAyB,OAAKR,sBAH7C;AAIe,0CAAuB,OAAKC,oBAJ3C;AAKe,4BAASK,UAAU,CALlC;AAMe,yBAAMhB,WAAWhC,EANhC,GAAP;AAOH,aAfY,CAAb;;AAiBA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAgB,6BAAKI,KAAL,CAAWwC;AAA3B,qBADJ;AAEI;AAAA;AAAA,0BAAc,WAAU,uBAAxB;AACME;AADN;AAFJ,iBADJ;AAQI,+EAAuB,QAAS,KAAKzC,KAAL,CAAWiC,yBAA3C;AACuB,iCAAc,KAAKlC,KAAL,CAAWE,WADhD;AAEuB,gCAAa,KAAKD,KAAL,CAAWgC,gBAF/C;AAGuB,4BAAS,KAAKK,sBAHrC;AAIuB,6BAAU,KAAKtC,KAAL,CAAWI,kBAJ5C,GARJ;AAcM,qBAAKH,KAAL,CAAWgC,gBAAX,KAAgC,IAAhC,IACF,6DAAqB,UAArB;AACqB,4BAAS,KAAKhC,KAAL,CAAWkC,uBADzC;AAEqB,iCAAc,KAAKnC,KAAL,CAAWE,WAF9C;AAGqB,gCAAa,KAAKD,KAAL,CAAWgC,gBAH7C;AAIqB,4BAAS,KAAKM,oBAJnC;AAKqB,6BAAU,KAAKvC,KAAL,CAAWI,kBAL1C;AAfJ,aADJ;AAwBH;;;;;;IAIC2C,a;;;AACF,2BAAY/C,KAAZ,EAAmB;AAAA;;AAAA,mIACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACTiC,uCAA4B;AADnB,SAAb;AAHe;AAMlB;;;;iCAEQ;AACL,gBAAMN,aAAa,KAAK5B,KAAL,CAAW4B,UAA9B;;AAEA,qBAASoB,UAAT,CAAoBC,IAApB,EAA0B;AACtB,uBAAO,sBAAOA,IAAP,EAAaC,MAAb,CAAoB,IAApB,CAAP;AACH;;AAED,gBAAMC,gBAAgBH,WAAWpB,WAAWP,cAAtB,CAAtB;AACA,gBAAM+B,iBAAiBxB,WAAWyB,eAAX,KAA+B,IAA/B,GAAsC,eAAtC,GAAwDL,WAAWpB,WAAWyB,eAAtB,CAA/E;AACA,gBAAMC,mBAAmB1B,WAAW2B,iBAAX,KAAiC,IAAjC,GAAwC,sBAAxC,GAAiE3B,WAAW2B,iBAArG;AACA,gBAAMC,WAAW5B,WAAW4B,QAA5B;;AAEA,qBAASC,cAAT,GAA0B;AAAA,+BACNC,QAAQ,UAAR,CADM;AAAA,oBACfC,KADe,YACfA,KADe;;AAEtBA,sBAAMC,YAAN,CAAmBhC,WAAWiC,eAA9B;AACH;;AAED,gBAAIC,eAAe,aAAnB;;AAEA,gBAAIN,SAASf,MAAT,GAAkB,CAAtB,EAAyB;AACrBqB,+BAAe,EAAf;;AAEAN,yBAAS7B,OAAT,CAAiB,UAACoC,OAAD,EAAUnB,KAAV,EAAoB;AACjCkB,oCAAgB,mBAASN,QAAT,CAAkBO,QAAQC,IAA1B,CAAhB;;AAEA,wBAAIpB,QAAQ,CAAR,KAAcY,SAASf,MAA3B,EAAmC;AAC/BqB,wCAAgB,IAAhB;AACH;AACJ,iBAND;AAQH;;AAED,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA,0BAAY,gBAAZ,EAAuB,QAAS,KAAK9D,KAAL,CAAW6C,SAA3C,EAAuD,SAAU,KAAK7C,KAAL,CAAWiE,OAA5E;AACM,6BAAKjE,KAAL,CAAWkE,MAAX,IACF;AAAA;AAAA;AAAA;AAAA,yBAFJ;AAII;AAAA;AAAA,8BAAmB,WAAnB;AAAA;AAAqCf;AAArC;AAJJ,qBADJ;AAOI;AAAA;AAAA,0BAAU,QAAS,KAAKnD,KAAL,CAAW6C,SAA9B;AACI;AAAA;AAAA,8BAAU,WAAU,KAApB;AACI;AAAA;AAAA;AACI;AAAA;AAAA,sCAAY,WAAU,UAAtB;AACI;AAAA;AAAA;AAAA;AAAA,qCADJ;AAEI;AAAA;AAAA,0CAAmB,WAAnB;AAA2BO;AAA3B;AAFJ,iCADJ;AAMI;AAAA;AAAA,sCAAY,WAAU,UAAtB;AACI;AAAA;AAAA;AAAA;AAAA,qCADJ;AAEI;AAAA;AAAA,0CAAmB,WAAnB;AAA2BE;AAA3B;AAFJ,iCANJ;AAWI;AAAA;AAAA,sCAAY,WAAU,UAAtB;AACI;AAAA;AAAA;AAAA;AAAA,qCADJ;AAEI;AAAA;AAAA,0CAAmB,WAAnB;AAA2BQ;AAA3B;AAFJ,iCAXJ;AAgBI;AAAA;AAAA,sCAAY,WAAU,0BAAtB;AACI;AAAA;AAAA,0CAAK,WAAU,SAAf;AACI;AAAA;AAAA,8CAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,OAAM,SAAhC,EAA0C,WAAU,MAApD;AACQ,yDAAUL,cADlB;AAAA;AAAA,yCADJ;AAKI;AAAA;AAAA,8CAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,OAAM,SAAhC;AACQ,yDAAU,KAAKzD,KAAL,CAAWuC,oBAD7B;AAAA;AAAA;AALJ,qCADJ;AASI;AAAA;AAAA,0CAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,OAAM,QAAhC;AACQ,qDAAU,KAAKvC,KAAL,CAAWsC,sBAD7B;AAAA;AAAA;AATJ;AAhBJ;AADJ;AADJ;AAPJ;AADJ,aADJ;AA8CH;;;;;;AAGL;;;IACM6B,oB;;;AACF,kCAAYnE,KAAZ,EAAmB;AAAA;;AAAA,2IACTA,KADS;AAElB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,IAAG,mBAAR,EAA4B,WAAU,4CAAtC;AACI,8CAAC,iBAAD,OADJ;AAEI,8CAAC,kBAAD;AAFJ,aADJ;AAMH;;;;;;AAGL;;;IACMoE,iB;;;AACF,+BAAYpE,KAAZ,EAAmB;AAAA;;AAAA,qIACTA,KADS;AAElB;;;;iCAEQ;AACL,mBACI;AAAA;AAAA;AACI;AAAA;AAAA,sBAAI,WAAU,kBAAd;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA,sBAAK,WAAU,6CAAf;AACI;AAAA;AAAA,0BAAK,WAAU,oCAAf;AACI;AAAA;AAAA,8BAAO,WAAU,YAAjB;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA,8BAAO,WAAU,YAAjB;AAAA;AAAA,yBAFJ;AAGI;AAAA;AAAA,8BAAO,WAAU,YAAjB;AAAA;AAAA;AAHJ,qBADJ;AAMI;AAAA;AAAA,0BAAK,WAAU,oBAAf;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA;AAAA;AAAA,yBAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAHJ;AANJ,iBAFJ;AAeI;AAAA;AAAA,sBAAK,WAAU,6CAAf;AACI;AAAA;AAAA,0BAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC,EAA0C,WAAU,MAApD;AAAA;AAAA,qBADJ;AAEI;AAAA;AAAA,0BAAQ,aAAR,EAAgB,OAAM,SAAtB,EAAgC,MAAK,IAArC,EAA0C,WAAU,MAApD;AAAA;AAAA,qBAFJ;AAGI;AAAA;AAAA,0BAAQ,aAAR,EAAgB,OAAM,QAAtB,EAA+B,MAAK,IAApC;AAAA;AAAA;AAHJ;AAfJ,aADJ;AAuBH;;;;;;IAGCqE,kB;;;AACF,gCAAYrE,KAAZ,EAAmB;AAAA;;AAAA,uIACTA,KADS;AAElB;;;;iCAEQ;AACL;AACA,mBACI;AAAA;AAAA,kBAAK,IAAG,qBAAR;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,qBADJ;AAEI;AAAA;AAAA;AAAA;AAAA,qBAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAHJ;AAFJ,aADJ;AAUH;;;;;;kBAGUD,W","file":"memorandums.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../loading\";\nimport settings from \"../../../settings\";\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    Collapse,\n    ListGroup,\n    ListGroupItem,\n} from \"reactstrap\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowTitle,\n    SectionRowContent,\n    SectionFooter,\n} from \"../../../components/section\";\n\nimport {\n    MemorandumFormModal,\n    DeleteMemorandumModal,\n} from \"../modals\";\n\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query : `\n        {\n            institution(id: ${id}) {\n                id\n                name\n                memorandum_set {\n                    id\n                    category\n                    memorandum_file\n                    date_effective\n                    date_expiration\n                    college_initiator\n                    linkages {\n                        code\n                    }\n                }\n            }\n        }\n       `,\n        onResponse : onResponse,\n    });\n}\n\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institution : null,\n            institutionID : props.institution.id,\n        };\n\n        this.refreshMemorandums = this.refreshMemorandums.bind(this);\n\n        //Fetch active institution details\n        fetchInstitution(props.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    refreshMemorandums() {\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.props.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            institutionID : nextProps.institution.id,\n            institution : null,\n        });\n\n        fetchInstitution(nextProps.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div id=\"institution-memorandums\" className=\"d-flex flex-column p-0 h-100\">\n                <MemorandumHead institution={ this.state.institution } refreshMemorandums={ this.refreshMemorandums }/>\n                <div className=\"d-flex h-100 p-0 flex-row\">\n                    <MemorandumBody institution={ this.state.institution }\n                                    memorandums={ this.state.institution.memorandum_set }\n                                    refreshMemorandums={ this.refreshMemorandums }/>\n                    <MemorandumDetailPane/>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addMemorandumIsShowing : false,\n        };\n\n        this.toggleAddMemorandum = this.toggleAddMemorandum.bind(this);\n    }\n\n    toggleAddMemorandum() {\n        this.setState({\n            addMemorandumIsShowing : !this.state.addMemorandumIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Memorandums</h5>\n                    <h4 className=\"page-head-title mb-0\">{ this.props.institution.name }</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" onClick={ this.toggleAddMemorandum }>Add a\n                        Memorandum</Button>\n                </div>\n\n                <MemorandumFormModal isOpen={ this.state.addMemorandumIsShowing }\n                                     institution={ this.props.institution }\n                                     toggle={ this.toggleAddMemorandum }\n                                     refresh={ this.props.refreshMemorandums }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumBody extends Component {\n    constructor(props) {\n        super(props);\n\n        //Sort by most recent\n        props.memorandums.sort((a, b) => {\n            const aTime = moment(a.date_effective);\n            const bTime = moment(b.date_effective);\n\n            if (aTime.isBefore(bTime)) {\n                return 1;\n            }\n\n            if (aTime.isAfter(bTime)) {\n                return -1;\n            }\n\n            return 0;\n        });\n\n        let agreements = [];\n        let understandings = [];\n\n        //Categorize\n        props.memorandums.forEach(memorandum => {\n            switch (memorandum.category) {\n                case \"MOA\":\n                    agreements.push(memorandum);\n                    return;\n                case \"MOU\":\n                    understandings.push(memorandum);\n                    return;\n                default:\n                    return;\n            }\n        });\n\n        this.state = {\n            showing : null,\n            agreements : agreements,\n            understandings : understandings,\n        };\n\n    }\n\n    render() {\n        return (\n            <div className=\"page-body w-100\">\n                <MemorandumListSection institution={ this.props.institution }\n                                       memorandums={ this.state.agreements }\n                                       refreshMemorandums={ this.props.refreshMemorandums }>\n                    MOA (Memorandums of Agreement)\n                </MemorandumListSection>\n\n                <MemorandumListSection institution={ this.props.institution }\n                                       memorandums={ this.state.understandings }\n                                       refreshMemorandums={ this.props.refreshMemorandums }>\n                    MOU (Memorandums of Understanding)\n                </MemorandumListSection>\n            </div>\n        );\n    }\n}\n\nclass MemorandumListSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeMemorandum : null,\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n        };\n\n        this.emptyState = this.emptyState.bind(this);\n        this.setActiveMemorandum = this.setActiveMemorandum.bind(this);\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n    }\n\n    setActiveMemorandum(memorandum) {\n        if (this.state.activeMemorandum === null) {\n            this.setState({\n                activeMemorandum : memorandum,\n            });\n\n            return;\n        }\n\n        this.setState({\n            // Collapse if clicked memorandum is already the active memorandum\n            activeMemorandum : this.state.activeMemorandum.id === memorandum.id ? null : memorandum,\n        });\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    emptyState() {\n        return (\n            <div className=\"p-5 text-center bg-light\">\n                <h5 className=\"text-secondary\">There are no { this.props.children } for this institution</h5>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.memorandums.length === 0) {\n            return (\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    { this.emptyState() }\n                </Section>\n            );\n        }\n\n        const rows = this.props.memorandums.map((memorandum, index) => {\n            let isShowing = false;\n\n            if (this.state.activeMemorandum !== null) {\n                isShowing = this.state.activeMemorandum.id === memorandum.id;\n            }\n\n            const onMemorandumRowClick = () => this.setActiveMemorandum(memorandum);\n            return <MemorandumRow isShowing={ isShowing }\n                                  memorandum={ memorandum }\n                                  onClick={ onMemorandumRowClick }\n                                  toggleDeleteMemorandum={ this.toggleDeleteMemorandum }\n                                  toggleEditMemorandum={ this.toggleEditMemorandum }\n                                  latest={ index === 0 }\n                                  key={ memorandum.id }/>;\n        });\n\n        return (\n            <div>\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    <SectionTable className=\"memorandums-accordion\">\n                        { rows }\n                    </SectionTable>\n                </Section>\n\n                <DeleteMemorandumModal isOpen={ this.state.deleteMemorandumIsShowing }\n                                       institution={ this.props.institution }\n                                       memorandum={ this.state.activeMemorandum }\n                                       toggle={ this.toggleDeleteMemorandum }\n                                       refresh={ this.props.refreshMemorandums }/>\n\n                { this.state.activeMemorandum !== null &&\n                <MemorandumFormModal edit\n                                     isOpen={ this.state.editMemorandumIsShowing }\n                                     institution={ this.props.institution }\n                                     memorandum={ this.state.activeMemorandum }\n                                     toggle={ this.toggleEditMemorandum }\n                                     refresh={ this.props.refreshMemorandums }/> }\n            </div>\n        );\n    }\n\n}\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n        };\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(memorandum.date_effective);\n        const dateExpiration = memorandum.date_expiration === null ? \"No expiration\" : formatDate(memorandum.date_expiration);\n        const collegeInitiator = memorandum.college_initiator === null ? \"No college initiator\" : memorandum.college_initiator;\n        const linkages = memorandum.linkages;\n\n        function viewMemorandum() {\n            const {shell} = require(\"electron\");\n            shell.openExternal(memorandum.memorandum_file);\n        }\n\n        let linkagesText = \"No linkages\";\n\n        if (linkages.length > 0) {\n            linkagesText = \"\";\n\n            linkages.forEach((linkage, index) => {\n                linkagesText += settings.linkages[linkage.code];\n\n                if (index + 1 !== linkages.length) {\n                    linkagesText += \", \";\n                }\n            });\n\n        }\n\n        return (\n            <div>\n                <Card>\n                    <SectionRow selectable active={ this.props.isShowing } onClick={ this.props.onClick }>\n                        { this.props.latest &&\n                        <SectionRowTitle>Latest Memorandum</SectionRowTitle>\n                        }\n                        <SectionRowContent large>Effective { dateEffective }</SectionRowContent>\n                    </SectionRow>\n                    <Collapse isOpen={ this.props.isShowing }>\n                        <CardBody className=\"p-0\">\n                            <SectionTable>\n                                <SectionRow className=\"bg-light\">\n                                    <SectionRowTitle>Date Expiration</SectionRowTitle>\n                                    <SectionRowContent large>{ dateExpiration }</SectionRowContent>\n                                </SectionRow>\n\n                                <SectionRow className=\"bg-light\">\n                                    <SectionRowTitle>College Initiator</SectionRowTitle>\n                                    <SectionRowContent large>{ collegeInitiator }</SectionRowContent>\n                                </SectionRow>\n\n                                <SectionRow className=\"bg-light\">\n                                    <SectionRowTitle>Linkages</SectionRowTitle>\n                                    <SectionRowContent large>{ linkagesText }</SectionRowContent>\n                                </SectionRow>\n\n                                <SectionRow className=\"bg-light d-flex flex-row\">\n                                    <div className=\"mr-auto\">\n                                        <Button outline size=\"sm\" color=\"success\" className=\"mr-2\"\n                                                onClick={ viewMemorandum }>\n                                            View Memorandum\n                                        </Button>\n                                        <Button outline size=\"sm\" color=\"success\"\n                                                onClick={ this.props.toggleEditMemorandum }>Edit Details</Button>\n                                    </div>\n                                    <Button outline size=\"sm\" color=\"danger\"\n                                            onClick={ this.props.toggleDeleteMemorandum }>Delete Memorandum</Button>\n                                </SectionRow>\n                            </SectionTable>\n                        </CardBody>\n                    </Collapse>\n\n                </Card>\n            </div>\n        );\n    }\n}\n\n// TODO: pass props\nclass MemorandumDetailPane extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"memorandum-detail\" className=\"p-0 h-100 page-body justify-content-center\">\n                <MemorandumDetails/>\n                <MemorandumLinkages/>\n            </div>\n        );\n    }\n}\n\n// TODO: pass props\nclass MemorandumDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <h6 className=\"text-center mt-5\">Effective June 18, 2017</h6>\n                <div className=\"d-flex flex-row justify-content-center mt-3\">\n                    <div className=\"text-right d-flex flex-column mr-3\">\n                        <small className=\"text-muted\">Memorandum Type</small>\n                        <small className=\"text-muted\">Expiration Date</small>\n                        <small className=\"text-muted\">College Initiator</small>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <small>Agreement</small>\n                        <small>June 18, 2020</small>\n                        <small>RVRCOB</small>\n                    </div>\n                </div>\n                { /* Buttons */ }\n                <div className=\"d-flex flex-row justify-content-center mt-3\">\n                    <Button outline color=\"success\" size=\"sm\" className=\"mr-2\">View</Button>\n                    <Button outline color=\"success\" size=\"sm\" className=\"mr-2\">Edit</Button>\n                    <Button outline color=\"danger\" size=\"sm\">Delete</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumLinkages extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        // TODO: const that returns <SectionRow> per linkage in the linkage set\n        return (\n            <div id=\"memorandum-linkages\">\n                <SectionTitle>Linkages</SectionTitle>\n                <ListGroup>\n                    <SectionRow>Test</SectionRow>\n                    <SectionRow>Test</SectionRow>\n                    <SectionRow>Test</SectionRow>\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nexport default Memorandums;"]}