{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/memorandums.js"],"names":["fetchInstitution","id","onResponse","query","Memorandums","props","state","institution","institutionID","activeMemorandumId","refreshMemorandums","bind","setActiveMemorandum","memorandum","setSidebarContent","onDeleteMemorandum","setState","response","data","nextProps","memorandums","agreements","mous","understandings","moas","latestMOU","latest_mou","latestMOA","latest_moa","MemorandumHead","addMemorandumIsShowing","toggleAddMemorandum","name","MemorandumBody","MemorandumListSection","deleteMemorandumIsShowing","editMemorandumIsShowing","emptyState","toggleDeleteMemorandum","toggleEditMemorandum","children","length","rows","map","index","onMemorandumRowClick","isActive","MemorandumRow","formatDate","date","format","dateEffective","date_effective","onClick","latest"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AAEA;;AASA;;AACA;;;;;;;;;;AAGA,SAASA,gBAAT,CAA0BC,EAA1B,EAA8BC,UAA9B,EAA0C;AACtC,2BAAQ;AACJC,0EAE2BF,EAF3B,+rBADI;AA2BJC,oBAAaA;AA3BT,KAAR;AA6BH;;IAGKE,W;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,yBAAc,IADL;AAETC,2BAAgBH,MAAME,WAAN,CAAkBN,EAFzB;AAGTQ,gCAAqB;AAHZ,SAAb;;AAMA,cAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,OAA1B;AACA,cAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBD,IAAzB,OAA3B;;AAEA;AACA,cAAKD,kBAAL;AAbe;AAclB;;;;4CAEmBG,U,EAAY;AAAA;;AAC5B,gBAAIA,eAAe,IAAnB,EAAyB;AACrB,qBAAKR,KAAL,CAAWS,iBAAX,CAA6B,IAA7B;AACH;;AAGD,gBAAMJ,qBAAqB,SAArBA,kBAAqB,GAAM;AAC7B,uBAAKA,kBAAL;AACH,aAFD;;AAIA,gBAAMK,qBAAqB,SAArBA,kBAAqB,GAAM;AAC7B,uBAAKC,QAAL,CAAc;AACVP,wCAAqB;AADX,iBAAd;AAGA,uBAAKC,kBAAL;AACA,uBAAKE,mBAAL,CAAyB,IAAzB;AACH,aAND;;AASA,iBAAKP,KAAL,CAAWS,iBAAX,CACI,sEAAuB,YAAYD,UAAnC;AACuB,wCAAwBE,kBAD/C;AAEuB,oCAAoBL,kBAF3C,GADJ;;AAMA,iBAAKM,QAAL,CAAc;AACVP,oCAAqBI,WAAWZ;AADtB,aAAd;AAGH;;;6CAEoB;AAAA;;AACjB,iBAAKe,QAAL,CAAc;AACVT,6BAAc;AADJ,aAAd;;AAIAP,6BAAiB,KAAKK,KAAL,CAAWE,WAAX,CAAuBN,EAAxC,EAA4C,oBAAY;AACpD,uBAAKe,QAAL,CAAc;AACVT,iCAAcU,SAASC,IAAT,CAAcX;AADlB,iBAAd;AAGH,aAJD;AAKH;;;kDAEyBY,S,EAAW;AAAA;;AACjC,gBAAI,KAAKb,KAAL,CAAWE,aAAX,KAA6BW,UAAUZ,WAAV,CAAsBN,EAAvD,EAA2D;AACvD;AACH;;AAED,iBAAKI,KAAL,CAAWS,iBAAX,CAA6B,IAA7B;;AAEA,iBAAKE,QAAL,CAAc;AACVR,+BAAgBW,UAAUZ,WAAV,CAAsBN,EAD5B;AAEVM,6BAAc,IAFJ;AAGVE,oCAAqB,IAHX,CAGgB;AAHhB,aAAd;;AAMAT,6BAAiBmB,UAAUZ,WAAV,CAAsBN,EAAvC,EAA2C,oBAAY;AACnD,uBAAKe,QAAL,CAAc;AACVT,iCAAcU,SAASC,IAAT,CAAcX;AADlB,iBAAd;AAGH,aAJD;AAKH;;;iCAEQ;AACL,gBAAI,KAAKD,KAAL,CAAWC,WAAX,KAA2B,IAA/B,EAAqC;AACjC,uBAAO,sDAAP;AACH;;AAED,gBAAMa,cAAc;AAChBC,4BAAa,KAAKf,KAAL,CAAWC,WAAX,CAAuBe,IADpB;AAEhBC,gCAAiB,KAAKjB,KAAL,CAAWC,WAAX,CAAuBiB,IAFxB;AAGhBC,2BAAY,KAAKnB,KAAL,CAAWC,WAAX,CAAuBmB,UAHnB;AAIhBC,2BAAY,KAAKrB,KAAL,CAAWC,WAAX,CAAuBqB;AAJnB,aAApB;;AAOA,mBACI;AAAA;AAAA,kBAAK,WAAU,8BAAf;AACI,8CAAC,cAAD,IAAgB,aAAa,KAAKtB,KAAL,CAAWC,WAAxC,EAAqD,oBAAoB,KAAKG,kBAA9E,GADJ;AAEI,8CAAC,cAAD,IAAgB,aAAa,KAAKJ,KAAL,CAAWC,WAAxC;AACgB,iCAAaa,WAD7B;AAEgB,wCAAoB,KAAKd,KAAL,CAAWG,kBAF/C;AAGgB,yCAAqB,KAAKG,mBAH1C;AAIgB,wCAAoB,KAAKF,kBAJzC;AAKgB,uCAAmB,KAAKL,KAAL,CAAWS,iBAL9C;AAFJ,aADJ;AAWH;;;;;;IAGCe,c;;;AACF,4BAAYxB,KAAZ,EAAmB;AAAA;;AAAA,qIACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACTwB,oCAAyB;AADhB,SAAb;;AAIA,eAAKC,mBAAL,GAA2B,OAAKA,mBAAL,CAAyBpB,IAAzB,QAA3B;AAPe;AAQlB;;;;8CAEqB;AAClB,iBAAKK,QAAL,CAAc;AACVc,wCAAyB,CAAC,KAAKxB,KAAL,CAAWwB;AAD3B,aAAd;AAGH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,gDAAf;AACI;AAAA;AAAA,sBAAK,WAAU,SAAf;AACI;AAAA;AAAA,0BAAI,WAAU,qBAAd;AAAA;AAAA,qBADJ;AAEI;AAAA;AAAA,0BAAI,WAAU,sBAAd;AAAsC,6BAAKzB,KAAL,CAAWE,WAAX,CAAuByB;AAA7D;AAFJ,iBADJ;AAMI;AAAA;AAAA,sBAAK,WAAU,mBAAf;AACI;AAAA;AAAA,0BAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,OAAM,SAAhC,EAA0C,SAAS,KAAKD,mBAAxD;AAAA;AAAA;AADJ,iBANJ;AAWI,6EAAqB,QAAQ,KAAKzB,KAAL,CAAWwB,sBAAxC;AACqB,iCAAa,KAAKzB,KAAL,CAAWE,WAD7C;AAEqB,4BAAQ,KAAKwB,mBAFlC;AAGqB,6BAAS,KAAK1B,KAAL,CAAWK,kBAHzC;AAXJ,aADJ;AAkBH;;;;;;IAGCuB,c;;;AACF,4BAAY5B,KAAZ,EAAmB;AAAA;;AAAA,+HACTA,KADS;AAElB;;;;iCAGQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,iBAAf;AACI;AAAA;AAAA,sBAAK,WAAU,2BAAf;AACI;AAAA;AAAA,0BAAK,WAAU,OAAf;AACI;AAAC,iDAAD;AAAA,8BAAuB,aAAa,KAAKA,KAAL,CAAWE,WAA/C;AACuB,oDAAoB,KAAKF,KAAL,CAAWI,kBADtD;AAEuB,6CAAa,KAAKJ,KAAL,CAAWe,WAAX,CAAuBC,UAF3D;AAGuB,wCAAQ,KAAKhB,KAAL,CAAWe,WAAX,CAAuBO,SAHtD;AAIuB,qDAAqB,KAAKtB,KAAL,CAAWO,mBAJvD;AAKuB,oDAAoB,KAAKP,KAAL,CAAWK,kBALtD;AAAA;AAAA,yBADJ;AAUI;AAAC,iDAAD;AAAA,8BAAuB,aAAa,KAAKL,KAAL,CAAWE,WAA/C;AACuB,6CAAa,KAAKF,KAAL,CAAWe,WAAX,CAAuBG,cAD3D;AAEuB,wCAAQ,KAAKlB,KAAL,CAAWe,WAAX,CAAuBK,SAFtD;AAGuB,oDAAoB,KAAKpB,KAAL,CAAWI,kBAHtD;AAIuB,qDAAqB,KAAKJ,KAAL,CAAWO,mBAJvD;AAKuB,oDAAoB,KAAKP,KAAL,CAAWK,kBALtD;AAAA;AAAA;AAVJ;AADJ;AADJ,aADJ;AAyBH;;;;;;IAGCwB,qB;;;AACF,mCAAY7B,KAAZ,EAAmB;AAAA;;AAAA,mJACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACT6B,uCAA4B,KADnB;AAETC,qCAA0B;AAFjB,SAAb;;AAKA,eAAKC,UAAL,GAAkB,OAAKA,UAAL,CAAgB1B,IAAhB,QAAlB;AACA,eAAK2B,sBAAL,GAA8B,OAAKA,sBAAL,CAA4B3B,IAA5B,QAA9B;AACA,eAAK4B,oBAAL,GAA4B,OAAKA,oBAAL,CAA0B5B,IAA1B,QAA5B;AAVe;AAWlB;;;;iDAEwB;AACrB,iBAAKK,QAAL,CAAc;AACVmB,2CAA4B,CAAC,KAAK7B,KAAL,CAAW6B;AAD9B,aAAd;AAGH;;;+CAEsB;AACnB,iBAAKnB,QAAL,CAAc;AACVoB,yCAA0B,CAAC,KAAK9B,KAAL,CAAW8B;AAD5B,aAAd;AAGH;;;qCAEY;AACT,mBACI;AAAA;AAAA,kBAAK,WAAU,0BAAf;AACI;AAAA;AAAA,sBAAI,WAAU,gBAAd;AAAA;AAA6C,yBAAK/B,KAAL,CAAWmC,QAAxD;AAAA;AAAA;AADJ,aADJ;AAKH;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKnC,KAAL,CAAWe,WAAX,CAAuBqB,MAAvB,KAAkC,CAAtC,EAAyC;AACrC,uBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAe,6BAAKpC,KAAL,CAAWmC;AAA1B,qBADJ;AAEK,yBAAKH,UAAL;AAFL,iBADJ;AAMH;;AAED,gBAAMK,OAAO,KAAKrC,KAAL,CAAWe,WAAX,CAAuBuB,GAAvB,CAA2B,UAAC9B,UAAD,EAAa+B,KAAb,EAAuB;AAC3D,oBAAMC,uBAAuB,SAAvBA,oBAAuB;AAAA,2BAAM,OAAKxC,KAAL,CAAWO,mBAAX,CAA+BC,UAA/B,CAAN;AAAA,iBAA7B;;AAEA,oBAAIiC,WAAW,KAAf;;AAEA,oBAAI,OAAKzC,KAAL,CAAWI,kBAAX,KAAkC,IAAtC,EAA4C;AACxCqC,+BAAW,OAAKzC,KAAL,CAAWI,kBAAX,KAAkCI,WAAWZ,EAAxD;AACH;;AAED,uBAAO,8BAAC,aAAD,IAAe,YAAYY,UAA3B;AACe,8BAAUiC,QADzB;AAEe,6BAASD,oBAFxB;AAGe,4BAAQD,UAAU,CAHjC;AAIe,yBAAK/B,WAAWZ,EAJ/B,GAAP;AAKH,aAdY,CAAb;;AAgBA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAe,6BAAKI,KAAL,CAAWmC;AAA1B,qBADJ;AAEI;AAAA;AAAA,0BAAc,WAAU,uBAAxB;AACKE;AADL;AAFJ;AADJ,aADJ;AAUH;;;;;;IAGCK,a;;;AACF,2BAAY1C,KAAZ,EAAmB;AAAA;;AAAA,6HACTA,KADS;AAElB;;;;iCAEQ;AACL,gBAAMQ,aAAa,KAAKR,KAAL,CAAWQ,UAA9B;;AAEA,qBAASmC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,uBAAO,sBAAOA,IAAP,EAAaC,MAAb,CAAoB,IAApB,CAAP;AACH;;AAED,gBAAMC,gBAAgBH,WAAWnC,WAAWuC,cAAtB,CAAtB;AACA,mBACI;AAAA;AAAA,kBAAY,gBAAZ;AACY,6BAAS,KAAK/C,KAAL,CAAWgD,OADhC;AAEY,4BAAQ,KAAKhD,KAAL,CAAWyC,QAF/B;AAGK,qBAAKzC,KAAL,CAAWiD,MAAX,IACD;AAAA;AAAA;AAAA;AAAA,iBAJJ;AAMI;AAAA;AAAA,sBAAmB,WAAnB;AAAA;AAAoCH;AAApC;AANJ,aADJ;AAUH;;;;;;kBAGU/C,W","file":"memorandums.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../loading\";\n\nimport { Button, } from \"reactstrap\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowContent,\n    SectionRowTitle,\n} from \"../../../components/section\";\n\nimport { MemorandumFormModal } from \"../modals\";\nimport { MemorandumSidebarPane } from \"./sidebar_panes\";\n\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query : `\n                {\n                  institution(id:${id}) {\n                    id\n                    name\n                    moas {\n                      id\n                      category\n                      memorandum_file\n                      date_effective\n                      date_expiration\n                      college_initiator\n                      linkages\n                    }\n                    mous {\n                      id\n                      category\n                      memorandum_file\n                      date_effective\n                      date_expiration\n                      college_initiator\n                      linkages\n                    }\n                  }\n                }\n       `,\n        onResponse : onResponse,\n    });\n}\n\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institution : null,\n            institutionID : props.institution.id,\n            activeMemorandumId : null,\n        };\n\n        this.refreshMemorandums = this.refreshMemorandums.bind(this);\n        this.setActiveMemorandum = this.setActiveMemorandum.bind(this);\n\n        //Fetch active institution details\n        this.refreshMemorandums();\n    }\n\n    setActiveMemorandum(memorandum) {\n        if (memorandum === null) {\n            this.props.setSidebarContent(null);\n        }\n\n\n        const refreshMemorandums = () => {\n            this.refreshMemorandums();\n        };\n\n        const onDeleteMemorandum = () => {\n            this.setState({\n                activeMemorandumId : null,\n            });\n            this.refreshMemorandums();\n            this.setActiveMemorandum(null);\n        };\n\n\n        this.props.setSidebarContent(\n            <MemorandumSidebarPane memorandum={memorandum}\n                                   removeActiveMemorandum={onDeleteMemorandum}\n                                   refreshMemorandums={refreshMemorandums}/>,\n        );\n\n        this.setState({\n            activeMemorandumId : memorandum.id,\n        });\n    }\n\n    refreshMemorandums() {\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.props.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.institutionID === nextProps.institution.id) {\n            return;\n        }\n\n        this.props.setSidebarContent(null);\n\n        this.setState({\n            institutionID : nextProps.institution.id,\n            institution : null,\n            activeMemorandumId : null //Remove current active memorandum ID\n        });\n\n        fetchInstitution(nextProps.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        const memorandums = {\n            agreements : this.state.institution.mous,\n            understandings : this.state.institution.moas,\n            latestMOU : this.state.institution.latest_mou,\n            latestMOA : this.state.institution.latest_moa,\n        };\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <MemorandumHead institution={this.state.institution} refreshMemorandums={this.refreshMemorandums}/>\n                <MemorandumBody institution={this.state.institution}\n                                memorandums={memorandums}\n                                activeMemorandumId={this.state.activeMemorandumId}\n                                setActiveMemorandum={this.setActiveMemorandum}\n                                refreshMemorandums={this.refreshMemorandums}\n                                setSidebarContent={this.props.setSidebarContent}/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addMemorandumIsShowing : false,\n        };\n\n        this.toggleAddMemorandum = this.toggleAddMemorandum.bind(this);\n    }\n\n    toggleAddMemorandum() {\n        this.setState({\n            addMemorandumIsShowing : !this.state.addMemorandumIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Memorandums</h5>\n                    <h4 className=\"page-head-title mb-0\">{this.props.institution.name}</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" onClick={this.toggleAddMemorandum}>Add a\n                        Memorandum</Button>\n                </div>\n\n                <MemorandumFormModal isOpen={this.state.addMemorandumIsShowing}\n                                     institution={this.props.institution}\n                                     toggle={this.toggleAddMemorandum}\n                                     refresh={this.props.refreshMemorandums}/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div className=\"page-body w-100\">\n                <div className=\"d-flex h-100 p-0 flex-row\">\n                    <div className=\"w-100\">\n                        <MemorandumListSection institution={this.props.institution}\n                                               activeMemorandumId={this.props.activeMemorandumId}\n                                               memorandums={this.props.memorandums.agreements}\n                                               latest={this.props.memorandums.latestMOA}\n                                               setActiveMemorandum={this.props.setActiveMemorandum}\n                                               refreshMemorandums={this.props.refreshMemorandums}>\n                            MOA (Memorandums of Agreement)\n                        </MemorandumListSection>\n\n                        <MemorandumListSection institution={this.props.institution}\n                                               memorandums={this.props.memorandums.understandings}\n                                               latest={this.props.memorandums.latestMOU}\n                                               activeMemorandumId={this.props.activeMemorandumId}\n                                               setActiveMemorandum={this.props.setActiveMemorandum}\n                                               refreshMemorandums={this.props.refreshMemorandums}>\n                            MOU (Memorandums of Understanding)\n                        </MemorandumListSection>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumListSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n        };\n\n        this.emptyState = this.emptyState.bind(this);\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    emptyState() {\n        return (\n            <div className=\"p-5 text-center bg-light\">\n                <h5 className=\"text-secondary\">There are no {this.props.children} for this institution</h5>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.memorandums.length === 0) {\n            return (\n                <Section>\n                    <SectionTitle>{this.props.children}</SectionTitle>\n                    {this.emptyState()}\n                </Section>\n            );\n        }\n\n        const rows = this.props.memorandums.map((memorandum, index) => {\n            const onMemorandumRowClick = () => this.props.setActiveMemorandum(memorandum);\n\n            let isActive = false;\n\n            if (this.props.activeMemorandumId !== null) {\n                isActive = this.props.activeMemorandumId === memorandum.id;\n            }\n\n            return <MemorandumRow memorandum={memorandum}\n                                  isActive={isActive}\n                                  onClick={onMemorandumRowClick}\n                                  latest={index === 0}\n                                  key={memorandum.id}/>;\n        });\n\n        return (\n            <div>\n                <Section>\n                    <SectionTitle>{this.props.children}</SectionTitle>\n                    <SectionTable className=\"memorandums-accordion\">\n                        {rows}\n                    </SectionTable>\n                </Section>\n            </div>\n        );\n    }\n}\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(memorandum.date_effective);\n        return (\n            <SectionRow selectable\n                        onClick={this.props.onClick}\n                        active={this.props.isActive}>\n                {this.props.latest &&\n                <SectionRowTitle>Latest Memorandum</SectionRowTitle>\n                }\n                <SectionRowContent large>Effective {dateEffective}</SectionRowContent>\n            </SectionRow>\n        );\n    }\n}\n\nexport default Memorandums;"]}