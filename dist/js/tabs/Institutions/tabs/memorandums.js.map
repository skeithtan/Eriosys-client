{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/memorandums.js"],"names":["makeMemorandumsQuery","id","query","institutionIsFetched","institution","moas","undefined","Memorandums","props","state","activeMemorandumId","fetchMemorandums","bind","refreshMemorandums","setActiveMemorandum","error","setState","then","result","mous","catch","memorandum","setSidebarContent","onArchiveMemorandum","toString","memorandums","agreements","understandings","latestMOU","latest_mou","latestMOA","latest_moa","memorandumToBeAdded","toggleMemorandumToBeAdded","MemorandumHead","addMemorandumIsShowing","toggleAddMemorandum","name","localStorage","userType","MemorandumBody","MemorandumListSection","deleteMemorandumIsShowing","editMemorandumIsShowing","emptyState","toggleDeleteMemorandum","toggleEditMemorandum","children","length","rows","map","index","onMemorandumRowClick","isActive","MemorandumRow","formatDate","date","format","dateEffective","date_effective","onClick","latest"],"mappings":"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","file":"memorandums.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../components/loading\";\n\nimport { Button, } from \"reactstrap\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowContent,\n    SectionRowTitle,\n} from \"../../../components/section\";\n\nimport { MemorandumFormModal } from \"../modals\";\nimport { MemorandumSidebarPane } from \"./sidebar_panes\";\nimport ErrorState from \"../../../components/error_state\";\n\n\nfunction makeMemorandumsQuery(id) {\n    return graphql.query(`\n    {\n      institution(id:${id}) {\n        id\n        name\n        moas {\n          id\n          category\n          memorandum_file\n          date_effective\n          date_expiration\n          college_initiator\n          linkages\n        }\n        mous {\n          id\n          category\n          memorandum_file\n          date_effective\n          date_expiration\n          college_initiator\n          linkages\n        }\n        \n      }\n    }\n    `);\n}\n\nfunction institutionIsFetched(institution) {\n    return institution.moas !== undefined;\n}\n\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institution : props.institution,\n            activeMemorandumId : null,\n        };\n\n        this.fetchMemorandums = this.fetchMemorandums.bind(this);\n        this.refreshMemorandums = this.refreshMemorandums.bind(this);\n        this.setActiveMemorandum = this.setActiveMemorandum.bind(this);\n\n        this.fetchMemorandums();\n    }\n\n    fetchMemorandums(id) {\n        if (id === undefined) {\n            id = this.props.institution.id;\n        }\n\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        makeMemorandumsQuery(id)\n            .then(result => {\n                //ID from when query was made must be the same ID now\n                if (id !== this.props.institution.id) {\n                    return;\n                }\n\n                this.state.institution.moas = result.institution.moas;\n                this.state.institution.mous = result.institution.mous;\n\n                this.setState({\n                    institution : this.state.institution,\n                });\n            })\n            .catch(error => this.setState({\n                error : error,\n            }));\n    }\n\n    setActiveMemorandum(memorandum) {\n        if (memorandum === null) {\n            this.props.setSidebarContent(null);\n        }\n\n\n        const onArchiveMemorandum = () => {\n            this.props.setSidebarContent(null);\n            this.setState({\n                activeMemorandumId : null,\n            });\n            this.refreshMemorandums();\n        };\n\n\n        this.props.setSidebarContent(\n            <MemorandumSidebarPane memorandum={ memorandum }\n                                   removeActiveMemorandum={ onArchiveMemorandum }\n                                   refreshMemorandums={ this.refreshMemorandums }/>,\n        );\n\n        this.setState({\n            activeMemorandumId : memorandum.id,\n        });\n    }\n\n    refreshMemorandums() {\n        delete this.state.institution.moas;\n        delete this.state.institution.mous;\n\n        this.setState({\n            institution : this.state.institution,\n        });\n\n        this.fetchMemorandums();\n    }\n\n    componentWillReceiveProps(props) {\n        if (this.state.institution !== null &&\n            this.state.institution.id === props.institution.id) {\n            return;\n        }\n\n        this.props.setSidebarContent(null);\n\n        this.setState({\n            institution : props.institution,\n            activeMemorandumId : null //Remove current active memorandum ID\n        });\n\n        if (!institutionIsFetched(props.institution)) {\n            this.fetchMemorandums(props.institution.id);\n        }\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={ () => this.fetchMemorandums(this.state.institution.id) }>\n                    { this.state.error.toString() }\n                </ErrorState>\n            );\n        }\n\n        if (!institutionIsFetched(this.state.institution)) {\n            return <LoadingSpinner/>;\n        }\n\n        const memorandums = {\n            agreements : this.state.institution.moas,\n            understandings : this.state.institution.mous,\n            latestMOU : this.state.institution.latest_mou,\n            latestMOA : this.state.institution.latest_moa,\n        };\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <MemorandumHead institution={ this.state.institution }\n                                refreshMemorandums={ this.refreshMemorandums }\n                                memorandumToBeAdded={ this.props.memorandumToBeAdded }\n                                toggleMemorandumToBeAdded={ this.props.toggleMemorandumToBeAdded }/>\n                <MemorandumBody institution={ this.state.institution }\n                                memorandums={ memorandums }\n                                activeMemorandumId={ this.state.activeMemorandumId }\n                                setActiveMemorandum={ this.setActiveMemorandum }\n                                refreshMemorandums={ this.refreshMemorandums }\n                                setSidebarContent={ this.props.setSidebarContent }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addMemorandumIsShowing : this.props.memorandumToBeAdded,\n        };\n\n        this.toggleAddMemorandum = this.toggleAddMemorandum.bind(this);\n    }\n\n    toggleAddMemorandum() {\n        this.setState({\n            addMemorandumIsShowing : !this.state.addMemorandumIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Memorandums</h5>\n                    <h4 className=\"page-head-title mb-0\">{ this.props.institution.name }</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    { localStorage.userType !== \"program_assistant\" && <Button outline\n                                                                               size=\"sm\"\n                                                                               color=\"success\"\n                                                                               onClick={ this.toggleAddMemorandum }>Add\n                        a Memorandum</Button> }\n                </div>\n\n                <MemorandumFormModal isOpen={ this.state.addMemorandumIsShowing }\n                                     institution={ this.props.institution }\n                                     toggle={ this.toggleAddMemorandum }\n                                     refresh={ this.props.refreshMemorandums }\n                                     memorandumToBeAdded={ this.props.memorandumToBeAdded }\n                                     toggleMemorandumToBeAdded={ this.props.toggleMemorandumToBeAdded }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div className=\"page-body w-100\">\n                <div className=\"d-flex h-100 p-0 flex-row\">\n                    <div className=\"w-100\">\n                        <MemorandumListSection institution={ this.props.institution }\n                                               activeMemorandumId={ this.props.activeMemorandumId }\n                                               memorandums={ this.props.memorandums.agreements }\n                                               latest={ this.props.memorandums.latestMOA }\n                                               setActiveMemorandum={ this.props.setActiveMemorandum }\n                                               refreshMemorandums={ this.props.refreshMemorandums }>\n                            MOA (Memorandums of Agreement)\n                        </MemorandumListSection>\n\n                        <MemorandumListSection institution={ this.props.institution }\n                                               memorandums={ this.props.memorandums.understandings }\n                                               latest={ this.props.memorandums.latestMOU }\n                                               activeMemorandumId={ this.props.activeMemorandumId }\n                                               setActiveMemorandum={ this.props.setActiveMemorandum }\n                                               refreshMemorandums={ this.props.refreshMemorandums }>\n                            MOU (Memorandums of Understanding)\n                        </MemorandumListSection>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumListSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n        };\n\n        this.emptyState = this.emptyState.bind(this);\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    emptyState() {\n        return (\n            <div className=\"p-5 text-center bg-light\">\n                <h5 className=\"text-secondary\">There are no { this.props.children } for this institution</h5>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.memorandums.length === 0) {\n            return (\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    { this.emptyState() }\n                </Section>\n            );\n        }\n\n        const rows = this.props.memorandums.map((memorandum, index) => {\n            const onMemorandumRowClick = () => this.props.setActiveMemorandum(memorandum);\n\n            let isActive = false;\n\n            if (this.props.activeMemorandumId !== null) {\n                isActive = this.props.activeMemorandumId === memorandum.id;\n            }\n\n            return <MemorandumRow memorandum={ memorandum }\n                                  isActive={ isActive }\n                                  onClick={ onMemorandumRowClick }\n                                  latest={ index === 0 }\n                                  key={ memorandum.id }/>;\n        });\n\n        return (\n            <div>\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    <SectionTable className=\"memorandums-accordion\">\n                        { rows }\n                    </SectionTable>\n                </Section>\n            </div>\n        );\n    }\n}\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(memorandum.date_effective);\n        return (\n            <SectionRow selectable\n                        onClick={ this.props.onClick }\n                        active={ this.props.isActive }>\n                { this.props.latest &&\n                <SectionRowTitle>Latest Memorandum</SectionRowTitle>\n                }\n                <SectionRowContent large>Effective { dateEffective }</SectionRowContent>\n            </SectionRow>\n        );\n    }\n}\n\nexport default Memorandums;"]}