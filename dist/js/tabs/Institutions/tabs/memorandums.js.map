{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/memorandums.js"],"names":["fetchInstitution","id","onResult","query","then","Memorandums","props","state","institution","institutionID","activeMemorandumId","refreshMemorandums","bind","setActiveMemorandum","setState","result","memorandum","setSidebarContent","onDeleteMemorandum","nextProps","memorandums","agreements","moas","understandings","mous","latestMOU","latest_mou","latestMOA","latest_moa","memorandumToBeAdded","toggleMemorandumToBeAdded","MemorandumHead","addMemorandumIsShowing","toggleAddMemorandum","name","MemorandumBody","MemorandumListSection","deleteMemorandumIsShowing","editMemorandumIsShowing","emptyState","toggleDeleteMemorandum","toggleEditMemorandum","children","length","rows","map","index","onMemorandumRowClick","isActive","MemorandumRow","formatDate","date","format","dateEffective","date_effective","onClick","latest"],"mappings":"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","file":"memorandums.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../components/loading\";\n\nimport { Button, } from \"reactstrap\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowContent,\n    SectionRowTitle,\n} from \"../../../components/section\";\n\nimport { MemorandumFormModal } from \"../modals\";\nimport { MemorandumSidebarPane } from \"./sidebar_panes\";\n\n\nfunction fetchInstitution(id, onResult) {\n    graphql.query(`\n    {\n      institution(id:${id}) {\n        id\n        name\n        moas {\n          id\n          category\n          memorandum_file\n          date_effective\n          date_expiration\n          college_initiator\n          linkages\n        }\n        mous {\n          id\n          category\n          memorandum_file\n          date_effective\n          date_expiration\n          college_initiator\n          linkages\n        }\n        \n      }\n    }\n    `).then(onResult);\n}\n\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institution : null,\n            institutionID : props.institution.id,\n            activeMemorandumId : null,\n        };\n\n        this.refreshMemorandums = this.refreshMemorandums.bind(this);\n        this.setActiveMemorandum = this.setActiveMemorandum.bind(this);\n\n        //Fetch active institution details\n        fetchInstitution(this.props.institution.id, result => {\n            this.setState({\n                institution : result.institution,\n            });\n        });\n    }\n\n    setActiveMemorandum(memorandum) {\n        if (memorandum === null) {\n            this.props.setSidebarContent(null);\n        }\n\n\n        const onDeleteMemorandum = () => {\n            this.setState({\n                activeMemorandumId : null,\n            });\n            this.refreshMemorandums();\n            this.props.setSidebarContent(null);\n        };\n\n\n        this.props.setSidebarContent(\n            <MemorandumSidebarPane memorandum={ memorandum }\n                                   removeActiveMemorandum={ onDeleteMemorandum }\n                                   refreshMemorandums={ this.refreshMemorandums }/>,\n        );\n\n        this.setState({\n            activeMemorandumId : memorandum.id,\n        });\n    }\n\n    refreshMemorandums() {\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.props.institution.id, result => {\n            this.setState({\n                institution : result.institution,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.institutionID === nextProps.institution.id) {\n            return;\n        }\n\n        this.props.setSidebarContent(null);\n\n        this.setState({\n            institutionID : nextProps.institution.id,\n            institution : null,\n            activeMemorandumId : null //Remove current active memorandum ID\n        });\n\n        fetchInstitution(nextProps.institution.id, result => {\n            this.setState({\n                institution : result.institution,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        const memorandums = {\n            agreements : this.state.institution.moas,\n            understandings : this.state.institution.mous,\n            latestMOU : this.state.institution.latest_mou,\n            latestMOA : this.state.institution.latest_moa,\n        };\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <MemorandumHead institution={ this.state.institution }\n                                refreshMemorandums={ this.refreshMemorandums }\n                                memorandumToBeAdded={ this.props.memorandumToBeAdded }\n                                toggleMemorandumToBeAdded={ this.props.toggleMemorandumToBeAdded }/>\n                <MemorandumBody institution={ this.state.institution }\n                                memorandums={ memorandums }\n                                activeMemorandumId={ this.state.activeMemorandumId }\n                                setActiveMemorandum={ this.setActiveMemorandum }\n                                refreshMemorandums={ this.refreshMemorandums }\n                                setSidebarContent={ this.props.setSidebarContent }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumHead extends Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.memorandumToBeAdded) {\n            this.state = {\n                addMemorandumIsShowing : true,\n            };\n        } else {\n            this.state = {\n                addMemorandumIsShowing : false,\n            };\n        }\n\n        this.toggleAddMemorandum = this.toggleAddMemorandum.bind(this);\n    }\n\n    toggleAddMemorandum() {\n        this.setState({\n            addMemorandumIsShowing : !this.state.addMemorandumIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Memorandums</h5>\n                    <h4 className=\"page-head-title mb-0\">{ this.props.institution.name }</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" onClick={ this.toggleAddMemorandum }>Add a\n                        Memorandum</Button>\n                </div>\n\n                <MemorandumFormModal isOpen={ this.state.addMemorandumIsShowing }\n                                     institution={ this.props.institution }\n                                     toggle={ this.toggleAddMemorandum }\n                                     refresh={ this.props.refreshMemorandums }\n                                     toggleMemorandumToBeAdded={ this.props.toggleMemorandumToBeAdded }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div className=\"page-body w-100\">\n                <div className=\"d-flex h-100 p-0 flex-row\">\n                    <div className=\"w-100\">\n                        <MemorandumListSection institution={ this.props.institution }\n                                               activeMemorandumId={ this.props.activeMemorandumId }\n                                               memorandums={ this.props.memorandums.agreements }\n                                               latest={ this.props.memorandums.latestMOA }\n                                               setActiveMemorandum={ this.props.setActiveMemorandum }\n                                               refreshMemorandums={ this.props.refreshMemorandums }>\n                            MOA (Memorandums of Agreement)\n                        </MemorandumListSection>\n\n                        <MemorandumListSection institution={ this.props.institution }\n                                               memorandums={ this.props.memorandums.understandings }\n                                               latest={ this.props.memorandums.latestMOU }\n                                               activeMemorandumId={ this.props.activeMemorandumId }\n                                               setActiveMemorandum={ this.props.setActiveMemorandum }\n                                               refreshMemorandums={ this.props.refreshMemorandums }>\n                            MOU (Memorandums of Understanding)\n                        </MemorandumListSection>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumListSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n        };\n\n        this.emptyState = this.emptyState.bind(this);\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    emptyState() {\n        return (\n            <div className=\"p-5 text-center bg-light\">\n                <h5 className=\"text-secondary\">There are no { this.props.children } for this institution</h5>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.memorandums.length === 0) {\n            return (\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    { this.emptyState() }\n                </Section>\n            );\n        }\n\n        const rows = this.props.memorandums.map((memorandum, index) => {\n            const onMemorandumRowClick = () => this.props.setActiveMemorandum(memorandum);\n\n            let isActive = false;\n\n            if (this.props.activeMemorandumId !== null) {\n                isActive = this.props.activeMemorandumId === memorandum.id;\n            }\n\n            return <MemorandumRow memorandum={ memorandum }\n                                  isActive={ isActive }\n                                  onClick={ onMemorandumRowClick }\n                                  latest={ index === 0 }\n                                  key={ memorandum.id }/>;\n        });\n\n        return (\n            <div>\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    <SectionTable className=\"memorandums-accordion\">\n                        { rows }\n                    </SectionTable>\n                </Section>\n            </div>\n        );\n    }\n}\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(memorandum.date_effective);\n        return (\n            <SectionRow selectable\n                        onClick={ this.props.onClick }\n                        active={ this.props.isActive }>\n                { this.props.latest &&\n                <SectionRowTitle>Latest Memorandum</SectionRowTitle>\n                }\n                <SectionRowContent large>Effective { dateEffective }</SectionRowContent>\n            </SectionRow>\n        );\n    }\n}\n\nexport default Memorandums;"]}