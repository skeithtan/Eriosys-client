{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/memorandums.js"],"names":["fetchInstitution","id","onResponse","query","Memorandums","props","state","institution","institutionID","refreshMemorandums","bind","setState","response","data","nextProps","memorandum_set","MemorandumHead","addMemorandumIsShowing","toggleAddMemorandum","name","MemorandumBody","memorandums","sort","a","b","aTime","date_effective","bTime","isBefore","isAfter","agreements","understandings","forEach","memorandum","category","push","activeMemorandum","showing","setActiveMemorandum","MemorandumListSection","deleteMemorandumIsShowing","editMemorandumIsShowing","emptyState","toggleDeleteMemorandum","toggleEditMemorandum","children","length","rows","map","index","onMemorandumRowClick","isActive","MemorandumRow","formatDate","date","format","dateEffective","onClick","MemorandumDetailPane","linkages","MemorandumDetails","type","expiryDate","date_expiration","college","college_initiator","MemorandumLinkages","linkage","code","console","log"],"mappings":"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","file":"memorandums.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../loading\";\nimport settings from \"../../../settings\";\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    Collapse,\n    ListGroup,\n    ListGroupItem,\n} from \"reactstrap\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowTitle,\n    SectionRowContent,\n    SectionFooter,\n} from \"../../../components/section\";\n\nimport {\n    MemorandumFormModal,\n    DeleteMemorandumModal,\n} from \"../modals\";\n\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query : `\n        {\n            institution(id: ${id}) {\n                id\n                name\n                memorandum_set {\n                    id\n                    category\n                    memorandum_file\n                    date_effective\n                    date_expiration\n                    college_initiator\n                    linkages {\n                        code\n                    }\n                }\n            }\n        }\n       `,\n        onResponse : onResponse,\n    });\n}\n\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institution : null,\n            institutionID : props.institution.id,\n        };\n\n        this.refreshMemorandums = this.refreshMemorandums.bind(this);\n\n        //Fetch active institution details\n        fetchInstitution(props.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    refreshMemorandums() {\n        this.setState({\n            institution : null,\n        });\n\n        fetchInstitution(this.props.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            institutionID : nextProps.institution.id,\n            institution : null,\n        });\n\n        fetchInstitution(nextProps.institution.id, response => {\n            this.setState({\n                institution : response.data.institution,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div id=\"institution-memorandums\" className=\"d-flex flex-column p-0 h-100\">\n                <MemorandumHead institution={ this.state.institution } refreshMemorandums={ this.refreshMemorandums }/>\n                <MemorandumBody institution={ this.state.institution }\n                                memorandums={ this.state.institution.memorandum_set }\n                                refreshMemorandums={ this.refreshMemorandums }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addMemorandumIsShowing : false,\n        };\n\n        this.toggleAddMemorandum = this.toggleAddMemorandum.bind(this);\n    }\n\n    toggleAddMemorandum() {\n        this.setState({\n            addMemorandumIsShowing : !this.state.addMemorandumIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Memorandums</h5>\n                    <h4 className=\"page-head-title mb-0\">{ this.props.institution.name }</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" onClick={ this.toggleAddMemorandum }>Add a\n                        Memorandum</Button>\n                </div>\n\n                <MemorandumFormModal isOpen={ this.state.addMemorandumIsShowing }\n                                     institution={ this.props.institution }\n                                     toggle={ this.toggleAddMemorandum }\n                                     refresh={ this.props.refreshMemorandums }/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumBody extends Component {\n    constructor(props) {\n        super(props);\n\n        //Sort by most recent\n        props.memorandums.sort((a, b) => {\n            const aTime = moment(a.date_effective);\n            const bTime = moment(b.date_effective);\n\n            if (aTime.isBefore(bTime)) {\n                return 1;\n            }\n\n            if (aTime.isAfter(bTime)) {\n                return -1;\n            }\n\n            return 0;\n        });\n\n        let agreements = [];\n        let understandings = [];\n\n        //Categorize\n        props.memorandums.forEach(memorandum => {\n            switch (memorandum.category) {\n                case \"MOA\":\n                    agreements.push(memorandum);\n                    return;\n                case \"MOU\":\n                    understandings.push(memorandum);\n                    return;\n                default:\n                    return;\n            }\n        });\n\n        this.state = {\n            activeMemorandum : null,\n            showing : null,\n            agreements : agreements,\n            understandings : understandings,\n        };\n\n        this.setActiveMemorandum = this.setActiveMemorandum.bind(this);\n    }\n\n    setActiveMemorandum(memorandum) {\n        this.setState({\n            activeMemorandum : memorandum,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-body w-100\">\n                <div className=\"d-flex h-100 p-0 flex-row\">\n                    <div className=\"w-100\">\n                        <MemorandumListSection institution={ this.props.institution }\n                                               activeMemorandum={ this.state.activeMemorandum }\n                                               memorandums={ this.state.agreements }\n                                               setActiveMemorandum={ this.setActiveMemorandum }\n                                               refreshMemorandums={ this.props.refreshMemorandums }>\n                            MOA (Memorandums of Agreement)\n                        </MemorandumListSection>\n\n                        <MemorandumListSection institution={ this.props.institution }\n                                               memorandums={ this.state.understandings }\n                                               activeMemorandum={ this.state.activeMemorandum }\n                                               setActiveMemorandum={ this.setActiveMemorandum }\n                                               refreshMemorandums={ this.props.refreshMemorandums }>\n                            MOU (Memorandums of Understanding)\n                        </MemorandumListSection>\n                    </div>\n                    { this.state.activeMemorandum !== null &&\n                    <MemorandumDetailPane activeMemorandum={ this.state.activeMemorandum }\n                                          institution={ this.props.institution }\n                                          refreshMemorandums={ this.props.refreshMemorandums }/> }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumListSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n        };\n\n        this.emptyState = this.emptyState.bind(this);\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    emptyState() {\n        return (\n            <div className=\"p-5 text-center bg-light\">\n                <h5 className=\"text-secondary\">There are no { this.props.children } for this institution</h5>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.memorandums.length === 0) {\n            return (\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    { this.emptyState() }\n                </Section>\n            );\n        }\n\n        const rows = this.props.memorandums.map((memorandum, index) => {\n            const onMemorandumRowClick = () => this.props.setActiveMemorandum(memorandum);\n\n            let isActive = false;\n\n            if (this.props.activeMemorandum !== null) {\n                isActive = this.props.activeMemorandum.id === memorandum.id;\n            }\n\n            return <MemorandumRow memorandum={ memorandum }\n                                  isActive={ isActive }\n                                  onClick={ onMemorandumRowClick }\n                                  latest={ index === 0 }\n                                  key={ memorandum.id }/>;\n        });\n\n        return (\n            <div>\n                <Section>\n                    <SectionTitle>{ this.props.children }</SectionTitle>\n                    <SectionTable className=\"memorandums-accordion\">\n                        <ListGroup>\n                            { rows }\n                        </ListGroup>\n                    </SectionTable>\n                </Section>\n            </div>\n        );\n    }\n}\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(memorandum.date_effective);\n        return (\n            <SectionRow onClick={ this.props.onClick }\n                        active={ this.props.isActive }>Effective { dateEffective }</SectionRow>\n        );\n    }\n}\n\nclass MemorandumDetailPane extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteMemorandumIsShowing : false,\n            editMemorandumIsShowing : false,\n        };\n\n        this.toggleDeleteMemorandum = this.toggleDeleteMemorandum.bind(this);\n        this.toggleEditMemorandum = this.toggleEditMemorandum.bind(this);\n    }\n\n    toggleDeleteMemorandum() {\n        this.setState({\n            deleteMemorandumIsShowing : !this.state.deleteMemorandumIsShowing,\n        });\n    }\n\n    toggleEditMemorandum() {\n        this.setState({\n            editMemorandumIsShowing : !this.state.editMemorandumIsShowing,\n        });\n    }\n\n    render() {\n        const memorandum = this.props.activeMemorandum;\n        return (\n            <div id=\"memorandum-detail\" className=\"p-0 h-100 page-body justify-content-center\">\n                <MemorandumDetails memorandum={ memorandum }\n                                   toggleDeleteMemorandum={ this.toggleDeleteMemorandum }\n                                   toggleEditMemorandum={ this.toggleEditMemorandum }/>\n                <MemorandumLinkages linkages={ memorandum.linkages }/>\n\n                { this.state.activeMemorandum !== null &&\n                <DeleteMemorandumModal isOpen={ this.state.deleteMemorandumIsShowing }\n                                       institution={ this.props.institution }\n                                       memorandum={ memorandum }\n                                       toggle={ this.toggleDeleteMemorandum }\n                                       refresh={ this.props.refreshMemorandums }/> }\n\n                { this.state.activeMemorandum !== null &&\n                <MemorandumFormModal edit\n                                     isOpen={ this.state.editMemorandumIsShowing }\n                                     institution={ this.props.institution }\n                                     memorandum={ memorandum }\n                                     toggle={ this.toggleEditMemorandum }\n                                     refresh={ this.props.refreshMemorandums }/> }\n            </div>\n        );\n    }\n}\n\nclass MemorandumDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        function formatDate(date) {\n            return moment(date).format(\"LL\");\n        }\n\n        const dateEffective = formatDate(this.props.memorandum.date_effective);\n        const type = this.props.memorandum.category === \"A\" ? \"Agreement\" : \"Understanding\";\n        const expiryDate = this.props.memorandum.date_expiration === null ? \"None\" : formatDate(this.props.memorandum.date_expiration);\n        const college = this.props.memorandum.college_initiator === null ? \"None\" : this.props.memorandum.college_initiator;\n\n        return (\n            <div>\n                <h6 className=\"text-center mt-5\">Effective { dateEffective }</h6>\n                <div className=\"d-flex flex-row justify-content-center mt-3\">\n                    <div className=\"text-right d-flex flex-column mr-3\">\n                        <small className=\"text-muted\">Memorandum Type</small>\n                        <small className=\"text-muted\">Expiration Date</small>\n                        <small className=\"text-muted\">College Initiator</small>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <small>{ type }</small>\n                        <small>{ expiryDate }</small>\n                        <small>{ college }</small>\n                    </div>\n                </div>\n                { /* Buttons */ }\n                <div className=\"d-flex flex-row justify-content-center mt-3\">\n                    <Button outline color=\"success\" size=\"sm\" className=\"mr-2\">View</Button>\n                    <Button outline color=\"success\" size=\"sm\" className=\"mr-2\"\n                            onClick={ this.props.toggleEditMemorandum }>Edit</Button>\n                    <Button outline color=\"danger\" size=\"sm\"\n                            onClick={ this.props.toggleDeleteMemorandum }>Delete</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MemorandumLinkages extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const rows = this.props.linkages.map(linkage => {\n            return (\n                <SectionRow>{ settings.linkages[linkage.code] }</SectionRow>\n            );\n        });\n\n        console.log(this.props.linkages);\n        return (\n            <div id=\"memorandum-linkages\">\n                <SectionTitle>Linkages</SectionTitle>\n                <ListGroup>\n                    { rows }\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nexport default Memorandums;"]}