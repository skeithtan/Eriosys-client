{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/memorandums.js"],"names":["fetchInstitution","id","onResponse","query","Memorandums","props","state","institution","institutionID","refreshMemorandums","bind","setState","response","data","nextProps","memorandumSet","MemorandumHead","addMemorandumIsShowing","toggleAddMemorandum","name","MemorandumBody","memorandums","forEach","memorandum","versionDate","dateEffective","dateExpiration","sort","a","b","aTime","bTime","isBefore","isAfter","agreements","understandings","category","push","showing","MemorandumListSection","activeMemorandum","emptyState","setActiveMemorandum","console","log","children","length","rows","map","isShowing","onMemorandumRowClick","MemorandumRow","formatDate","date","format","collegeInitiator","linkages","memorandumlinkageSet","linkagesText","linkageCode","index","linkage","onClick"],"mappings":"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","file":"memorandums.js","sourcesContent":["import React, {Component} from \"react\";\nimport moment from \"moment\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../loading\";\nimport settings from \"../../../settings\";\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    Collapse,\n} from \"reactstrap\";\n\nimport {\n    Section,\n    SectionTitle,\n    SectionTable,\n    SectionRow,\n    SectionRowTitle,\n    SectionRowContent,\n    SectionFooter,\n} from \"../../../components/section\";\n\nimport {\n    AddMemorandumModal,\n} from \"../modals\";\n\nfunction fetchInstitution(id, onResponse) {\n    graphql({\n        query: `\n        {\n            institution(id: ${id}) {\n                id\n                name\n                memorandumSet {\n                    id\n                    category\n                    memorandumFile\n                    dateEffective\n                    dateExpiration\n                    collegeInitiator\n                    memorandumlinkageSet {\n                        linkage\n                    }\n                }\n            }\n        }\n       `,\n        onResponse: onResponse,\n    });\n}\n\n\nclass Memorandums extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institution: null,\n            institutionID: props.institution.id,\n        };\n\n        this.refreshMemorandums = this.refreshMemorandums.bind(this);\n\n        //Fetch active institution details\n        fetchInstitution(props.institution.id, response => {\n            this.setState({\n                institution: response.data.institution,\n            });\n        });\n    }\n\n    refreshMemorandums() {\n        this.setState({\n            institution: null,\n        });\n\n        fetchInstitution(this.props.institution.id, response => {\n            this.setState({\n                institution: response.data.institution,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            institutionID: nextProps.institution.id,\n            institution: null,\n        });\n\n        fetchInstitution(nextProps.institution.id, response => {\n            this.setState({\n                institution: response.data.institution,\n            });\n        });\n    }\n\n    render() {\n        if (this.state.institution === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div id=\"institution-memorandums\" className=\"d-flex flex-column p-0 h-100\">\n                <MemorandumHead institution={this.state.institution} refreshMemorandums={this.refreshMemorandums}/>\n                <MemorandumBody memorandums={this.state.institution.memorandumSet}/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumHead extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addMemorandumIsShowing: false,\n        };\n\n        this.toggleAddMemorandum = this.toggleAddMemorandum.bind(this);\n    }\n\n    toggleAddMemorandum() {\n        this.setState({\n            addMemorandumIsShowing: !this.state.addMemorandumIsShowing,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Memorandums</h5>\n                    <h4 className=\"page-head-title mb-0\">{this.props.institution.name}</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\" onClick={this.toggleAddMemorandum}>Add a Memorandum</Button>\n                </div>\n\n                <AddMemorandumModal isOpen={this.state.addMemorandumIsShowing}\n                                    institution={this.props.institution}\n                                    toggle={this.toggleAddMemorandum}\n                                    refresh={this.props.refreshMemorandums}/>\n            </div>\n        );\n    }\n}\n\nclass MemorandumBody extends Component {\n    constructor(props) {\n        super(props);\n\n        //Parse dates\n        props.memorandums.forEach(memorandum => {\n            memorandum.versionDate = moment(memorandum.versionDate);\n            memorandum.dateEffective = moment(memorandum.dateEffective);\n            memorandum.dateExpiration = moment(memorandum.dateExpiration);\n        });\n\n        //Sort by most recent\n        props.memorandums.sort((a, b) => {\n            const aTime = a.dateEffective;\n            const bTime = b.dateEffective;\n\n            if (aTime.isBefore(bTime)) {\n                return 1;\n            }\n\n            if (aTime.isAfter(bTime)) {\n                return -1;\n            }\n\n            return 0;\n        });\n\n        let agreements = [];\n        let understandings = [];\n\n        //Categorize\n        props.memorandums.forEach(memorandum => {\n            switch (memorandum.category) {\n                case \"MOA\":\n                    agreements.push(memorandum);\n                    return;\n                case \"MOU\":\n                    understandings.push(memorandum);\n                    return;\n                default:\n                    return;\n            }\n        });\n\n        this.state = {\n            showing: null,\n            agreements: agreements,\n            understandings: understandings,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"page-body\">\n                <MemorandumListSection memorandums={this.state.agreements}>\n                    Memorandums of Agreement\n                </MemorandumListSection>\n\n                <MemorandumListSection memorandums={this.state.understandings}>\n                    Memorandums of Understanding\n                </MemorandumListSection>\n            </div>\n        );\n    }\n}\n\nclass MemorandumListSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeMemorandum: null,\n        };\n\n        this.emptyState = this.emptyState.bind(this);\n        this.setActiveMemorandum = this.setActiveMemorandum.bind(this);\n    }\n\n    setActiveMemorandum(memorandum) {\n        console.log(memorandum);\n        if (this.state.activeMemorandum === null) {\n            this.setState({\n                activeMemorandum: memorandum,\n            });\n\n            return;\n        }\n\n        this.setState({\n            // Collapse if clicked memorandum is already the active memorandum\n            activeMemorandum: this.state.activeMemorandum.id === memorandum.id ? null : memorandum,\n        });\n    }\n\n    emptyState() {\n        return (\n            <div className=\"p-5 text-center bg-light\">\n                <h5 className=\"text-secondary\">There are no {this.props.children} for this institution</h5>\n            </div>\n        );\n    }\n\n    render() {\n\n        if (this.props.memorandums.length === 0) {\n            return (\n                <Section>\n                    <SectionTitle>{this.props.children}</SectionTitle>\n                    {this.emptyState()}\n                </Section>\n            );\n        }\n\n        const rows = this.props.memorandums.map(memorandum => {\n            let isShowing = false;\n\n            if (this.state.activeMemorandum !== null) {\n                isShowing = this.state.activeMemorandum.id === memorandum.id;\n            }\n\n            const onMemorandumRowClick = () => this.setActiveMemorandum(memorandum);\n            return <MemorandumRow isShowing={isShowing} memorandum={memorandum} onClick={onMemorandumRowClick}\n                                  key={memorandum.id}/>;\n        });\n\n        return (\n            <Section>\n                <SectionTitle>{this.props.children}</SectionTitle>\n                <SectionTable className=\"memorandums-accordion\">\n                    {rows}\n                </SectionTable>\n                <SectionFooter>Select a memorandum to see its details</SectionFooter>\n            </Section>\n        );\n    }\n\n}\n\n\nclass MemorandumRow extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const memorandum = this.props.memorandum;\n\n        function formatDate(date) {\n            return date.format(\"LL\");\n        }\n\n        const dateEffective = formatDate(memorandum.dateEffective);\n        const dateExpiration = memorandum.dateExpiration === null ? \"No expiration\" : formatDate(memorandum.dateExpiration);\n        const collegeInitiator = memorandum.collegeInitiator === null ? \"No college initiator\" : memorandum.collegeInitiator;\n        const linkages = memorandum.memorandumlinkageSet;\n\n        let linkagesText = \"No linkages\";\n\n        if (linkages.length > 0) {\n            linkagesText = \"\";\n\n            linkages.forEach((linkageCode, index) => {\n                linkagesText += settings.linkages[linkageCode.linkage];\n\n                if (index + 1 !== linkages.length) {\n                    linkagesText += \", \";\n                }\n            });\n\n        }\n\n        return (\n            <Card>\n                <SectionRow selectable active={this.props.isShowing} onClick={this.props.onClick}>\n                    <SectionRowContent large>Effective {dateEffective}</SectionRowContent>\n                </SectionRow>\n\n                <Collapse isOpen={this.props.isShowing}>\n                    <CardBody className=\"p-0\">\n                        <SectionTable>\n                            <SectionRow className=\"bg-light\">\n                                <SectionRowTitle>Date Expiration</SectionRowTitle>\n                                <SectionRowContent large>{dateExpiration}</SectionRowContent>\n                            </SectionRow>\n\n                            <SectionRow className=\"bg-light\">\n                                <SectionRowTitle>College Initiator</SectionRowTitle>\n                                <SectionRowContent large>{collegeInitiator}</SectionRowContent>\n                            </SectionRow>\n\n                            <SectionRow className=\"bg-light\">\n                                <SectionRowTitle>Linkages</SectionRowTitle>\n                                <SectionRowContent large>{linkagesText}</SectionRowContent>\n                            </SectionRow>\n\n                            <SectionRow className=\"bg-light d-flex flex-row\">\n                                <div className=\"mr-auto\">\n                                    <Button outline size=\"sm\" color=\"success\" className=\"mr-2\">View Memorandum</Button>\n                                    <Button outline size=\"sm\" color=\"success\">Edit Details</Button>\n                                </div>\n                                <Button outline size=\"sm\" color=\"danger\">Delete Memorandum</Button>\n                            </SectionRow>\n                        </SectionTable>\n                    </CardBody>\n                </Collapse>\n            </Card>\n        );\n    }\n}\n\n\nexport default Memorandums;"]}