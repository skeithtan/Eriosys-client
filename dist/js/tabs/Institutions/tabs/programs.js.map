{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/programs.js"],"names":["fetchYears","onResult","query","then","fetchPrograms","institutionID","year","Programs","props","state","institution","id","yearList","activeYear","programList","activeProgram","setActiveYear","bind","setActiveProgram","refreshPrograms","result","academic_years","map","academicYear","academic_year_start","length","setState","program","setSidebarContent","outbound_programs","nextProps","ProgramsHead","years","index","name","ProgramsTable","emptyState","programs","currentProgram","setCurrentProgram","ProgramsListSection","rows","isActive","children"],"mappings":"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","file":"programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport {\n    Button,\n    Input,\n} from \"reactstrap\";\nimport {\n    Section,\n    SectionRow,\n    SectionRowContent,\n    SectionTable,\n    SectionTitle,\n} from \"../../../components/section\";\nimport { ProgramSidebarPane } from \"./sidebar_panes\";\n\n\nfunction fetchYears(onResult) {\n    graphql.query(`\n    {\n        academic_years {\n            academic_year_start\n        }\n    }\n    `).then(onResult);\n}\n\nfunction fetchPrograms(institutionID, year, onResult) {\n    graphql.query(`\n    {\n        outbound_programs(institution:${institutionID}, year:${year}) {\n            id\n            name\n            linkage {\n                name\n            }\n            academic_year {\n                academic_year_start\n            }\n            study_fields\n        }\n    }\n    `).then(onResult);\n}\n\nclass Programs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institutionID : props.institution.id,\n            yearList : null,\n            activeYear : null,\n            programList : null,\n            activeProgram : null,\n        };\n\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.setActiveProgram = this.setActiveProgram.bind(this);\n        this.refreshPrograms = this.refreshPrograms.bind(this);\n\n        fetchYears(result => {\n            const yearList = result.academic_years.map(academicYear => academicYear.academic_year_start);\n\n            if (yearList.length === 0) {\n                this.setState({\n                    yearList : [],\n                });\n\n                return;\n            }\n\n            const activeYear = yearList[0];\n\n            this.setState({\n                yearList : yearList,\n                activeYear : activeYear,\n            });\n\n            this.refreshPrograms(activeYear);\n        });\n\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year,\n            activeProgram : null,\n        });\n    }\n\n    setActiveProgram(program) {\n        if (program === null) {\n            this.props.setSidebarContent(null);\n        }\n\n        this.props.setSidebarContent(\n            <ProgramSidebarPane program={program}/>,\n        );\n\n        this.setState({\n            activeProgram : program,\n        });\n    }\n\n    // There might be a need to check for the activeYear\n    refreshPrograms(year) {\n        fetchPrograms(this.state.institutionID, year, result => {\n            this.setState({\n                programList : result.outbound_programs,\n            });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.institutionID === nextProps.institution.id) {\n            return;\n        }\n\n        this.props.setSidebarContent(null);\n\n        this.setState({\n            institutionID : nextProps.institution.id,\n            programList : null,\n        });\n\n        this.refreshPrograms(this.state.activeYear);\n    }\n\n    render() {\n        if (this.state.programList === null) {\n            return <LoadingSpinner/>;\n        }\n\n\n        return (\n            <div className=\"w-100 h-100 d-flex flex-column\">\n                <ProgramsHead institution={this.props.institution}\n                              years={this.state.yearList}\n                              setCurrentYear={this.setActiveYear}/>\n                <ProgramsTable programs={this.state.programList}\n                               currentProgram={this.state.activeProgram}\n                               setCurrentProgram={this.setActiveProgram}/>\n            </div>\n        );\n    }\n}\n\nclass ProgramsHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (this.props.years === null) {\n            return <LoadingSpinner/>;\n        }\n\n        const years = this.props.years.map((year, index) => {\n            return <option key={index}>{year} - {year + 1}</option>;\n        });\n\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Programs</h5>\n                    <h4 className=\"page-head-title mb-0\">{this.props.institution.name}</h4>\n                </div>\n\n                <div className=\"page-head-actions d-flex flex-row align-items-end\">\n                    {this.props.years.length !== 0 &&\n                    <div className=\"d-flex flex-column mr-2\">\n                        <labl className=\"mr-3 text-dark mb-1\">Academic Year</labl>\n                        <Input type=\"select\"\n                               className=\"mr-3 btn btn-outline-success select-sm\">\n                            {years}\n                        </Input>\n                    </div>\n                    }\n                    <Button outline\n                            size=\"sm\"\n                            color=\"success\">\n                        Add a Program\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ProgramsTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        return (\n            <div className=\"loading-container\">\n                <h3>There's nothing here.</h3>\n                <p>When added, Programs will show up here.</p>\n                <Button outline\n                        color=\"success\">Add a program</Button>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.programs.length === 0) {\n            return this.emptyState();\n        }\n\n        return (\n            <div className=\"w-100 h-100 d-flex flex-column\">\n                <ProgramsListSection programs={this.props.programs}\n                                     currentProgram={this.props.currentProgram}\n                                     setCurrentProgram={this.props.setCurrentProgram}/>\n            </div>\n        );\n    }\n}\n\nclass ProgramsListSection extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let rows = this.props.programs.map((program, index) => {\n            let isActive = false;\n\n            if (this.props.currentProgram !== null) {\n                isActive = this.props.currentProgram.id === program.id;\n            }\n\n            const setCurrentProgram = () => this.props.setCurrentProgram(program);\n\n            return (\n                <SectionRow key={index}\n                            onClick={setCurrentProgram}\n                            active={isActive}>\n                    <SectionRowContent large>{program.name}</SectionRowContent>\n                </SectionRow>\n            );\n        });\n\n        return (\n            <div>\n                <Section>\n                    <SectionTitle>{this.props.children}</SectionTitle>\n                    <SectionTable className=\"memorandums-accordion\">\n                        {rows}\n                    </SectionTable>\n                </Section>\n            </div>\n        );\n    }\n}\n\nexport default Programs;"]}