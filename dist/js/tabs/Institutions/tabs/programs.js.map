{"version":3,"sources":["../../../../../js/tabs/Institutions/tabs/programs.js"],"names":["Programs","props","state","currentProgram","setCurrentProgram","bind","program","setState","institution","ProgramsHead","name","ProgramsTable","ProgramsListSection","emptyState","programs","length","rows","map","id","children"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IASMA,Q;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,4BAAiB;AADR,SAAb;;AAIA,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AAPe;AAQlB;;;;0CAEiBC,O,EAAS;AACvB,iBAAKC,QAAL,CAAc;AACVJ,gCAAiBG;AADP,aAAd;AAGH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,aAAf;AACI,8CAAC,YAAD,IAAc,aAAa,KAAKL,KAAL,CAAWO,WAAtC,GADJ;AAEI,8CAAC,aAAD,IAAe,mBAAmB,KAAKJ,iBAAvC;AAFJ,aADJ;AAMH;;;;;;IAGCK,Y;;;AACF,0BAAYR,KAAZ,EAAmB;AAAA;;AAAA,2HACTA,KADS;AAElB;;;;4CAEmB;AAChB;AACH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,gDAAf;AACI;AAAA;AAAA,sBAAK,WAAU,SAAf;AACI;AAAA;AAAA,0BAAI,WAAU,qBAAd;AAAA;AAAA,qBADJ;AAEI;AAAA;AAAA,0BAAI,WAAU,sBAAd;AAAsC,6BAAKA,KAAL,CAAWO,WAAX,CAAuBE;AAA7D;AAFJ,iBADJ;AAMI;AAAA;AAAA,sBAAK,WAAU,mBAAf;AACI;AAAA;AAAA,0BAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,OAAM,SAAhC;AAAA;AAAA;AADJ;AANJ,aADJ;AAcH;;;;;;IAGCC,a;;;AACF,2BAAYV,KAAZ,EAAmB;AAAA;;AAAA,6HACTA,KADS;AAElB;;;;iCAEQ;AACL,mBAAO;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;;;;;IAGCW,mB;;;AACF,iCAAYX,KAAZ,EAAmB;AAAA;;AAAA,+IACTA,KADS;;AAGf,eAAKY,UAAL,GAAkB,OAAKA,UAAL,CAAgBR,IAAhB,QAAlB;AAHe;AAIlB;;;;qCAEY;AACT;AACH;;;iCAEQ;AACL,gBAAI,KAAKJ,KAAL,CAAWa,QAAX,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AAClC,uBAAO,KAAKF,UAAL,EAAP;AACH;;AAED,gBAAIG,OAAO,KAAKf,KAAL,CAAWa,QAAX,CAAoBG,GAApB,CAAwB,mBAAW;AAC1C;AACA,uBACI;AAAA;AAAA,sBAAY,KAAKX,QAAQY,EAAzB;AACI;AAAA;AAAA,0BAAmB,WAAnB;AAA0BZ,gCAAQI;AAAlC;AADJ,iBADJ;AAKH,aAPU,CAAX;;AASA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAe,6BAAKT,KAAL,CAAWkB;AAA1B,qBADJ;AAEI;AAAA;AAAA,0BAAc,WAAU,uBAAxB;AACKH;AADL;AAFJ;AADJ,aADJ;AAUH;;;;;;kBAGUhB,Q","file":"programs.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport LoadingSpinner from \"../../../loading\";\nimport { Button } from \"reactstrap\";\nimport {\n    Section,\n    SectionRow,\n    SectionRowContent,\n    SectionTable,\n    SectionTitle,\n} from \"../../../components/section\";\n\n\nclass Programs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentProgram : null,\n        };\n\n        this.setCurrentProgram = this.setCurrentProgram.bind(this);\n    }\n\n    setCurrentProgram(program) {\n        this.setState({\n            currentProgram : program,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"h-100 w-100\">\n                <ProgramsHead institution={this.props.institution}/>\n                <ProgramsTable setCurrentProgram={this.setCurrentProgram}/>\n            </div>\n        );\n    }\n}\n\nclass ProgramsHead extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    toggleAddPrograms() {\n        //TODO\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-end\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Programs</h5>\n                    <h4 className=\"page-head-title mb-0\">{this.props.institution.name}</h4>\n                </div>\n\n                <div className=\"page-head-actions\">\n                    <Button outline size=\"sm\" color=\"success\">\n                        Add a Program\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ProgramsTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <h1>World</h1>;\n    }\n}\n\nclass ProgramsListSection extends Component {\n    constructor(props) {\n        super(props);\n\n        this.emptyState = this.emptyState.bind(this);\n    }\n\n    emptyState() {\n        //TODO\n    }\n\n    render() {\n        if (this.props.programs.length === 0) {\n            return this.emptyState();\n        }\n\n        let rows = this.props.programs.map(program => {\n            //TODO: onClick\n            return (\n                <SectionRow key={program.id}>\n                    <SectionRowContent large>{program.name}</SectionRowContent>\n                </SectionRow>\n            );\n        });\n\n        return (\n            <div>\n                <Section>\n                    <SectionTitle>{this.props.children}</SectionTitle>\n                    <SectionTable className=\"memorandums-accordion\">\n                        {rows}\n                    </SectionTable>\n                </Section>\n            </div>\n        );\n    }\n}\n\nexport default Programs;"]}