{"version":3,"sources":["../../../../../js/tabs/StudentApplications/tabs/application_requirements.js"],"names":["makeRequirementsQuery","isInbound","query","makeInboundApplicationQuery","id","makeOutboundApplicationQuery","ApplicationRequirements","props","state","applicantRequirements","requirements","isRequirementsComplete","errors","fetchRequirements","bind","inbound","student","studentId","error","setState","then","result","inbound_requirements","outbound_requirements","catch","inboundstudentprogram","application_requirements","map","requirement","is_requirements_complete","outboundstudentprogram","toString","ApplicationHead","first_name","middle_name","family_name","id_number","RequirementsBody","rows","includes","RequirementRow","done","name"],"mappings":"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","file":"application_requirements.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport ErrorState from \"../../../components/error_state\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport {\n    SectionRow,\n    SectionTable,\n} from \"../../../components/section\";\nimport { Button } from \"reactstrap\";\n\n\nfunction makeRequirementsQuery(isInbound) {\n    return graphql.query(`\n    {\n        ${isInbound ? \"inbound_requirements\" : \"outbound_requirements\"} {\n            id\n            name\n        }\n    }\n    `);\n}\n\nfunction makeInboundApplicationQuery(id) {\n    return graphql.query(`\n    {\n      student(id:${id}) {\n                inboundstudentprogram {\n                    is_requirements_complete\n                    application_requirements {\n                        id\n                    }\n                }\n        }\n    }\n    `);\n}\n\nfunction makeOutboundApplicationQuery(id) {\n    return graphql.query(`\n    {\n      student(id:${id}) {\n                outboundstudentprogram {\n                    is_requirements_complete\n                    application_requirements {\n                        id\n                    }\n                }\n        }\n    }\n    `);\n}\n\n\nclass ApplicationRequirements extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            applicantRequirements : null,\n            requirements : null,\n            isRequirementsComplete : false,\n            errors : null,\n        };\n\n        this.fetchRequirements = this.fetchRequirements.bind(this);\n        this.fetchRequirements(props.inbound, props.student.id);\n    }\n\n    fetchRequirements(inbound, studentId) {\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        makeRequirementsQuery(inbound)\n            .then(result => this.setState({\n                requirements : inbound ? result.inbound_requirements : result.outbound_requirements,\n            }))\n            .catch(error => this.setState({\n                error : error,\n            }));\n\n        if (inbound) {\n            makeInboundApplicationQuery(studentId)\n                .then(result => this.setState({\n                    applicantRequirements : result.student.inboundstudentprogram.application_requirements.map(requirement => requirement.id),\n                    isRequirementsComplete : result.student.inboundstudentprogram.is_requirements_complete,\n                }))\n                .catch(error => this.setState({\n                    error : error,\n                }));\n        } else {\n            makeOutboundApplicationQuery(studentId)\n                .then(result => this.setState({\n                    applicantRequirements : result.student.outboundstudentprogram.application_requirements.map(requirement => requirement.id),\n                    isRequirementsComplete : result.student.outboundstudentprogram.is_requirements_complete,\n                }))\n                .catch(error => this.setState({\n                    error : error,\n                }));\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            applicantRequirements : null,\n        });\n\n        this.fetchRequirements(props.inbound, props.student.id);\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={() => this.fetchRequirements(this.props.inbound, this.props.student.id)}>\n                    {this.state.error.toString()}\n                </ErrorState>\n            );\n        }\n\n        if (this.state.applicantRequirements === null || this.state.requirements === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <ApplicationHead student={this.props.student}\n                                 inbound={this.props.inbound}\n                                 isRequirementsComplete={this.props.isRequirementsComplete}/>\n                <RequirementsBody requirements={this.state.requirements}\n                                  applicantRequirements={this.state.applicantRequirements}/>\n            </div>\n        );\n    }\n}\n\nclass ApplicationHead extends Component {\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-center\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Application Requirements</h5>\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">\n                        {this.props.student.first_name} {this.props.student.middle_name} {this.props.student.family_name}\n                        <small className=\"text-muted ml-2\">{this.props.student.id_number}</small>\n                    </h4>\n\n                    {this.props.isRequirementsComplete &&\n                    <Button outline\n                            size=\"sm\"\n                            color=\"success\">\n                        {this.props.inbound ? \"Accept \" : \"Deploy \"} Student\n                    </Button>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass RequirementsBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const rows = this.props.requirements.map(requirement =>\n            <RequirementRow key={requirement.id}\n                            done={this.props.applicantRequirements.includes(requirement.id)}\n                            requirement={requirement}/>,\n        );\n\n        return (\n            <SectionTable>\n                {rows}\n            </SectionTable>\n        );\n    }\n}\n\nclass RequirementRow extends Component {\n    render() {\n        return (\n            <SectionRow large\n                        className=\"d-flex flex-row align-items-center\">\n\n                {this.props.done &&\n                <b className=\"text-success\">✓</b>\n                }\n\n                <p className=\"lead mr-auto mb-0\">{this.props.requirement.name}</p>\n\n                {this.props.done &&\n                <Button outline\n                        color=\"warning\">Mark as undone</Button>\n                }\n\n                {!this.props.done &&\n                <Button outline\n                        color=\"success\">Mark as done</Button>\n                }\n            </SectionRow>\n        );\n    }\n}\n\nexport default ApplicationRequirements;"]}