{"version":3,"sources":["../../../../../js/tabs/StudentApplications/tabs/application_requirements.js"],"names":["makeRequirementsQuery","isInbound","query","makeInboundApplicationQuery","id","makeOutboundApplicationQuery","ApplicationRequirements","props","state","applicantRequirements","requirements","isRequirementsComplete","studentProgramId","errors","deployApplicantIsShowing","acceptApplicantIsShowing","fetchRequirements","bind","refreshRequirements","toggleDeployApplicant","toggleAcceptApplicant","inbound","student","studentId","error","setState","then","result","inbound_requirements","outbound_requirements","catch","inboundstudentprogram","application_requirements","map","requirement","is_requirements_complete","outboundstudentprogram","toString","refreshStudents","ApplicationHead","first_name","middle_name","family_name","id_number","localStorage","userType","toggleModal","cancelApplication","confirm","$","delete","url","serverURL","category","beforeSend","success","title","message","fail","alert","console","log","RequirementsBody","rows","includes","RequirementRow","markAsDone","markAsUndone","concat","ajax","method","data","JSON","stringify","contentType","done","filter","name"],"mappings":"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","file":"application_requirements.js","sourcesContent":["import React, { Component } from \"react\";\nimport graphql from \"../../../graphql\";\nimport ErrorState from \"../../../components/error_state\";\nimport LoadingSpinner from \"../../../components/loading\";\nimport {\n    SectionRow,\n    SectionTable,\n} from \"../../../components/section\";\nimport { Button } from \"reactstrap\";\nimport settings from \"../../../settings\";\nimport authorizeXHR from \"../../../authorization\";\nimport {\n    AcceptApplicantModal,\n    DeployApplicantModal,\n} from \"./modals\";\nimport iziToast from \"izitoast\";\n\n\nfunction makeRequirementsQuery(isInbound) {\n    return graphql.query(`\n    {\n        ${isInbound ? \"inbound_requirements\" : \"outbound_requirements\"} {\n            id\n            name\n        }\n    }\n    `);\n}\n\nfunction makeInboundApplicationQuery(id) {\n    return graphql.query(`\n    {\n      student(id:${id}) {\n                inboundstudentprogram {\n                    id\n                    is_requirements_complete\n                    application_requirements {\n                        id\n                    }\n                }\n        }\n    }\n    `);\n}\n\nfunction makeOutboundApplicationQuery(id) {\n    return graphql.query(`\n    {\n      student(id:${id}) {\n                outboundstudentprogram {\n                    id\n                    is_requirements_complete\n                    application_requirements {\n                        id\n                    }\n                }\n        }\n    }\n    `);\n}\n\nclass ApplicationRequirements extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            applicantRequirements : null,\n            requirements : null,\n            isRequirementsComplete : false,\n            studentProgramId : null,\n            errors : null,\n            deployApplicantIsShowing : false,\n            acceptApplicantIsShowing : false,\n        };\n\n        this.fetchRequirements = this.fetchRequirements.bind(this);\n        this.refreshRequirements = this.refreshRequirements.bind(this);\n        this.toggleDeployApplicant = this.toggleDeployApplicant.bind(this);\n        this.toggleAcceptApplicant = this.toggleAcceptApplicant.bind(this);\n\n        this.fetchRequirements(props.inbound, props.student.id);\n    }\n\n    fetchRequirements(inbound, studentId) {\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        makeRequirementsQuery(inbound)\n            .then(result => this.setState({\n                requirements : inbound ? result.inbound_requirements : result.outbound_requirements,\n            }))\n            .catch(error => this.setState({\n                error : error,\n            }));\n\n        if (inbound) {\n            makeInboundApplicationQuery(studentId)\n                .then(result => this.setState({\n                    applicantRequirements : result.student.inboundstudentprogram.application_requirements.map(requirement => requirement.id),\n                    isRequirementsComplete : result.student.inboundstudentprogram.is_requirements_complete,\n                    studentProgramId : result.student.inboundstudentprogram.id,\n                }))\n                .catch(error => this.setState({\n                    error : error,\n                }));\n        } else {\n            makeOutboundApplicationQuery(studentId)\n                .then(result => this.setState({\n                    applicantRequirements : result.student.outboundstudentprogram.application_requirements.map(requirement => requirement.id),\n                    isRequirementsComplete : result.student.outboundstudentprogram.is_requirements_complete,\n                    studentProgramId : result.student.outboundstudentprogram.id,\n                }))\n                .catch(error => this.setState({\n                    error : error,\n                }));\n        }\n    }\n\n    refreshRequirements() {\n        // console.log(this.props);\n        // this.fetchRequirements(this.props.inbound, this.props.student.id);\n        //\n        this.setState({\n            requirements : null,\n            applicantRequirements : null,\n        });\n    }\n\n    toggleDeployApplicant() {\n        this.setState({\n            deployApplicantIsShowing : !this.state.deployApplicantIsShowing,\n        });\n    }\n\n    toggleAcceptApplicant() {\n        this.setState({\n            acceptApplicantIsShowing : !this.state.acceptApplicantIsShowing,\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            applicantRequirements : null,\n        });\n\n        this.fetchRequirements(props.inbound, props.student.id);\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState\n                    onRetryButtonClick={() => this.fetchRequirements(this.props.inbound, this.props.student.id)}>\n                    {this.state.error.toString()}\n                </ErrorState>\n            );\n        }\n\n        if (this.state.applicantRequirements === null || this.state.requirements === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div className=\"d-flex flex-column p-0 h-100\">\n                <ApplicationHead student={this.props.student}\n                                 inbound={this.props.inbound}\n                                 refreshStudents={this.props.refreshStudents}\n                                 toggleModal={this.props.inbound ? this.toggleAcceptApplicant : this.toggleDeployApplicant}\n                                 isRequirementsComplete={this.state.isRequirementsComplete}/>\n                <RequirementsBody requirements={this.state.requirements}\n                                  student={this.props.student}\n                                  inbound={this.props.inbound}\n                                  refreshRequirements={() => this.fetchRequirements(this.props.inbound, this.props.student.id)}\n                                  studentProgramId={this.state.studentProgramId}\n                                  applicantRequirements={this.state.applicantRequirements}/>\n\n                {!this.props.inbound && this.state.isRequirementsComplete &&\n                <DeployApplicantModal isOpen={this.state.deployApplicantIsShowing}\n                                      student={this.props.student}\n                                      refreshStudents={this.props.refreshStudents}\n                                      toggle={this.toggleDeployApplicant}/>\n                }\n\n                {this.props.inbound && this.state.isRequirementsComplete &&\n                <AcceptApplicantModal isOpen={this.state.acceptApplicantIsShowing}\n                                      student={this.props.student}\n                                      refreshStudents={this.props.refreshStudents}\n                                      toggle={this.toggleAcceptApplicant}/>\n                }\n\n            </div>\n        );\n    }\n}\n\nclass ApplicationHead extends Component {\n    static cancelApplication(student, refreshStudents) {\n        if (!confirm(\"Are you sure you want to cancel this student's application? \")) {\n            return;\n        }\n\n        $.delete({\n            url : `${settings.serverURL}/students/${student.category === \"OUT\" ? \"outbound\" : \"inbound\"}/students/${student.id}/`,\n            beforeSend : authorizeXHR,\n        }).then(() => {\n             iziToast.success({\n                 title : \"Cancelled\",\n                 message : \"Successfully cancelled application\",\n             });\n             refreshStudents();\n         })\n         .fail(error => {\n             alert(\"An error occurred cancelling application\");\n             console.log(error);\n         });\n    }\n\n    render() {\n        return (\n            <div className=\"page-head pt-5 d-flex flex-row align-items-center\">\n                <div className=\"mr-auto\">\n                    <h5 className=\"mb-0 text-secondary\">Application Requirements</h5>\n                    <h4 className=\"page-head-title justify-content-left d-inline-block mb-0 mr-2\">\n                        {this.props.student.first_name} {this.props.student.middle_name} {this.props.student.family_name}\n                        <small className=\"text-muted ml-2\">{this.props.student.id_number}</small>\n                    </h4>\n                </div>\n\n                {this.props.isRequirementsComplete && localStorage.userType !== \"administrative_assistant\" &&\n                <Button outline\n                        size=\"sm\"\n                        className=\"mr-2\"\n                        onClick={this.props.toggleModal}\n                        color=\"success\">\n                    {this.props.inbound ? \"Accept \" : \"Deploy \"} Student\n                </Button>\n                }\n\n                {localStorage.userType !== \"administrative_assistant\" && <Button outline\n                                                                                 size=\"sm\"\n                                                                                 onClick={() => ApplicationHead.cancelApplication(this.props.student, this.props.refreshStudents)}\n                                                                                 color=\"danger\">Cancel\n                    Application</Button>}\n\n            </div>\n        );\n    }\n}\n\nclass RequirementsBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const rows = this.props.requirements.map(requirement =>\n            <RequirementRow key={requirement.id}\n                            applicantRequirements={this.props.applicantRequirements}\n                            student={this.props.student}\n                            inbound={this.props.inbound}\n                            refreshRequirements={this.props.refreshRequirements}\n                            studentProgramId={this.props.studentProgramId}\n                            done={this.props.applicantRequirements.includes(requirement.id)}\n                            requirement={requirement}/>,\n        );\n\n        return (\n            <SectionTable>\n                {rows}\n            </SectionTable>\n        );\n    }\n}\n\nclass RequirementRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this.markAsDone = this.markAsDone.bind(this);\n        this.markAsUndone = this.markAsUndone.bind(this);\n    }\n\n\n    markAsDone() {\n        const requirements = this.props.applicantRequirements.concat([this.props.requirement.id]);\n\n        $.ajax({\n             method : \"PUT\",\n             url : `${settings.serverURL}/programs/${this.props.inbound ? \"inbound\" : \"outbound\"}/students/${this.props.studentProgramId}/`,\n             beforeSend : authorizeXHR,\n             data : JSON.stringify({\n                 application_requirements : requirements,\n             }),\n             contentType : \"application/json\",\n         })\n         .done(() => {\n             this.props.refreshRequirements();\n         });\n    }\n\n    markAsUndone() {\n        $.ajax({\n             method : \"PUT\",\n             url : `${settings.serverURL}/programs/${this.props.inbound ? \"inbound\" : \"outbound\"}/students/${this.props.studentProgramId}/`,\n             beforeSend : authorizeXHR,\n             data : JSON.stringify({\n                 application_requirements : this.props.applicantRequirements.filter(requirement => requirement !== this.props.requirement.id),\n             }),\n             contentType : \"application/json\",\n         })\n         .done(() => {\n             this.props.refreshRequirements();\n         });\n    }\n\n\n    render() {\n        return (\n            <SectionRow large\n                        className=\"d-flex flex-row align-items-center\">\n\n                {this.props.done &&\n                <b className=\"text-success mr-3\">✓</b>\n                }\n\n                <p className=\"lead mr-auto mb-0\">{this.props.requirement.name}</p>\n\n                {this.props.done && localStorage.userType !== \"administrative_assistant\" &&\n                <Button outline\n                        size=\"sm\"\n                        onClick={this.markAsUndone}\n                        color=\"warning\">Mark as undone</Button>\n                }\n\n                {!this.props.done && localStorage.userType !== \"administrative_assistant\" &&\n                <Button outline\n                        size=\"sm\"\n                        onClick={this.markAsDone}\n                        color=\"success\">Mark as done</Button>\n                }\n            </SectionRow>\n        );\n    }\n}\n\nexport default ApplicationRequirements;"]}