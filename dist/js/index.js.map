{"version":3,"sources":["../../js/index.js"],"names":["settings","progressBar","showingCSS","hidingCSS","isLoggedIn","localStorage","token","undefined","signInBox","css","setTimeout","onSignIn","showSignInBox","signInMessage","hide","click","attemptSignIn","on","event","which","username","val","password","post","url","serverURL","data","success","response","error","console","log","statusCode","text","show","renderReact","signInView","render","document","getElementById","signInBoxShouldShow","spinner","signOut","clear"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,mBAASA,QAAT,CAAkB;AACdC,iBAAc;AADA,CAAlB;;AAIA,IAAMC,aAAa;AACf,eAAW,CADI;AAEf,sBAAkB;AAFH,CAAnB;;AAKA,IAAMC,YAAY;AACd,eAAW,CADG;AAEd,sBAAkB;AAFJ,CAAlB;;AAKA,sBAAE,YAAM;AACJ,QAAMC,aAAaC,aAAaC,KAAb,KAAuBC,SAA1C;AACA,QAAMC,YAAY,sBAAE,cAAF,CAAlB;AACAA,cAAUC,GAAV,CAAc,SAAd,EAAyB,CAAzB;;AAEAC,eAAW,YAAM;AACb,YAAIN,UAAJ,EAAgB;AACZO;AACA;AACH;;AAEDC,sBAAc,IAAd;AACH,KAPD,EAOG,GAPH;;AAUA,QAAMC,gBAAgB,sBAAE,kBAAF,CAAtB;AACAA,kBAAcC,IAAd;;AAEA,0BAAE,iBAAF,EAAqBC,KAArB,CAA2BC,aAA3B;AACA,0BAAE,iBAAF,EAAqBC,EAArB,CAAwB,SAAxB,EAAmC,iBAAS;AACxC,YAAIC,MAAMC,KAAN,KAAgB,EAApB,EAAwB;AACpBH;AACH;AACJ,KAJD;;AAMA,aAASA,aAAT,GAAyB;AACrB,YAAMI,WAAW,sBAAE,iBAAF,EAAqBC,GAArB,EAAjB;AACA,YAAMC,WAAW,sBAAE,iBAAF,EAAqBD,GAArB,EAAjB;;AAEAR,sBAAcC,IAAd;;AAEAF,sBAAc,KAAd;;AAEA,yBAAEW,IAAF,CAAO;AACHC,iBAAS,mBAASC,SAAlB,cADG;AAEHC,kBAAO;AACHN,0BAAWA,QADR;AAEHE,0BAAWA;AAFR,aAFJ;AAMHK,qBAAU,2BAAY;AAClBtB,6BAAaC,KAAb,GAAqBsB,SAAStB,KAA9B;AACAD,6BAAae,QAAb,GAAwBQ,SAASR,QAAjC;AACAT;AACH,aAVE;AAWHkB,mBAAQ,yBAAY;AAChBC,wBAAQC,GAAR,CAAYH,QAAZ;AACA,wBAAQA,SAASI,UAAjB;AACI,yBAAK,GAAL;AACInB,sCAAcoB,IAAd,GAAqB,qBAArB;AACA;AACJ;AACIpB,sCAAcoB,IAAd,GAAqB,iCAArB;AACA;AANR;;AASApB,8BAAcqB,IAAd;AACAtB,8BAAc,IAAd;AACH;AAxBE,SAAP;AA0BH;;AAED,aAASD,QAAT,GAAoB;AAChBwB;;AAEAzB,mBAAW,YAAM;AACb,gBAAM0B,aAAa,sBAAE,UAAF,CAAnB;AACAA,uBAAW3B,GAAX,CAAeN,SAAf;AACH,SAHD,EAGG,GAHH;AAIH;;AAED,aAASgC,WAAT,GAAuB;AACnB,2BAASE,MAAT,CAAgB,kDAAhB,EAAwBC,SAASC,cAAT,CAAwB,MAAxB,CAAxB;AACH;AAEJ,CA1ED;;AA4EA,SAAS3B,aAAT,CAAuB4B,mBAAvB,EAA4C;AACxC,QAAMC,UAAU,sBAAE,kBAAF,CAAhB;AACA,QAAMjC,YAAY,sBAAE,cAAF,CAAlB;;AAEAA,cAAUC,GAAV,CAAc+B,sBAAsBtC,UAAtB,GAAmCC,SAAjD;AACAsC,YAAQhC,GAAR,CAAY+B,sBAAsBrC,SAAtB,GAAkCD,UAA9C;AACH;;AAED,SAASwC,OAAT,GAAmB;AACfrC,iBAAasC,KAAb;;AAEA,QAAMP,aAAa,sBAAE,UAAF,CAAnB;AACAA,eAAW3B,GAAX,CAAeP,UAAf;AACAU,kBAAc,IAAd;AACH;;kBAEc8B,O","file":"index.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport $ from \"jquery\";\nimport settings from \"./settings\";\nimport iziToast from \"izitoast\";\n\n//Default iziToast settings\niziToast.settings({\n    progressBar : false,\n});\n\nconst showingCSS = {\n    \"opacity\": 1,\n    \"pointer-events\": \"all\"\n};\n\nconst hidingCSS = {\n    \"opacity\": 0,\n    \"pointer-events\": \"none\"\n};\n\n$(() => {\n    const isLoggedIn = localStorage.token !== undefined;\n    const signInBox = $(\"#sign-in-box\");\n    signInBox.css(\"opacity\", 0);\n\n    setTimeout(() => {\n        if (isLoggedIn) {\n            onSignIn();\n            return;\n        }\n\n        showSignInBox(true);\n    }, 500);\n\n\n    const signInMessage = $(\"#sign-in-message\");\n    signInMessage.hide();\n\n    $(\"#sign-in-button\").click(attemptSignIn);\n    $(\"#password-input\").on(\"keydown\", event => {\n        if (event.which === 13) {\n            attemptSignIn();\n        }\n    });\n\n    function attemptSignIn() {\n        const username = $(\"#username-input\").val();\n        const password = $(\"#password-input\").val();\n\n        signInMessage.hide();\n\n        showSignInBox(false);\n\n        $.post({\n            url : `${settings.serverURL}/sign-in/`,\n            data : {\n                username : username,\n                password : password,\n            },\n            success : response => {\n                localStorage.token = response.token;\n                localStorage.username = response.username;\n                onSignIn();\n            },\n            error : response => {\n                console.log(response);\n                switch (response.statusCode) {\n                    case 401:\n                        signInMessage.text = \"Invalid credentials\";\n                        break;\n                    default:\n                        signInMessage.text = \"Could not connect to the server\";\n                        break;\n                }\n\n                signInMessage.show();\n                showSignInBox(true);\n            },\n        });\n    }\n\n    function onSignIn() {\n        renderReact();\n\n        setTimeout(() => {\n            const signInView = $(\"#sign-in\");\n            signInView.css(hidingCSS);\n        }, 700);\n    }\n\n    function renderReact() {\n        ReactDOM.render(<App/>, document.getElementById(\"root\"));\n    }\n\n});\n\nfunction showSignInBox(signInBoxShouldShow) {\n    const spinner = $(\"#sign-in-spinner\");\n    const signInBox = $(\"#sign-in-box\");\n\n    signInBox.css(signInBoxShouldShow ? showingCSS : hidingCSS);\n    spinner.css(signInBoxShouldShow ? hidingCSS : showingCSS);\n}\n\nfunction signOut() {\n    localStorage.clear();\n\n    const signInView = $('#sign-in');\n    signInView.css(showingCSS);\n    showSignInBox(true);\n}\n\nexport default signOut;\n"]}