{"version":3,"sources":["../../js/index.js"],"names":["isLoggedIn","localStorage","token","undefined","spinner","signInBox","css","setTimeout","onSignIn","showSignInBox","signInMessage","hide","click","username","val","password","post","url","serverURL","data","success","response","error","console","log","statusCode","text","show","shouldShow","renderReact","signInView","render","document","getElementById"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,sBAAE,YAAM;AACJ,QAAMA,aAAaC,aAAaC,KAAb,KAAuBC,SAA1C;AACA,QAAMC,UAAU,sBAAE,kBAAF,CAAhB;AACA,QAAMC,YAAY,sBAAE,cAAF,CAAlB;AACAA,cAAUC,GAAV,CAAc,SAAd,EAAyB,CAAzB;;AAEAC,eAAW,YAAM;AACb,YAAIP,UAAJ,EAAgB;AACZQ;AACA;AACH;;AAEDC,sBAAc,IAAd;AACH,KAPD,EAOG,GAPH;;AAUA,QAAMC,gBAAgB,sBAAE,kBAAF,CAAtB;AACAA,kBAAcC,IAAd;;AAEA,0BAAE,iBAAF,EAAqBC,KAArB,CAA2B,YAAM;AAC7B,YAAMC,WAAW,sBAAE,iBAAF,EAAqBC,GAArB,EAAjB;AACA,YAAMC,WAAW,sBAAE,iBAAF,EAAqBD,GAArB,EAAjB;;AAEAL,sBAAc,KAAd;;AAEA,yBAAEO,IAAF,CAAO;AACHC,iBAAS,mBAASC,SAAlB,cADG;AAEHC,kBAAO;AACHN,0BAAWA,QADR;AAEHE,0BAAWA;AAFR,aAFJ;AAMHK,qBAAU,2BAAY;AAClBnB,6BAAaC,KAAb,GAAqBmB,SAASnB,KAA9B;AACAM;AACH,aATE;AAUHc,mBAAQ,yBAAY;AAChBC,wBAAQC,GAAR,CAAYH,QAAZ;AACA,wBAAQA,SAASI,UAAjB;AACI,yBAAK,GAAL;AACIf,sCAAcgB,IAAd,GAAqB,qBAArB;AACAhB,sCAAciB,IAAd;AACA;AACJ;AACIjB,sCAAcgB,IAAd,GAAqB,iCAArB;AACAhB,sCAAciB,IAAd;AACA;AARR;AAUH;AAtBE,SAAP;AAwBH,KA9BD;;AAgCA,aAASlB,aAAT,CAAuBmB,UAAvB,EAAmC;AAC/BvB,kBAAUC,GAAV,CAAc,SAAd,EAAyBsB,aAAa,CAAb,GAAiB,CAA1C;AACAxB,gBAAQE,GAAR,CAAY,SAAZ,EAAuBsB,aAAa,CAAb,GAAiB,CAAxC;AACH;;AAED,aAASpB,QAAT,GAAoB;AAChBqB;;AAEAtB,mBAAW,YAAM;AACb,gBAAMuB,aAAa,sBAAE,UAAF,CAAnB;AACAA,uBAAWxB,GAAX,CAAe;AACX,2BAAY,CADD;AAEX,kCAAmB;AAFR,aAAf;AAIH,SAND,EAMG,GANH;AAOH;;AAED,aAASuB,WAAT,GAAuB;AACnB,2BAASE,MAAT,CAAgB,kDAAhB,EAAwBC,SAASC,cAAT,CAAwB,MAAxB,CAAxB;AACH;AAGJ,CAzED","file":"index.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport $ from \"jquery\";\nimport settings from \"./settings\";\n\n\n$(() => {\n    const isLoggedIn = localStorage.token !== undefined;\n    const spinner = $(\"#sign-in-spinner\");\n    const signInBox = $(\"#sign-in-box\");\n    signInBox.css(\"opacity\", 0);\n\n    setTimeout(() => {\n        if (isLoggedIn) {\n            onSignIn();\n            return;\n        }\n\n        showSignInBox(true);\n    }, 500);\n\n\n    const signInMessage = $(\"#sign-in-message\");\n    signInMessage.hide();\n\n    $(\"#sign-in-button\").click(() => {\n        const username = $(\"#username-input\").val();\n        const password = $(\"#password-input\").val();\n\n        showSignInBox(false);\n\n        $.post({\n            url : `${settings.serverURL}/sign-in/`,\n            data : {\n                username : username,\n                password : password,\n            },\n            success : response => {\n                localStorage.token = response.token;\n                onSignIn();\n            },\n            error : response => {\n                console.log(response);\n                switch (response.statusCode) {\n                    case 401:\n                        signInMessage.text = \"Invalid credentials\";\n                        signInMessage.show();\n                        return;\n                    default:\n                        signInMessage.text = \"Could not connect to the server\";\n                        signInMessage.show();\n                        return;\n                }\n            },\n        });\n    });\n\n    function showSignInBox(shouldShow) {\n        signInBox.css(\"opacity\", shouldShow ? 1 : 0);\n        spinner.css(\"opacity\", shouldShow ? 0 : 1);\n    }\n\n    function onSignIn() {\n        renderReact();\n\n        setTimeout(() => {\n            const signInView = $(\"#sign-in\");\n            signInView.css({\n                \"opacity\" : 0,\n                \"pointer-events\" : \"none\",\n            });\n        }, 700);\n    }\n\n    function renderReact() {\n        ReactDOM.render(<App/>, document.getElementById(\"root\"));\n    }\n\n\n});"]}