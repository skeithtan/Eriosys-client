{"version":3,"sources":["../../../js/reports/outbound_and_inbound_units.js"],"names":["makeYearsQuery","query","makeReportQuery","year","term","get","url","serverURL","beforeSend","data","OutboundAndInboundUnits","props","state","academicYears","activeYear","activeTerm","error","fetchYears","bind","setActiveYear","setActiveTerm","setState","then","result","academic_years","length","map","parseInt","academicYear","academic_year_start","catch","toString","UnitsReportBar","onActiveYearChange","event","target","value","UnitsReport","institutions","fetchReport","done","fail","dateGenerated","format","UnitsReportTable","rows","institution","index","totalOutboundUnits","totalInboundUnits","totalDeficit","forEach","outboundUnits","outbound_units_enrolled","inboundUnits","inbound_units_enrolled","difference","UnitsReportTableRow","outboundUnitsEnrolled","inboundUnitsEnrolled"],"mappings":"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","file":"outbound_and_inbound_units.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    ReportBar,\n    ReportHead,\n    ReportTitleContainer,\n} from \"../components/reports\";\nimport graphql from \"../graphql\";\nimport {\n    Button,\n    ButtonGroup,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n    Table,\n} from \"reactstrap\";\nimport ErrorState from \"../components/error_state\";\nimport LoadingSpinner from \"../components/loading\";\nimport $ from \"jquery\";\nimport settings from \"../settings\";\nimport authorizeXHR from \"../authorization\";\nimport moment from \"moment\";\n\n\nfunction makeYearsQuery() {\n    return graphql.query(`\n    {\n        academic_years {\n            academic_year_start\n        }\n    }\n    `);\n}\n\nfunction makeReportQuery(year, term) {\n    return $.get({\n        url : `${settings.serverURL}/reports/unit-reports/`,\n        beforeSend : authorizeXHR,\n        data : {\n            \"academic-year\" : year,\n            \"term\" : term,\n        },\n    });\n}\n\nclass OutboundAndInboundUnits extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            academicYears : null,\n            activeYear : null,\n            activeTerm : 1,\n            error : null,\n        };\n\n        this.fetchYears = this.fetchYears.bind(this);\n        this.setActiveYear = this.setActiveYear.bind(this);\n        this.setActiveTerm = this.setActiveTerm.bind(this);\n\n        this.fetchYears();\n    }\n\n    fetchYears() {\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        makeYearsQuery()\n            .then(result => {\n                if (result.academic_years.length === 0) {\n                    this.setState({\n                        academicYears : [],\n                    });\n\n                    return;\n                }\n\n                const academicYears = result.academic_years.map(academicYear =>\n                    parseInt(academicYear.academic_year_start),\n                );\n\n                const activeYear = academicYears[0];\n\n                this.setState({\n                    activeYear : activeYear,\n                    academicYears : academicYears,\n                });\n            })\n            .catch(error => this.setState({\n                error : error,\n            }));\n    }\n\n    setActiveYear(year) {\n        this.setState({\n            activeYear : year,\n        });\n    }\n\n    setActiveTerm(term) {\n        this.setState({\n            activeTerm : term,\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={this.fetchYears}>\n                    {this.state.error.toString()}\n                </ErrorState>\n            );\n        }\n\n        if (this.state.academicYears === null) {\n            return <LoadingSpinner/>;\n        }\n\n        return (\n            <div>\n                <UnitsReportBar\n                    academicYears={this.state.academicYears}\n                    activeYear={this.state.activeYear}\n                    activeTerm={this.state.activeTerm}\n                    setActiveYear={this.setActiveYear}\n                    setActiveTerm={this.setActiveTerm}/>\n\n                <UnitsReport\n                    year={this.state.activeYear}\n                    term={this.state.activeTerm}/>\n            </div>\n        );\n    }\n}\n\nclass UnitsReportBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onActiveYearChange = this.onActiveYearChange.bind(this);\n    }\n\n    onActiveYearChange(event) {\n        this.props.setActiveYear(event.target.value);\n    }\n\n    render() {\n        const academicYears = this.props.academicYears.map(year =>\n            <option value={year}\n                    key={year}>{`${year} - ${year + 1}`}</option>,\n        );\n\n        return (\n            <ReportBar>\n                <Form inline>\n                    <FormGroup className=\"mr-4\">\n                        <Label for=\"academic-year\"\n                               className=\"text-white mr-3\">Academic Year</Label>\n                        <Input type=\"select\"\n                               className=\"btn-outline-light\"\n                               defaultValue={this.props.activeYear}\n                               onChange={this.onActiveYearChange}>\n                            {academicYears}\n                        </Input>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"term\"\n                               className=\"text-white mr-3\">Term</Label>\n                        <ButtonGroup>\n                            <Button outline\n                                    color=\"light\"\n                                    onClick={() => this.props.setActiveTerm(1)}\n                                    active={this.props.activeTerm === 1}>1</Button>\n                            <Button outline\n                                    color=\"light\"\n                                    onClick={() => this.props.setActiveTerm(2)}\n                                    active={this.props.activeTerm === 2}>2</Button>\n                            <Button outline\n                                    color=\"light\"\n                                    onClick={() => this.props.setActiveTerm(3)}\n                                    active={this.props.activeTerm === 3}>3</Button>\n                        </ButtonGroup>\n                    </FormGroup>\n                </Form>\n\n            </ReportBar>\n        );\n    }\n}\n\nclass UnitsReport extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            institutions : null,\n            error : null,\n        };\n\n        this.fetchReport(this.props.year, this.props.term);\n    }\n\n    fetchReport(year, term) {\n        if (this.state.error) {\n            this.setState({\n                error : null,\n            });\n        }\n\n        makeReportQuery(year, term)\n            .done(institutions => this.setState({\n                institutions : institutions,\n            }))\n            .fail(error => this.setState({\n                error : error,\n            }));\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            institutions : null,\n        });\n\n        this.fetchReport(props.year, props.term);\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorState onRetryButtonClick={() => this.fetchReport(this.props.year, this.props.term)}>\n                    {this.state.error.toString()}\n                </ErrorState>\n            );\n        }\n\n        if (this.state.institutions === null) {\n            return <LoadingSpinner/>;\n        }\n\n        const dateGenerated = moment().format(\"LLL\");\n        const year = parseInt(this.props.year);\n\n        return (\n            <div className=\"report-page\">\n                <ReportHead>{dateGenerated}</ReportHead>\n                <ReportTitleContainer>\n                    <h4>Term End Outbound and Inbound Units Report</h4>\n                    <h5>{`Academic Year ${year} - ${year + 1} Term ${this.props.term}`}</h5>\n                </ReportTitleContainer>\n                <UnitsReportTable institutions={this.state.institutions}/>\n            </div>\n        );\n    }\n}\n\nclass UnitsReportTable extends Component {\n    render() {\n\n        const rows = this.props.institutions.map((institution, index) =>\n            <UnitsReportTableRow institution={institution}\n                                 key={index}/>,\n        );\n\n        let totalOutboundUnits = 0;\n        let totalInboundUnits = 0;\n        let totalDeficit = 0;\n\n        this.props.institutions.forEach(institution => {\n            const outboundUnits = institution.outbound_units_enrolled;\n            const inboundUnits = institution.inbound_units_enrolled;\n            const difference = outboundUnits - inboundUnits;\n\n            totalOutboundUnits += outboundUnits;\n            totalInboundUnits += inboundUnits;\n            totalDeficit += difference;\n        });\n\n        return (\n            <Table>\n                <thead>\n                <tr className=\"text-center\">\n                    <th>Institution</th>\n                    <th>Outbound Units</th>\n                    <th>Inbound Units</th>\n                    <th>Deficit (-) / Surplus (+)</th>\n                </tr>\n                </thead>\n                <tbody>\n                {rows}\n                </tbody>\n                <tfoot className=\"text-right\">\n                <tr>\n                    <th>Total</th>\n                    <th className=\"numeric\">{totalOutboundUnits}</th>\n                    <th className=\"numeric\">{totalInboundUnits}</th>\n                    <th className=\"numeric\">{totalDeficit}</th>\n                </tr>\n                </tfoot>\n            </Table>\n        );\n    }\n}\n\nclass UnitsReportTableRow extends Component {\n    render() {\n        const outboundUnitsEnrolled = this.props.institution.outbound_units_enrolled;\n        const inboundUnitsEnrolled = this.props.institution.inbound_units_enrolled;\n        const difference = outboundUnitsEnrolled - inboundUnitsEnrolled;\n\n        return (\n            <tr>\n                <td>{this.props.institution.institution}</td>\n                <td className=\"numeric text-right\">{outboundUnitsEnrolled}</td>\n                <td className=\"numeric text-right\">{inboundUnitsEnrolled}</td>\n                <td className=\"numeric text-right\">{difference}</td>\n            </tr>\n        );\n    }\n}\n\nexport default OutboundAndInboundUnits;"]}