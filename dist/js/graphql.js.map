{"version":3,"sources":["../../js/graphql.js"],"names":["graphql","object","xhr","XMLHttpRequest","responseType","open","serverURL","setRequestHeader","localStorage","token","onload","onResponse","response","send","JSON","stringify","query"],"mappings":";;;;;kBAEwBA,O;;AAFxB;;;;;;AAEe,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACpC,QAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,QAAIE,YAAJ,GAAmB,MAAnB;AACAF,QAAIG,IAAJ,CAAS,MAAT,EAAoB,mBAASC,SAA7B;AACAJ,QAAIK,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAL,QAAIK,gBAAJ,CAAqB,QAArB,EAA+B,kBAA/B;AACAL,QAAIK,gBAAJ,CAAqB,eAArB,EAAsC,WAAWC,aAAaC,KAA9D;AACAP,QAAIQ,MAAJ,GAAa;AAAA,eAAMT,OAAOU,UAAP,CAAkBT,IAAIU,QAAtB,CAAN;AAAA,KAAb;AACAV,QAAIW,IAAJ,CAASC,KAAKC,SAAL,CAAe,EAAEC,OAAQf,OAAOe,KAAjB,EAAf,CAAT;AACH","file":"graphql.js","sourcesContent":["import settings from \"./settings\";\n\nexport default function graphql(object) {\n    let xhr = new XMLHttpRequest();\n    xhr.responseType = \"json\";\n    xhr.open(\"POST\", `${settings.serverURL}/graphql/`);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.setRequestHeader(\"Authorization\", \"Token \" + localStorage.token);\n    xhr.onload = () => object.onResponse(xhr.response);\n    xhr.send(JSON.stringify({ query : object.query }));\n}\n"]}