{"version":3,"sources":["../../js/form_validation.js"],"names":["addValidation","object","inputs","button","customValidations","undefined","isEmpty","input","inputValue","val","length","validateInputs","buttonIsDisabled","each","index","item","forEach","text","validator","attr","on"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;AAWA,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC3B,QAAMC,SAASD,OAAOC,MAAtB;AACA,QAAMC,SAASF,OAAOE,MAAtB;AACA,QAAMC,oBAAoBH,OAAOG,iBAAP,KAA6BC,SAA7B,GAAyC,EAAzC,GAA8CJ,OAAOG,iBAA/E;;AAEA,aAASE,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,YAAMC,aAAa,sBAAED,KAAF,EAASE,GAAT,EAAnB;AACA,eAAOD,WAAWE,MAAX,KAAsB,CAA7B;AACH;;AAED,aAASC,cAAT,GAA0B;AACtB,YAAIC,mBAAmB,KAAvB;;AAEAV,eAAOW,IAAP,CAAY,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACzB,gBAAIT,QAAQS,IAAR,CAAJ,EAAmB;AACfH,mCAAmB,IAAnB;AACH;AACJ,SAJD;;AAMAR,0BAAkBY,OAAlB,CAA0B,gBAAQ;AAC9B,gBAAMC,OAAOF,KAAKR,KAAL,CAAWE,GAAX,EAAb;AACA,gBAAI,CAACM,KAAKG,SAAL,CAAeD,IAAf,CAAL,EAA2B;AACvBL,mCAAmB,IAAnB;AACH;AACJ,SALD;;AAOAT,eAAOgB,IAAP,CAAY,UAAZ,EAAwBP,gBAAxB;AACH;;AAEDT,WAAOgB,IAAP,CAAY,UAAZ,EAAwB,IAAxB;AACAjB,WAAOkB,EAAP,CAAU,OAAV,EAAmBT,cAAnB;AACAP,sBAAkBY,OAAlB,CAA0B;AAAA,eAAQD,KAAKR,KAAL,CAAWa,EAAX,CAAc,OAAd,EAAuBT,cAAvB,CAAR;AAAA,KAA1B;AACH;;kBAEcX,a","file":"form_validation.js","sourcesContent":["import $ from \"jquery\";\n\n/*\n *   Receives object of format:\n *   {\n *       inputs: $('.inputs'),\n *       button: $('#button'),\n *       customValidations: [{\n *           input: $('#specific-input'),\n *           validator: (String) => Bool\n *       }]\n *   }\n */\nfunction addValidation(object) {\n    const inputs = object.inputs;\n    const button = object.button;\n    const customValidations = object.customValidations === undefined ? [] : object.customValidations;\n\n    function isEmpty(input) {\n        const inputValue = $(input).val();\n        return inputValue.length === 0;\n    }\n\n    function validateInputs() {\n        let buttonIsDisabled = false;\n\n        inputs.each((index, item) => {\n            if (isEmpty(item)) {\n                buttonIsDisabled = true;\n            }\n        });\n\n        customValidations.forEach(item => {\n            const text = item.input.val();\n            if (!item.validator(text)) {\n                buttonIsDisabled = true;\n            }\n        });\n\n        button.attr(\"disabled\", buttonIsDisabled);\n    }\n\n    button.attr(\"disabled\", true);\n    inputs.on(\"input\", validateInputs);\n    customValidations.forEach(item => item.input.on(\"input\", validateInputs));\n}\n\nexport default addValidation;"]}